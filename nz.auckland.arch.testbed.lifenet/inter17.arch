<?xml version="1.0" encoding="ASCII"?>
<arch:DesignModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arch="http://www.example.org/arch" name="inter17">
  <component name="LifeBand" type="client" deploymentnode="//@host.4/@node.0">
    <port name="alert" role="//@connector.7/@role.0" type="request,OutboundPort">
      <events name="onalert"/>
    </port>
  </component>
  <component name="SOSGateway" type="client,server" deploymentnode="//@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
    <port name="sos" role="//@connector.0/@role.0 //@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
      <events name="acknowledge" next="//@component.1/@port.0/@events.1"/>
      <events name="alert"/>
    </port>
  </component>
  <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
    <port name="accept" role="//@connector.0/@role.1 //@connector.1/@role.0 //@connector.2/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
      <events name="dispatched"/>
    </port>
  </component>
  <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
    <port name="gnotify" role="//@connector.1/@role.1 //@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
      <events name="acknowlege"/>
    </port>
  </component>
  <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
    <port name="cnotify" role="//@connector.1/@role.1 //@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
      <events name="acknowlege"/>
    </port>
  </component>
  <component name="Practitioner" type="repository" deploymentnode="//@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
    <port name="pgaccess" role="//@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
      <events name="return"/>
    </port>
    <port name="pgupdate" role="//@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
      <events name="updated"/>
    </port>
  </component>
  <component name="EmCenter" type="readendpoint,datareader,repository" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
    <port name="emaccess" role="//@connector.2/@role.1 //@connector.3/@role.0" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
      <events name="emaccessed"/>
    </port>
    <port name="emupdate" role="//@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
      <events name="updated"/>
    </port>
  </component>
  <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
    <port name="ptaccess" role="//@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
      <events name="ptaccessed"/>
    </port>
    <port name="ptupdate" role="//@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
      <events name="ptcommit"/>
    </port>
  </component>
  <component name="BackOffice" type="datawriter" deploymentnode="//@host.6/@node.0" securityCharacters="LeastPriviledge">
    <port name="updateprofile" role="//@connector.5/@role.0 //@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
      <events name="issueupdate"/>
    </port>
  </component>
  <component name="HospitalMgmt" type="datawriter" deploymentnode="//@host.5/@node.0">
    <port name="updaterec" role="//@connector.8/@role.0" type="write,OutboundPort">
      <events name="updated"/>
    </port>
  </component>
  <component name="GuardnotiLog" type="eventlogger">
    <port name="logguardnoti" role="//@connector.1/@role.2" type="log,InboundPort">
      <events name="logged"/>
    </port>
  </component>
  <component name="PatientBlockchain" type="blockchain">
    <port name="append" type="bcstore,InboundPort">
      <events name="appended"/>
    </port>
    <port name="access" type="blocksupply,InboundPort">
      <events name="accessed"/>
    </port>
  </component>
  <component name="EmupwireCommandLog" type="commanddb">
    <port name="logemupwire" role="//@connector.5/@role.2" type="logcommand,InboundPort">
      <events name="logged"/>
    </port>
  </component>
  <component name="PgupwireCommandLog" type="commanddb">
    <port name="logpgupwire" role="//@connector.6/@role.2" type="logcommand,InboundPort">
      <events name="logged"/>
    </port>
  </component>
  <connector name="dispatchwire" type="CSConnector" connectortype="//@archstyle.0/@connectortype.0">
    <role name="requester" roletype="//@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@connector.0"/>
    <role name="responder" roletype="//@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@connector.2/@role.0" connector="//@connector.0"/>
    <communicationlink href="data.json#//@link.0"/>
  </connector>
  <connector name="guardnoti" type="ESConnector" connectortype="//@archstyle.2/@connectortype.0" securityCharacters="DenialOfServiceConnector">
    <role name="eventpublisher" roletype="//@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@connector.1"/>
    <role name="eventsubscriber" roletype="//@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@connector.4/@role.0" connector="//@connector.1"/>
    <role name="eventstore" type="in">
      <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
      <connector href="target.arch#//@connector.1"/>
    </role>
    <communicationlink href="data.json#//@link.3"/>
    <communicationlink href="data.json#//@link.4"/>
  </connector>
  <connector name="emwire" type="QRConnector" connectortype="//@archstyle.4/@connectortype.0">
    <role name="querier" roletype="//@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@connector.1/@role.0" connector="//@connector.2"/>
    <role name="readstore" roletype="//@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@connector.3/@role.0" connector="//@connector.2"/>
  </connector>
  <connector name="pgwire" type="QRConnector" connectortype="//@archstyle.4/@connectortype.0">
    <role name="querier" roletype="//@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@connector.3"/>
    <role name="readstore" roletype="//@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@connector.3"/>
  </connector>
  <connector name="ptwire" type="REConnector" connectortype="//@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
    <role name="reader" roletype="//@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@connector.4"/>
    <role name="readstorage" roletype="//@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@connector.4"/>
    <communicationlink href="data.json#//@link.6"/>
    <communicationlink href="data.json#//@link.7"/>
  </connector>
  <connector name="emupwire" type="CRConnector" connectortype="//@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
    <role name="commander" roletype="//@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@connector.6/@role.0" connector="//@connector.5"/>
    <role name="readstore" roletype="//@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@connector.5"/>
    <role name="commandstore" type="in">
      <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
      <connector href="target.arch#//@connector.5"/>
    </role>
    <communicationlink href="data.json#//@link.8"/>
  </connector>
  <connector name="pgupwire" type="CRConnector" connectortype="//@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
    <role name="commander" roletype="//@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@connector.6"/>
    <role name="readstore" roletype="//@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@connector.6"/>
    <role name="commandstore" type="in">
      <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
      <connector href="target.arch#//@connector.6"/>
    </role>
    <communicationlink href="data.json#//@link.8"/>
  </connector>
  <connector name="soswire" type="CSConnector" connectortype="//@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
    <role name="requester" roletype="//@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@connector.7"/>
    <role name="responder" roletype="//@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@connector.0/@role.0" connector="//@connector.7"/>
    <communicationlink href="data.json#//@link.5"/>
  </connector>
  <connector name="ptupwire" type="WRConnector" connectortype="//@archstyle.6/@connectortype.0">
    <role name="writer" roletype="//@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@connector.8"/>
    <role name="writestorage" roletype="//@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@connector.8"/>
  </connector>
  <archstyle name="client-server">
    <connectortype name="CSConnector">
      <roletype name="requester" porttype="//@archstyle.0/@componenttype.0/@porttype.0">
        <event name="request" next="//@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
        <event xsi:type="arch:Channel" name="res" next="//@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
        <event name="process" next="//@archstyle.0/@connectortype.0/@roletype.0/@event.4"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="responder" porttype="//@archstyle.0/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="invoke" next="//@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
        <event name="process" next="//@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
        <event xsi:type="arch:Channel" name="res" type="output" bind="//@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="client">
      <porttype name="request"/>
    </componenttype>
    <componenttype name="server">
      <porttype name="response"/>
    </componenttype>
  </archstyle>
  <archstyle name="publish-subscribe">
    <connectortype name="PSConnector" eaConnector="//@archstyle.0/@connectortype.0">
      <roletype name="publisher" porttype="//@archstyle.1/@componenttype.0/@porttype.0">
        <event name="process" next="//@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="pub" next="//@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="subscriber" porttype="//@archstyle.1/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="pub" next="//@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="process"/>
      </roletype>
    </connectortype>
    <componenttype name="broadcaster">
      <porttype name="broadcast"/>
    </componenttype>
    <componenttype name="listener">
      <porttype name="listen"/>
    </componenttype>
  </archstyle>
  <archstyle name="event-sourcing">
    <connectortype name="ESConnector">
      <roletype name="eventpublisher" porttype="//@archstyle.2/@componenttype.0/@porttype.0">
        <event name="process" next="//@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="pevt" next="//@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
        <event xsi:type="arch:Channel" name="sevt" next="//@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
        <event xsi:type="arch:Channel" name="bevt" next="//@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
        <event name="broadcast" next="//@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="eventsubscriber" porttype="//@archstyle.2/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="bevt" next="//@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="process"/>
      </roletype>
      <roletype name="eventstore" porttype="//@archstyle.2/@componenttype.2/@porttype.0">
        <event xsi:type="arch:Channel" name="pevt" next="//@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
        <event name="process" next="//@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
        <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
        <event name="persist" next="//@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="eventsource">
      <porttype name="publish"/>
    </componenttype>
    <componenttype name="eventconsumer">
      <porttype name="listen"/>
    </componenttype>
    <componenttype name="eventlogger">
      <porttype name="log"/>
    </componenttype>
  </archstyle>
  <archstyle name="command-responsibility">
    <connectortype name="CRConnector">
      <roletype name="readstore" porttype="//@archstyle.3/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="stmt" next="//@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
        <event name="process" next="//@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
        <event name="persist"/>
      </roletype>
      <roletype name="commander" porttype="//@archstyle.3/@componenttype.0/@porttype.0">
        <event name="process" next="//@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
        <event xsi:type="arch:Channel" name="stmt" next="//@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
        <event name="Skip"/>
        <event xsi:type="arch:Channel" name="cmmd" next="//@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
      </roletype>
      <roletype name="commandstore" porttype="//@archstyle.3/@componenttype.2/@porttype.0">
        <event xsi:type="arch:Channel" name="cmmd" next="//@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
        <event name="process" next="//@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
        <event name="persist"/>
      </roletype>
    </connectortype>
    <componenttype name="commandendpoint">
      <porttype name="issue"/>
    </componenttype>
    <componenttype name="viewdb">
      <porttype name="update"/>
    </componenttype>
    <componenttype name="commanddb">
      <porttype name="logcommand"/>
    </componenttype>
  </archstyle>
  <archstyle name="query-responsibility">
    <connectortype name="QRConnector">
      <roletype name="querier" porttype="//@archstyle.4/@componenttype.0/@porttype.0">
        <event name="process" next="//@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
        <event xsi:type="arch:Channel" name="stmt" next="//@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
        <event xsi:type="arch:Channel" name="res" next="//@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="readstore" porttype="//@archstyle.4/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="stmt" next="//@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="process" next="//@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
        <event xsi:type="arch:Channel" name="res" type="output" bind="//@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="readendpoint">
      <porttype name="read"/>
    </componenttype>
    <componenttype name="viewdb">
      <porttype name="query"/>
    </componenttype>
  </archstyle>
  <archstyle name="repository-read">
    <connectortype name="REConnector">
      <roletype name="reader" porttype="//@archstyle.5/@componenttype.0/@porttype.0">
        <event name="process" next="//@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
        <event xsi:type="arch:Channel" name="res" next="//@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="readstorage" porttype="//@archstyle.5/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="invoke" next="//@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
        <event name="process" next="//@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
        <event xsi:type="arch:Channel" name="res" type="output" bind="//@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="datareader">
      <porttype name="read"/>
    </componenttype>
    <componenttype name="repository">
      <porttype name="access"/>
    </componenttype>
  </archstyle>
  <archstyle name="repository-write">
    <connectortype name="WRConnector">
      <roletype name="writer" porttype="//@archstyle.6/@componenttype.0/@porttype.0">
        <event name="request" next="//@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
        <event xsi:type="arch:Channel" name="res" next="//@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
        <event name="process" next="//@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="writestorage" porttype="//@archstyle.6/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="invoke" next="//@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
        <event name="process" next="//@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
        <event xsi:type="arch:Channel" name="res" type="output" bind="//@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="datawriter">
      <porttype name="write"/>
    </componenttype>
    <componenttype name="repository">
      <porttype name="store"/>
    </componenttype>
  </archstyle>
  <archstyle name="oracle">
    <connectortype name="IOConnector">
      <roletype name="blockstorage" porttype="//@archstyle.7/@componenttype.0/@porttype.0">
        <event xsi:type="arch:Channel" name="token" next="//@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
        <event name="process" next="//@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
        <event name="stored"/>
      </roletype>
      <roletype name="extsupplier" porttype="//@archstyle.7/@componenttype.1/@porttype.0">
        <event name="process" next="//@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
        <event xsi:type="arch:Channel" name="token" type="output" bind="//@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
      </roletype>
    </connectortype>
    <componenttype name="blockchain">
      <porttype name="bcstore"/>
    </componenttype>
    <componenttype name="oracle">
      <porttype name="orafeed"/>
    </componenttype>
  </archstyle>
  <archstyle name="reverse-oracle">
    <connectortype name="ROConnector">
      <roletype name="extquerier" porttype="//@archstyle.8/@componenttype.0/@porttype.0">
        <event name="request" next="//@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="uid" next="//@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
        <event xsi:type="arch:Channel" name="res" next="//@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
        <event name="process" next="//@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="blocksupplier" porttype="//@archstyle.8/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="uid" next="//@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="process" next="//@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
        <event xsi:type="arch:Channel" name="res" type="output" bind="//@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="reverseoracle">
      <porttype name="blockquery"/>
    </componenttype>
    <componenttype name="blockchain">
      <porttype name="blocksupply"/>
    </componenttype>
  </archstyle>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="/" counterExample="" visitedStates="2630" verifyTime="0.0670437" testport="//@component.0/@port.0" traceExample="init -> LifeBand_soswire_requester_request -> soswire_req!11 -> soswire_req?11 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!11 -> dispatchwire_req?11 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!11 -> emwire_stmt?11 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!11 -> pgwire_stmt?11 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!11 -> pgwire_res?11 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!11 -> emwire_res?11 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!11 -> guardnoti_pevt?11 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!11 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?11 -> guardnoti_bevt!11 -> guardnoti_bevt?11 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!11 -> ptwire_req?11 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!11 -> ptwire_res?11 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!11 -> dispatchwire_res?11 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!11 -> soswire_res?11 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> LifeBand.alert.onalert);&#xA;">
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.0">
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.1/@port.0/@events.0" nextExpr="//@verifyProperty.0/@ltlexpr.0/@expr.0"/>
    </ltlexpr>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="/" counterExample="init -> LifeBand_soswire_requester_request -> soswire_req!73 -> soswire_req?73 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!73 -> dispatchwire_req?73 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_emwire_reader_request -> emwire_req!73 -> emwire_req?73 -> EmCenter_emwire_readstorage_invoke -> EmCenter_pgwire_reader_request -> pgwire_req!73 -> pgwire_req?73 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!73 -> pgwire_res?73 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> EmCenter_pgwire_reader_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!73 -> emwire_res?73 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!73 -> guardnoti_pub?73 -> LifeCare_ptwire_reader_request -> ptwire_req!73 -> ptwire_req?73 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!73 -> ptwire_res?73 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!73 -> dispatchwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!73 -> soswire_res?73 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" visitedStates="4233" verifyTime="0.10289999999999999" testport="//@component.0/@port.0" traceExample="init -> LifeBand_soswire_requester_request -> soswire_req!78 -> soswire_req?78 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!78 -> dispatchwire_req?78 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!78 -> emwire_stmt?78 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!78 -> pgwire_stmt?78 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!78 -> pgwire_res?78 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!78 -> emwire_res?78 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!78 -> guardnoti_pevt?78 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!78 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?78 -> guardnoti_bevt!78 -> guardnoti_bevt?78 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!78 -> ptwire_req?78 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!78 -> ptwire_res?78 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!78 -> dispatchwire_res?78 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!78 -> soswire_res?78 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process">
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.1">
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@verifyProperty.1/@ltlexpr.0/@expr.0"/>
    </ltlexpr>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="/" counterExample="" visitedStates="1794" verifyTime="0.0497335" testport="//@component.0/@port.0" traceExample="init -> LifeBand_soswire_requester_request -> soswire_req!84 -> soswire_req?84 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!84 -> dispatchwire_req?84 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!84 -> emwire_stmt?84 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!84 -> pgwire_stmt?84 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!84 -> pgwire_res?84 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!84 -> emwire_res?84 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!84 -> guardnoti_pevt?84 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!84 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?84 -> guardnoti_bevt!84 -> guardnoti_bevt?84 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!84 -> ptwire_req?84 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!84 -> ptwire_res?84 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!84 -> dispatchwire_res?84 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!84 -> soswire_res?84 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed);&#xA;">
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.2">
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.2/@port.0/@events.0" nextExpr="//@verifyProperty.2/@ltlexpr.0/@expr.0"/>
    </ltlexpr>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="/" counterExample="" visitedStates="2155" verifyTime="0.0596465" testport="//@component.0/@port.0" traceExample="init -> LifeBand_soswire_requester_request -> soswire_req!89 -> soswire_req?89 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!89 -> dispatchwire_req?89 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!89 -> emwire_stmt?89 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!89 -> pgwire_stmt?89 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!89 -> pgwire_res?89 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!89 -> emwire_res?89 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!89 -> guardnoti_pevt?89 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!89 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?89 -> guardnoti_bevt!89 -> guardnoti_bevt?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!89 -> ptwire_req?89 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!89 -> ptwire_res?89 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!89 -> dispatchwire_res?89 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!89 -> soswire_res?89 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process">
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.3">
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.4/@port.0/@events.0" nextExpr="//@verifyProperty.3/@ltlexpr.0/@expr.0"/>
    </ltlexpr>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="/" counterExample="" visitedStates="2155" verifyTime="0.0566596" testport="//@component.0/@port.0" traceExample="init -> LifeBand_soswire_requester_request -> soswire_req!42 -> soswire_req?42 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!42 -> dispatchwire_req?42 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!42 -> emwire_stmt?42 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!42 -> pgwire_stmt?42 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!42 -> pgwire_res?42 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!42 -> emwire_res?42 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!42 -> guardnoti_pevt?42 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!42 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?42 -> guardnoti_bevt!42 -> guardnoti_bevt?42 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!42 -> ptwire_req?42 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!42 -> ptwire_res?42 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!42 -> dispatchwire_res?42 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!42 -> soswire_res?42 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.4">
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.3/@port.0/@events.0" nextExpr="//@verifyProperty.4/@ltlexpr.0/@expr.1"/>
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
    </ltlexpr>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch2-command" visitedStates="4840" verifyTime="0.1432533" testport="//@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!16 -> pgupwire_cmmd!16 -> pgupwire_cmmd?16 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!16 -> emupwire_cmmd!16 -> emupwire_cmmd?16 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?16 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?16 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[]  (BackOffice.updateprofile.issueupdate -> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.5">
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.5/@ltlexpr.0/@expr.1">
        <event href="target.arch#//@component.8/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
        <role href="target.arch#//@connector.5/@role.2"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.5"/>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch3-command" visitedStates="4708" verifyTime="0.1310857" testport="//@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!96 -> pgupwire_cmmd!96 -> pgupwire_cmmd?96 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!96 -> emupwire_cmmd!96 -> emupwire_cmmd?96 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?96 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?96 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[]  (BackOffice.updateprofile.issueupdate -> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.6">
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.6/@ltlexpr.0/@expr.1">
        <event href="target.arch#//@component.8/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
        <role href="target.arch#//@connector.6/@role.2"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.6"/>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch1-eventsource" visitedStates="2511" verifyTime="0.0628372" testport="//@component.0/@port.0" traceExample="init -> LifeBand_soswire_requester_request -> soswire_req!43 -> soswire_req?43 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!43 -> dispatchwire_req?43 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!43 -> emwire_stmt?43 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!43 -> pgwire_stmt?43 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!43 -> pgwire_res?43 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!43 -> emwire_res?43 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!43 -> guardnoti_pevt?43 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!43 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?43 -> guardnoti_bevt!43 -> guardnoti_bevt?43 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!43 -> ptwire_req?43 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!43 -> ptwire_res?43 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!43 -> dispatchwire_res?43 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!43 -> soswire_res?43 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> GuardnotiLog.guardnoti.eventstore.persist);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.7">
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.7/@ltlexpr.0/@expr.1">
        <event href="target.arch#//@component.2/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
        <role href="target.arch#//@connector.1/@role.2"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.1"/>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch4-query" visitedStates="1803" verifyTime="0.0482251" testport="//@component.0/@port.0" traceExample="init -> LifeBand_soswire_requester_request -> soswire_req!71 -> soswire_req?71 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!71 -> dispatchwire_req?71 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!71 -> emwire_stmt?71 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!71 -> pgwire_stmt?71 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!71 -> pgwire_res?71 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!71 -> emwire_res?71 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!71 -> guardnoti_pevt?71 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!71 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?71 -> guardnoti_bevt!71 -> guardnoti_bevt?71 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!71 -> ptwire_req?71 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!71 -> ptwire_res?71 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!71 -> dispatchwire_res?71 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!71 -> soswire_res?71 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstore.process);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.8">
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.8/@ltlexpr.0/@expr.1">
        <event href="target.arch#//@component.2/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
        <role href="target.arch#//@connector.2/@role.1"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.2"/>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch5-query" visitedStates="1799" verifyTime="0.0504591" testport="//@component.0/@port.0" traceExample="init -> LifeBand_soswire_requester_request -> soswire_req!21 -> soswire_req?21 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!21 -> dispatchwire_req?21 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!21 -> emwire_stmt?21 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!21 -> pgwire_stmt?21 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!21 -> pgwire_res?21 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!21 -> emwire_res?21 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!21 -> guardnoti_pevt?21 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!21 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?21 -> guardnoti_bevt!21 -> guardnoti_bevt?21 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!21 -> ptwire_req?21 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!21 -> ptwire_res?21 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!21 -> dispatchwire_res?21 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!21 -> soswire_res?21 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> Practitioner.pgwire.readstore.process);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.9">
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.9/@ltlexpr.0/@expr.1">
        <event href="target.arch#//@component.2/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
        <role href="target.arch#//@connector.3/@role.1"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.3"/>
  </verifyProperty>
  <host name="AppServer">
    <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@component.1">
      <port name="port" portNumber="25555" node="//@host.0/@node.0" namedport="//@component.1/@port.0" hasFirewall="true"/>
      <port name="port" portNumber="8089" node="//@host.0/@node.0" namedport="//@component.1/@port.0"/>
    </node>
  </host>
  <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
    <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@component.2 //@component.6 //@component.5">
      <port name="port" portNumber="8080" node="//@host.1/@node.0" namedport="//@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
      <port name="port" portNumber="23333" node="//@host.1/@node.0" namedport="//@component.2/@port.0"/>
      <port name="port" portNumber="8089" node="//@host.1/@node.0" namedport="//@component.6/@port.1 //@component.5/@port.1"/>
    </node>
  </host>
  <host name="Mobile1">
    <node type="APPLICATION_CONTAINER" name="Android1" component="//@component.3">
      <port name="port" portNumber="27877" node="//@host.2/@node.0" namedport="//@component.3/@port.0"/>
      <port name="port" portNumber="25123" node="//@host.2/@node.0" namedport="//@component.3/@port.0"/>
    </node>
  </host>
  <host name="Mobile2">
    <node name="Android2" component="//@component.4">
      <port name="port" portNumber="27889" node="//@host.3/@node.0" namedport="//@component.4/@port.0"/>
      <port name="port" portNumber="25124" node="//@host.3/@node.0" namedport="//@component.4/@port.0"/>
    </node>
  </host>
  <host name="Wristband">
    <node type="APPLICATION_CONTAINER" name="Android0" component="//@component.0">
      <port name="port" portNumber="14555" node="//@host.4/@node.0" namedport="//@component.0/@port.0"/>
    </node>
  </host>
  <host name="HMS">
    <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@component.7 //@component.9">
      <port name="port" portNumber="28855" node="//@host.5/@node.0" namedport="//@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
    </node>
  </host>
  <host name="BackOfficeServer">
    <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@component.8">
      <port name="port" portNumber="12243" node="//@host.6/@node.0" namedport="//@component.8/@port.0"/>
    </node>
  </host>
  <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@host.0/@node.0/@port.0" target="//@host.1/@node.0/@port.0"/>
  <link name="link2"/>
  <link name="link3"/>
  <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@host.1/@node.0/@port.1" target="//@host.2/@node.0/@port.0"/>
  <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@host.1/@node.0/@port.1" target="//@host.3/@node.0/@port.0"/>
  <link name="link6" networkType="INTERNET" source="//@host.4/@node.0/@port.0" target="//@host.0/@node.0/@port.1"/>
  <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@host.2/@node.0/@port.1" target="//@host.5/@node.0/@port.0"/>
  <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@host.3/@node.0/@port.1" target="//@host.5/@node.0/@port.0"/>
  <link name="link9" networkType="INTERNET" source="//@host.6/@node.0/@port.0" target="//@host.1/@node.0/@port.2"/>
  <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
  <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
  <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
  <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
  <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
  <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
  <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
</arch:DesignModel>
