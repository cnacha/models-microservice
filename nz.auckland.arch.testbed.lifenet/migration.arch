<?xml version="1.0" encoding="UTF-8"?>
<arch:MigrationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arch="http://www.example.org/arch">
  <source href="sample.arch#/"/>
  <target href="target.arch#/"/>
  <interimmodels description="setup database: pgupwirecommandlog" nextModel="//@interimmodels.1" isStable="true" name="setup-database">
    <designmodel name="inter0">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.0/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.0/@designmodel/@connector.0/@role.0 //@interimmodels.0/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.0/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.0/@designmodel/@connector.0/@role.1 //@interimmodels.0/@designmodel/@connector.1/@role.0 //@interimmodels.0/@designmodel/@connector.2/@role.0 //@interimmodels.0/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.0/@designmodel/@connector.1/@role.1 //@interimmodels.0/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.0/@designmodel/@connector.1/@role.1 //@interimmodels.0/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.0/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.0/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.0/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.0/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.0/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.0/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.0/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.0/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.0/@designmodel/@connector.5/@role.0 //@interimmodels.0/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.0/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.0/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.2/@role.0" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.4/@role.0" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.3/@role.0" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.3/@role.0" connector="//@interimmodels.0/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.1/@role.0" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.0/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.0/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.0/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.6/@role.0" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.0/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.0/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.0/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.0/@role.0" connector="//@interimmodels.0/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.0/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.0/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.0/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.17723139999999998" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!46 -> soswire_req?46 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!46 -> dispatchwire_req?46 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!46 -> emwire_req?46 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!46 -> pgwire_req?46 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!46 -> pgwire_res?46 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!46 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!46 -> guardnoti_pub?46 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!46 -> ptwire_req?46 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!46 -> ptwire_res?46 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?46 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!46 -> pgwire_req?46 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!46 -> pgwire_res?46 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!46 -> guardnoti_pub?46 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!46 -> ptwire_req?46 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!46 -> ptwire_res?46 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!46 -> dispatchwire_res?46 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!46 -> soswire_res?46" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0909605" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!85 -> soswire_req?85 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!85 -> dispatchwire_req?85 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!85 -> emwire_req?85 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!85 -> pgwire_req?85 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!85 -> pgwire_res?85 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!85 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!85 -> guardnoti_pub?85 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!85 -> ptwire_req?85 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!85 -> ptwire_res?85 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?85 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!85 -> pgwire_req?85 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!85 -> pgwire_res?85 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!85 -> guardnoti_pub?85 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!85 -> ptwire_req?85 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!85 -> ptwire_res?85 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!85 -> dispatchwire_res?85 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!85 -> soswire_res?85" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.0805019" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!97 -> soswire_req?97 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!97 -> dispatchwire_req?97 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!97 -> emwire_req?97 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!97 -> pgwire_req?97 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!97 -> pgwire_res?97 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!97 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!97 -> guardnoti_pub?97 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!97 -> ptwire_req?97 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!97 -> ptwire_res?97 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?97 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!97 -> pgwire_req?97 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!97 -> pgwire_res?97 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!97 -> guardnoti_pub?97 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!97 -> ptwire_req?97 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!97 -> ptwire_res?97 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!97 -> dispatchwire_res?97 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!97 -> soswire_res?97" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1127579" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!32 -> soswire_req?32 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!32 -> dispatchwire_req?32 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!32 -> emwire_req?32 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!32 -> pgwire_req?32 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!32 -> pgwire_res?32 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!32 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!32 -> guardnoti_pub?32 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!32 -> ptwire_req?32 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!32 -> ptwire_res?32 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?32 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!32 -> pgwire_req?32 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!32 -> pgwire_res?32 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!32 -> guardnoti_pub?32 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!32 -> ptwire_req?32 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!32 -> ptwire_res?32 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!32 -> dispatchwire_res?32 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!32 -> soswire_res?32" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.110301" testport="//@interimmodels.0/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!51 -> soswire_req?51 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!51 -> dispatchwire_req?51 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!51 -> emwire_req?51 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!51 -> pgwire_req?51 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!51 -> pgwire_res?51 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!51 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!51 -> guardnoti_pub?51 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!51 -> ptwire_req?51 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!51 -> ptwire_res?51 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?51 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!51 -> pgwire_req?51 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!51 -> pgwire_res?51 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!51 -> guardnoti_pub?51 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!51 -> ptwire_req?51 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!51 -> ptwire_res?51 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!51 -> dispatchwire_res?51 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!51 -> soswire_res?51" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.0/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.0/@designmodel/@component.2 //@interimmodels.0/@designmodel/@component.6 //@interimmodels.0/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.0/@designmodel/@host.1/@node.0" namedport="//@interimmodels.0/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.0/@designmodel/@host.1/@node.0" namedport="//@interimmodels.0/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.0/@designmodel/@host.1/@node.0" namedport="//@interimmodels.0/@designmodel/@component.6/@port.1 //@interimmodels.0/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.0/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.0/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.0/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.0/@designmodel/@host.4/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.0/@designmodel/@component.7 //@interimmodels.0/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.0/@designmodel/@host.5/@node.0" namedport="//@interimmodels.0/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.0/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.0/@designmodel/@host.6/@node.0" namedport="//@interimmodels.0/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.0/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.0/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="1" description="setup database: guardnotilog" nextModel="//@interimmodels.2" isStable="true" name="setup-database">
    <designmodel name="inter1">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.1/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.1/@designmodel/@connector.0/@role.0 //@interimmodels.1/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.1/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.1/@designmodel/@connector.0/@role.1 //@interimmodels.1/@designmodel/@connector.1/@role.0 //@interimmodels.1/@designmodel/@connector.2/@role.0 //@interimmodels.1/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.1/@designmodel/@connector.1/@role.1 //@interimmodels.1/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.1/@designmodel/@connector.1/@role.1 //@interimmodels.1/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.1/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.1/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.1/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.1/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.1/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.1/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.1/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.1/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.1/@designmodel/@connector.5/@role.0 //@interimmodels.1/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.1/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.1/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.2/@role.0" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.4/@role.0" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.3/@role.0" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.3/@role.0" connector="//@interimmodels.1/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.1/@role.0" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.1/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.1/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.1/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.6/@role.0" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.1/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.1/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.1/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.0/@role.0" connector="//@interimmodels.1/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.1/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.1/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.1/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.07950299999999999" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!18 -> soswire_req?18 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!18 -> dispatchwire_req?18 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!18 -> emwire_req?18 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!18 -> pgwire_req?18 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!18 -> pgwire_res?18 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!18 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!18 -> guardnoti_pub?18 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!18 -> ptwire_req?18 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!18 -> ptwire_res?18 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?18 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!18 -> pgwire_req?18 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!18 -> pgwire_res?18 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!18 -> guardnoti_pub?18 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!18 -> ptwire_req?18 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!18 -> ptwire_res?18 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!18 -> dispatchwire_res?18 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!18 -> soswire_res?18" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0792787" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!86 -> soswire_req?86 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!86 -> dispatchwire_req?86 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!86 -> emwire_req?86 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!86 -> pgwire_req?86 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!86 -> pgwire_res?86 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!86 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!86 -> guardnoti_pub?86 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!86 -> ptwire_req?86 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!86 -> ptwire_res?86 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?86 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!86 -> pgwire_req?86 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!86 -> pgwire_res?86 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!86 -> guardnoti_pub?86 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!86 -> ptwire_req?86 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!86 -> ptwire_res?86 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!86 -> dispatchwire_res?86 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!86 -> soswire_res?86" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.0780443" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!76 -> soswire_req?76 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!76 -> dispatchwire_req?76 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!76 -> emwire_req?76 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!76 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?76 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!76 -> pgwire_req?76 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!76 -> pgwire_res?76 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!76 -> guardnoti_pub?76 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!76 -> ptwire_res?76 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!76 -> dispatchwire_res?76 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!76 -> soswire_res?76" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11026359999999999" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!13 -> soswire_req?13 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!13 -> dispatchwire_req?13 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!13 -> emwire_req?13 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!13 -> pgwire_req?13 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!13 -> pgwire_res?13 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!13 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!13 -> guardnoti_pub?13 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!13 -> ptwire_req?13 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!13 -> ptwire_res?13 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?13 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!13 -> pgwire_req?13 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!13 -> pgwire_res?13 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!13 -> guardnoti_pub?13 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!13 -> ptwire_req?13 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!13 -> ptwire_res?13 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!13 -> dispatchwire_res?13 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!13 -> soswire_res?13" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.109747" testport="//@interimmodels.1/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!10 -> soswire_req?10 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!10 -> dispatchwire_req?10 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!10 -> emwire_req?10 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!10 -> pgwire_req?10 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!10 -> pgwire_res?10 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!10 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!10 -> guardnoti_pub?10 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!10 -> ptwire_req?10 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!10 -> ptwire_res?10 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?10 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!10 -> pgwire_req?10 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!10 -> pgwire_res?10 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!10 -> guardnoti_pub?10 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!10 -> ptwire_req?10 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!10 -> ptwire_res?10 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!10 -> dispatchwire_res?10 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!10 -> soswire_res?10" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.1/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.1/@designmodel/@component.2 //@interimmodels.1/@designmodel/@component.6 //@interimmodels.1/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.1/@designmodel/@host.1/@node.0" namedport="//@interimmodels.1/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.1/@designmodel/@host.1/@node.0" namedport="//@interimmodels.1/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.1/@designmodel/@host.1/@node.0" namedport="//@interimmodels.1/@designmodel/@component.6/@port.1 //@interimmodels.1/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.1/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.1/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.1/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.1/@designmodel/@host.4/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.1/@designmodel/@component.7 //@interimmodels.1/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.1/@designmodel/@host.5/@node.0" namedport="//@interimmodels.1/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.1/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.1/@designmodel/@host.6/@node.0" namedport="//@interimmodels.1/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.1/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.1/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="setup database: emupwirecommandlog" nextModel="//@interimmodels.3" isStable="true" name="setup-database">
    <designmodel name="inter2">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.2/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.2/@designmodel/@connector.0/@role.0 //@interimmodels.2/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.2/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.2/@designmodel/@connector.0/@role.1 //@interimmodels.2/@designmodel/@connector.1/@role.0 //@interimmodels.2/@designmodel/@connector.2/@role.0 //@interimmodels.2/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.2/@designmodel/@connector.1/@role.1 //@interimmodels.2/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.2/@designmodel/@connector.1/@role.1 //@interimmodels.2/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.2/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.2/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.2/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.2/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.2/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.2/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.2/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.2/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.2/@designmodel/@connector.5/@role.0 //@interimmodels.2/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.2/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.2/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.2/@role.0" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.4/@role.0" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.3/@role.0" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.3/@role.0" connector="//@interimmodels.2/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.1/@role.0" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.2/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.2/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.2/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.6/@role.0" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.2/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.2/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.2/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.0/@role.0" connector="//@interimmodels.2/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.2/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.2/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.2/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0861671" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!87 -> soswire_req?87 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!87 -> dispatchwire_req?87 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!87 -> emwire_req?87 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!87 -> pgwire_req?87 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!87 -> pgwire_res?87 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!87 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!87 -> guardnoti_pub?87 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!87 -> ptwire_req?87 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!87 -> ptwire_res?87 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?87 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!87 -> pgwire_req?87 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!87 -> pgwire_res?87 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!87 -> guardnoti_pub?87 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!87 -> ptwire_req?87 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!87 -> ptwire_res?87 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!87 -> dispatchwire_res?87 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!87 -> soswire_res?87" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0827169" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!59 -> soswire_req?59 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!59 -> dispatchwire_req?59 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!59 -> emwire_req?59 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!59 -> pgwire_req?59 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!59 -> pgwire_res?59 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!59 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!59 -> guardnoti_pub?59 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!59 -> ptwire_req?59 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!59 -> ptwire_res?59 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?59 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!59 -> pgwire_req?59 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!59 -> pgwire_res?59 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!59 -> guardnoti_pub?59 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!59 -> ptwire_req?59 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!59 -> ptwire_res?59 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!59 -> dispatchwire_res?59 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!59 -> soswire_res?59" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.081332" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!50 -> soswire_req?50 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!50 -> dispatchwire_req?50 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!50 -> emwire_req?50 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!50 -> pgwire_req?50 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!50 -> pgwire_res?50 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!50 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!50 -> guardnoti_pub?50 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!50 -> ptwire_req?50 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!50 -> ptwire_res?50 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?50 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!50 -> pgwire_req?50 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!50 -> pgwire_res?50 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!50 -> guardnoti_pub?50 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!50 -> ptwire_req?50 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!50 -> ptwire_res?50 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!50 -> dispatchwire_res?50 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!50 -> soswire_res?50" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1078808" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1108681" testport="//@interimmodels.2/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!23 -> soswire_req?23 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!23 -> dispatchwire_req?23 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!23 -> emwire_req?23 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!23 -> pgwire_req?23 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!23 -> pgwire_res?23 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!23 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!23 -> guardnoti_pub?23 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!23 -> ptwire_req?23 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!23 -> ptwire_res?23 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?23 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!23 -> pgwire_req?23 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!23 -> pgwire_res?23 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!23 -> guardnoti_pub?23 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!23 -> ptwire_req?23 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!23 -> ptwire_res?23 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!23 -> dispatchwire_res?23 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!23 -> soswire_res?23" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.2/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.2/@designmodel/@component.2 //@interimmodels.2/@designmodel/@component.6 //@interimmodels.2/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.2/@designmodel/@host.1/@node.0" namedport="//@interimmodels.2/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.2/@designmodel/@host.1/@node.0" namedport="//@interimmodels.2/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.2/@designmodel/@host.1/@node.0" namedport="//@interimmodels.2/@designmodel/@component.6/@port.1 //@interimmodels.2/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.2/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.2/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.2/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.2/@designmodel/@host.4/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.2/@designmodel/@component.7 //@interimmodels.2/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.2/@designmodel/@host.5/@node.0" namedport="//@interimmodels.2/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.2/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.2/@designmodel/@host.6/@node.0" namedport="//@interimmodels.2/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.2/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.2/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="setup database: practitioner" nextModel="//@interimmodels.4" isStable="true" name="setup-database">
    <designmodel name="inter3">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.3/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.3/@designmodel/@connector.0/@role.0 //@interimmodels.3/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.3/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.3/@designmodel/@connector.0/@role.1 //@interimmodels.3/@designmodel/@connector.1/@role.0 //@interimmodels.3/@designmodel/@connector.2/@role.0 //@interimmodels.3/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.3/@designmodel/@connector.1/@role.1 //@interimmodels.3/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.3/@designmodel/@connector.1/@role.1 //@interimmodels.3/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.3/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.3/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.3/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.3/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.3/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.3/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.3/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.3/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.3/@designmodel/@connector.5/@role.0 //@interimmodels.3/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.3/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.3/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.2/@role.0" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.4/@role.0" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.3/@role.0" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.3/@role.0" connector="//@interimmodels.3/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.1/@role.0" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.3/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.3/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.3/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.6/@role.0" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.3/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.3/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.3/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.0/@role.0" connector="//@interimmodels.3/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.3/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.3/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.3/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0798938" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!67 -> soswire_req?67 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!67 -> dispatchwire_req?67 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!67 -> emwire_req?67 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!67 -> pgwire_req?67 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!67 -> pgwire_res?67 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!67 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!67 -> guardnoti_pub?67 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!67 -> ptwire_req?67 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!67 -> ptwire_res?67 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?67 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!67 -> pgwire_req?67 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!67 -> pgwire_res?67 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!67 -> guardnoti_pub?67 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!67 -> ptwire_req?67 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!67 -> ptwire_res?67 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!67 -> dispatchwire_res?67 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!67 -> soswire_res?67" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.078128" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!53 -> soswire_req?53 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53 -> dispatchwire_req?53 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!53 -> emwire_req?53 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!53 -> pgwire_req?53 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!53 -> pgwire_res?53 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!53 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!53 -> guardnoti_pub?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?53 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!53 -> pgwire_req?53 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!53 -> pgwire_res?53 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!53 -> guardnoti_pub?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!53 -> dispatchwire_res?53 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!53 -> soswire_res?53" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.08304249999999999" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!75 -> soswire_req?75 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!75 -> dispatchwire_req?75 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!75 -> emwire_req?75 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!75 -> pgwire_req?75 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!75 -> pgwire_res?75 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!75 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!75 -> guardnoti_pub?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?75 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!75 -> pgwire_req?75 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!75 -> pgwire_res?75 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!75 -> guardnoti_pub?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!75 -> dispatchwire_res?75 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!75 -> soswire_res?75" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1082664" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!48 -> soswire_req?48 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!48 -> dispatchwire_req?48 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!48 -> emwire_req?48 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!48 -> pgwire_req?48 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!48 -> pgwire_res?48 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!48 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!48 -> guardnoti_pub?48 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!48 -> ptwire_req?48 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!48 -> ptwire_res?48 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?48 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!48 -> pgwire_req?48 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!48 -> pgwire_res?48 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!48 -> guardnoti_pub?48 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!48 -> ptwire_req?48 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!48 -> ptwire_res?48 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!48 -> dispatchwire_res?48 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!48 -> soswire_res?48" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1156021" testport="//@interimmodels.3/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!32 -> soswire_req?32 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!32 -> dispatchwire_req?32 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!32 -> emwire_req?32 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!32 -> pgwire_req?32 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!32 -> pgwire_res?32 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!32 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!32 -> guardnoti_pub?32 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!32 -> ptwire_req?32 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!32 -> ptwire_res?32 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?32 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!32 -> pgwire_req?32 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!32 -> pgwire_res?32 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!32 -> guardnoti_pub?32 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!32 -> ptwire_req?32 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!32 -> ptwire_res?32 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!32 -> dispatchwire_res?32 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!32 -> soswire_res?32" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.3/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.3/@designmodel/@component.2 //@interimmodels.3/@designmodel/@component.6 //@interimmodels.3/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.3/@designmodel/@host.1/@node.0" namedport="//@interimmodels.3/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.3/@designmodel/@host.1/@node.0" namedport="//@interimmodels.3/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.3/@designmodel/@host.1/@node.0" namedport="//@interimmodels.3/@designmodel/@component.6/@port.1 //@interimmodels.3/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.3/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.3/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.3/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.3/@designmodel/@host.4/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.3/@designmodel/@component.7 //@interimmodels.3/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.3/@designmodel/@host.5/@node.0" namedport="//@interimmodels.3/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.3/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.3/@designmodel/@host.6/@node.0" namedport="//@interimmodels.3/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.3/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.3/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="4" description="setup database: patientblockchain" nextModel="//@interimmodels.5" isStable="true" name="setup-database">
    <designmodel name="inter4">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.4/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.4/@designmodel/@connector.0/@role.0 //@interimmodels.4/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.4/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.4/@designmodel/@connector.0/@role.1 //@interimmodels.4/@designmodel/@connector.1/@role.0 //@interimmodels.4/@designmodel/@connector.2/@role.0 //@interimmodels.4/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.4/@designmodel/@connector.1/@role.1 //@interimmodels.4/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.4/@designmodel/@connector.1/@role.1 //@interimmodels.4/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.4/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.4/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.4/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.4/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.4/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.4/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.4/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.4/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.4/@designmodel/@connector.5/@role.0 //@interimmodels.4/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.4/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.4/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.2/@role.0" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.4/@role.0" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.3/@role.0" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.3/@role.0" connector="//@interimmodels.4/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.1/@role.0" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.4/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.4/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.4/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.6/@role.0" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.4/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.4/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.4/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.0/@role.0" connector="//@interimmodels.4/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.4/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.4/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.4/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0830312" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!43 -> soswire_req?43 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!43 -> dispatchwire_req?43 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!43 -> emwire_req?43 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!43 -> pgwire_req?43 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!43 -> pgwire_res?43 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!43 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!43 -> guardnoti_pub?43 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!43 -> ptwire_req?43 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!43 -> ptwire_res?43 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?43 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!43 -> pgwire_req?43 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!43 -> pgwire_res?43 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!43 -> guardnoti_pub?43 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!43 -> ptwire_req?43 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!43 -> ptwire_res?43 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!43 -> dispatchwire_res?43 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!43 -> soswire_res?43" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.1716605" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!97 -> soswire_req?97 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!97 -> dispatchwire_req?97 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!97 -> emwire_req?97 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!97 -> pgwire_req?97 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!97 -> pgwire_res?97 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!97 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!97 -> guardnoti_pub?97 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!97 -> ptwire_req?97 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!97 -> ptwire_res?97 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?97 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!97 -> pgwire_req?97 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!97 -> pgwire_res?97 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!97 -> guardnoti_pub?97 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!97 -> ptwire_req?97 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!97 -> ptwire_res?97 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!97 -> dispatchwire_res?97 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!97 -> soswire_res?97" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.0857254" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!28 -> soswire_req?28 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!28 -> dispatchwire_req?28 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!28 -> emwire_req?28 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!28 -> pgwire_req?28 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!28 -> pgwire_res?28 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!28 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!28 -> guardnoti_pub?28 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!28 -> ptwire_req?28 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!28 -> ptwire_res?28 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?28 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!28 -> pgwire_req?28 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!28 -> pgwire_res?28 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!28 -> guardnoti_pub?28 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!28 -> ptwire_req?28 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!28 -> ptwire_res?28 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!28 -> dispatchwire_res?28 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!28 -> soswire_res?28" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1136442" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!97 -> soswire_req?97 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!97 -> dispatchwire_req?97 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!97 -> emwire_req?97 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!97 -> pgwire_req?97 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!97 -> pgwire_res?97 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!97 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!97 -> guardnoti_pub?97 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!97 -> ptwire_req?97 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!97 -> ptwire_res?97 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?97 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!97 -> pgwire_req?97 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!97 -> pgwire_res?97 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!97 -> guardnoti_pub?97 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!97 -> ptwire_req?97 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!97 -> ptwire_res?97 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!97 -> dispatchwire_res?97 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!97 -> soswire_res?97" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.12112679999999999" testport="//@interimmodels.4/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!44 -> soswire_req?44 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!44 -> dispatchwire_req?44 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!44 -> emwire_req?44 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!44 -> pgwire_req?44 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!44 -> pgwire_res?44 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!44 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!44 -> guardnoti_pub?44 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!44 -> ptwire_req?44 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!44 -> ptwire_res?44 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?44 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!44 -> pgwire_req?44 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!44 -> pgwire_res?44 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!44 -> guardnoti_pub?44 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!44 -> ptwire_req?44 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!44 -> ptwire_res?44 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!44 -> dispatchwire_res?44 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!44 -> soswire_res?44" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.4/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.4/@designmodel/@component.2 //@interimmodels.4/@designmodel/@component.6 //@interimmodels.4/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.4/@designmodel/@host.1/@node.0" namedport="//@interimmodels.4/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.4/@designmodel/@host.1/@node.0" namedport="//@interimmodels.4/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.4/@designmodel/@host.1/@node.0" namedport="//@interimmodels.4/@designmodel/@component.6/@port.1 //@interimmodels.4/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.4/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.4/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.4/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.4/@designmodel/@host.4/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.4/@designmodel/@component.7 //@interimmodels.4/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.4/@designmodel/@host.5/@node.0" namedport="//@interimmodels.4/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.4/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.4/@designmodel/@host.6/@node.0" namedport="//@interimmodels.4/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.4/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.4/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="5" description="setup database: emcenter" nextModel="//@interimmodels.6" isStable="true" name="setup-database">
    <designmodel name="inter5">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.5/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.5/@designmodel/@connector.0/@role.0 //@interimmodels.5/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.5/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.5/@designmodel/@connector.0/@role.1 //@interimmodels.5/@designmodel/@connector.1/@role.0 //@interimmodels.5/@designmodel/@connector.2/@role.0 //@interimmodels.5/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.5/@designmodel/@connector.1/@role.1 //@interimmodels.5/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.5/@designmodel/@connector.1/@role.1 //@interimmodels.5/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.5/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.5/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.5/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.5/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.5/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.5/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.5/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.5/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.5/@designmodel/@connector.5/@role.0 //@interimmodels.5/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.5/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.5/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.2/@role.0" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.4/@role.0" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.3/@role.0" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.3/@role.0" connector="//@interimmodels.5/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.1/@role.0" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.5/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.5/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.5/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.6/@role.0" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.5/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.5/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.5/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.0/@role.0" connector="//@interimmodels.5/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.5/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.5/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.5/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.07930129999999999" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!18 -> soswire_req?18 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!18 -> dispatchwire_req?18 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!18 -> emwire_req?18 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!18 -> pgwire_req?18 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!18 -> pgwire_res?18 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!18 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!18 -> guardnoti_pub?18 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!18 -> ptwire_req?18 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!18 -> ptwire_res?18 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?18 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!18 -> pgwire_req?18 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!18 -> pgwire_res?18 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!18 -> guardnoti_pub?18 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!18 -> ptwire_req?18 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!18 -> ptwire_res?18 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!18 -> dispatchwire_res?18 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!18 -> soswire_res?18" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0998269" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!11 -> soswire_req?11 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!11 -> dispatchwire_req?11 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!11 -> emwire_req?11 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!11 -> pgwire_req?11 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!11 -> pgwire_res?11 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!11 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!11 -> guardnoti_pub?11 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!11 -> ptwire_req?11 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!11 -> ptwire_res?11 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?11 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!11 -> pgwire_req?11 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!11 -> pgwire_res?11 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!11 -> guardnoti_pub?11 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!11 -> ptwire_req?11 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!11 -> ptwire_res?11 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!11 -> dispatchwire_res?11 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!11 -> soswire_res?11" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.0798465" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!86 -> soswire_req?86 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!86 -> dispatchwire_req?86 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!86 -> emwire_req?86 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!86 -> pgwire_req?86 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!86 -> pgwire_res?86 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!86 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!86 -> guardnoti_pub?86 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!86 -> ptwire_req?86 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!86 -> ptwire_res?86 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?86 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!86 -> pgwire_req?86 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!86 -> pgwire_res?86 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!86 -> guardnoti_pub?86 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!86 -> ptwire_req?86 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!86 -> ptwire_res?86 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!86 -> dispatchwire_res?86 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!86 -> soswire_res?86" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1146908" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!14 -> soswire_req?14 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!14 -> dispatchwire_req?14 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!14 -> emwire_req?14 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!14 -> pgwire_req?14 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!14 -> pgwire_res?14 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!14 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!14 -> guardnoti_pub?14 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!14 -> ptwire_req?14 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!14 -> ptwire_res?14 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?14 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!14 -> pgwire_req?14 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!14 -> pgwire_res?14 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!14 -> guardnoti_pub?14 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!14 -> ptwire_req?14 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!14 -> ptwire_res?14 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!14 -> dispatchwire_res?14 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!14 -> soswire_res?14" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1159355" testport="//@interimmodels.5/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!82 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!82 -> guardnoti_pub?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.5/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.5/@designmodel/@component.2 //@interimmodels.5/@designmodel/@component.6 //@interimmodels.5/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.5/@designmodel/@host.1/@node.0" namedport="//@interimmodels.5/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.5/@designmodel/@host.1/@node.0" namedport="//@interimmodels.5/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.5/@designmodel/@host.1/@node.0" namedport="//@interimmodels.5/@designmodel/@component.6/@port.1 //@interimmodels.5/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.5/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.5/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.5/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.5/@designmodel/@host.4/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.5/@designmodel/@component.7 //@interimmodels.5/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.5/@designmodel/@host.5/@node.0" namedport="//@interimmodels.5/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.5/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.5/@designmodel/@host.6/@node.0" namedport="//@interimmodels.5/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.5/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.5/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="6" description="network route for connector:emupwire between: backoffice emupwirecommandlog " nextModel="//@interimmodels.7" isStable="true" name="network-route">
    <designmodel name="inter6">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.6/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.6/@designmodel/@connector.0/@role.0 //@interimmodels.6/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.6/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.6/@designmodel/@connector.0/@role.1 //@interimmodels.6/@designmodel/@connector.1/@role.0 //@interimmodels.6/@designmodel/@connector.2/@role.0 //@interimmodels.6/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.6/@designmodel/@connector.1/@role.1 //@interimmodels.6/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.6/@designmodel/@connector.1/@role.1 //@interimmodels.6/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.6/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.6/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.6/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.6/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.6/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.6/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.6/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.6/@designmodel/@connector.6/@role.0 //@interimmodels.6/@designmodel/@connector.5/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.6/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.6/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.6/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.2/@role.0" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.4/@role.0" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.3/@role.0" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.3/@role.0" connector="//@interimmodels.6/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.1/@role.0" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.6/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.6/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.6/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.6/@role.0" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.6/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.6/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.6/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.0/@role.0" connector="//@interimmodels.6/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.6/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.6/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.6/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0774871" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!95 -> soswire_req?95 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!95 -> dispatchwire_req?95 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!95 -> emwire_req?95 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!95 -> pgwire_req?95 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!95 -> pgwire_res?95 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!95 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!95 -> guardnoti_pub?95 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!95 -> ptwire_req?95 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!95 -> ptwire_res?95 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?95 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!95 -> pgwire_req?95 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!95 -> pgwire_res?95 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!95 -> guardnoti_pub?95 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!95 -> ptwire_req?95 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!95 -> ptwire_res?95 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!95 -> dispatchwire_res?95 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!95 -> soswire_res?95" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.09115179999999999" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!92 -> soswire_req?92 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!92 -> dispatchwire_req?92 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!92 -> emwire_req?92 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!92 -> pgwire_req?92 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!92 -> pgwire_res?92 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!92 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!92 -> guardnoti_pub?92 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!92 -> ptwire_req?92 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!92 -> ptwire_res?92 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?92 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!92 -> pgwire_req?92 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!92 -> pgwire_res?92 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!92 -> guardnoti_pub?92 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!92 -> ptwire_req?92 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!92 -> ptwire_res?92 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!92 -> dispatchwire_res?92 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!92 -> soswire_res?92" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.0789338" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!68 -> soswire_req?68 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!68 -> dispatchwire_req?68 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!68 -> emwire_req?68 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!68 -> pgwire_req?68 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!68 -> pgwire_res?68 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!68 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!68 -> guardnoti_pub?68 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!68 -> ptwire_req?68 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!68 -> ptwire_res?68 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?68 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!68 -> pgwire_req?68 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!68 -> pgwire_res?68 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!68 -> guardnoti_pub?68 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!68 -> ptwire_req?68 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!68 -> ptwire_res?68 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!68 -> dispatchwire_res?68 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!68 -> soswire_res?68" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1121894" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!80 -> soswire_req?80 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!80 -> dispatchwire_req?80 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!80 -> emwire_req?80 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!80 -> pgwire_req?80 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!80 -> pgwire_res?80 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!80 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!80 -> guardnoti_pub?80 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!80 -> ptwire_res?80 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?80 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!80 -> pgwire_req?80 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!80 -> pgwire_res?80 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!80 -> guardnoti_pub?80 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!80 -> ptwire_res?80 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!80 -> dispatchwire_res?80 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!80 -> soswire_res?80" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1061757" testport="//@interimmodels.6/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!36 -> soswire_req?36 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!36 -> dispatchwire_req?36 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!36 -> emwire_req?36 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!36 -> pgwire_req?36 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!36 -> pgwire_res?36 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!36 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!36 -> guardnoti_pub?36 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!36 -> ptwire_req?36 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!36 -> ptwire_res?36 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?36 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!36 -> pgwire_req?36 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!36 -> pgwire_res?36 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!36 -> guardnoti_pub?36 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!36 -> ptwire_req?36 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!36 -> ptwire_res?36 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!36 -> dispatchwire_res?36 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!36 -> soswire_res?36" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="28" verifyTime="0.0040596" testport="//@interimmodels.6/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.6/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.6/@designmodel/@component.2 //@interimmodels.6/@designmodel/@component.6 //@interimmodels.6/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.6/@designmodel/@host.1/@node.0" namedport="//@interimmodels.6/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.6/@designmodel/@host.1/@node.0" namedport="//@interimmodels.6/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.6/@designmodel/@host.1/@node.0" namedport="//@interimmodels.6/@designmodel/@component.6/@port.1 //@interimmodels.6/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.6/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.6/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.6/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.6/@designmodel/@host.4/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.6/@designmodel/@component.7 //@interimmodels.6/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.6/@designmodel/@host.5/@node.0" namedport="//@interimmodels.6/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.6/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.6/@designmodel/@host.6/@node.0" namedport="//@interimmodels.6/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.6/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.6/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="7" description="network route for connector:emupwire between: backoffice emcenter " nextModel="//@interimmodels.8" isStable="true" name="network-route">
    <designmodel name="inter7">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.7/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.7/@designmodel/@connector.0/@role.0 //@interimmodels.7/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.7/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.7/@designmodel/@connector.0/@role.1 //@interimmodels.7/@designmodel/@connector.1/@role.0 //@interimmodels.7/@designmodel/@connector.2/@role.0 //@interimmodels.7/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.7/@designmodel/@connector.1/@role.1 //@interimmodels.7/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.7/@designmodel/@connector.1/@role.1 //@interimmodels.7/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.7/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.7/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.7/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.7/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.7/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.7/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.7/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.7/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.7/@designmodel/@connector.6/@role.0 //@interimmodels.7/@designmodel/@connector.5/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.7/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.7/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.7/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.2/@role.0" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.4/@role.0" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.3/@role.0" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.3/@role.0" connector="//@interimmodels.7/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.1/@role.0" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.7/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.7/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.7/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.6/@role.0" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="WRConnector,RuleEventCommand" connectortype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.7/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.7/@designmodel/@connector.6"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.7/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.0/@role.0" connector="//@interimmodels.7/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.7/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.7/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.7/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0828341" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!20 -> soswire_req?20 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!20 -> dispatchwire_req?20 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!20 -> emwire_req?20 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!20 -> pgwire_req?20 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!20 -> pgwire_res?20 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!20 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!20 -> guardnoti_pub?20 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!20 -> ptwire_req?20 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!20 -> ptwire_res?20 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?20 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!20 -> pgwire_req?20 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!20 -> pgwire_res?20 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!20 -> guardnoti_pub?20 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!20 -> ptwire_req?20 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!20 -> ptwire_res?20 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!20 -> dispatchwire_res?20 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!20 -> soswire_res?20" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0806223" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!17 -> soswire_req?17 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!17 -> dispatchwire_req?17 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!17 -> emwire_req?17 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!17 -> pgwire_req?17 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!17 -> pgwire_res?17 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!17 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!17 -> guardnoti_pub?17 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!17 -> ptwire_req?17 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!17 -> ptwire_res?17 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?17 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!17 -> pgwire_req?17 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!17 -> pgwire_res?17 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!17 -> guardnoti_pub?17 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!17 -> ptwire_req?17 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!17 -> ptwire_res?17 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!17 -> dispatchwire_res?17 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!17 -> soswire_res?17" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.0808882" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!85 -> soswire_req?85 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!85 -> dispatchwire_req?85 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!85 -> emwire_req?85 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!85 -> pgwire_req?85 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!85 -> pgwire_res?85 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!85 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!85 -> guardnoti_pub?85 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!85 -> ptwire_req?85 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!85 -> ptwire_res?85 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?85 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!85 -> pgwire_req?85 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!85 -> pgwire_res?85 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!85 -> guardnoti_pub?85 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!85 -> ptwire_req?85 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!85 -> ptwire_res?85 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!85 -> dispatchwire_res?85 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!85 -> soswire_res?85" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11671759999999999" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!36 -> soswire_req?36 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!36 -> dispatchwire_req?36 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!36 -> emwire_req?36 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!36 -> pgwire_req?36 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!36 -> pgwire_res?36 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!36 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!36 -> guardnoti_pub?36 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!36 -> ptwire_req?36 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!36 -> ptwire_res?36 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?36 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!36 -> pgwire_req?36 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!36 -> pgwire_res?36 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!36 -> guardnoti_pub?36 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!36 -> ptwire_req?36 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!36 -> ptwire_res?36 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!36 -> dispatchwire_res?36 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!36 -> soswire_res?36" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.11745879999999999" testport="//@interimmodels.7/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!85 -> soswire_req?85 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!85 -> dispatchwire_req?85 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!85 -> emwire_req?85 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!85 -> pgwire_req?85 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!85 -> pgwire_res?85 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!85 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!85 -> guardnoti_pub?85 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!85 -> ptwire_req?85 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!85 -> ptwire_res?85 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?85 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!85 -> pgwire_req?85 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!85 -> pgwire_res?85 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!85 -> guardnoti_pub?85 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!85 -> ptwire_req?85 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!85 -> ptwire_res?85 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!85 -> dispatchwire_res?85 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!85 -> soswire_res?85" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="108" verifyTime="0.0081468" testport="//@interimmodels.7/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.7/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.7/@designmodel/@component.2 //@interimmodels.7/@designmodel/@component.6 //@interimmodels.7/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.7/@designmodel/@host.1/@node.0" namedport="//@interimmodels.7/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.7/@designmodel/@host.1/@node.0" namedport="//@interimmodels.7/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.7/@designmodel/@host.1/@node.0" namedport="//@interimmodels.7/@designmodel/@component.6/@port.1 //@interimmodels.7/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.7/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.7/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.7/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.7/@designmodel/@host.4/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.7/@designmodel/@component.7 //@interimmodels.7/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.7/@designmodel/@host.5/@node.0" namedport="//@interimmodels.7/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.7/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.7/@designmodel/@host.6/@node.0" namedport="//@interimmodels.7/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.7/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.7/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="8" description="network route for connector:pgupwire between: backoffice pgupwirecommandlog " nextModel="//@interimmodels.9" isStable="true" name="network-route">
    <designmodel name="inter8">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.8/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.8/@designmodel/@connector.0/@role.0 //@interimmodels.8/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.8/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.8/@designmodel/@connector.0/@role.1 //@interimmodels.8/@designmodel/@connector.1/@role.0 //@interimmodels.8/@designmodel/@connector.2/@role.0 //@interimmodels.8/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.8/@designmodel/@connector.1/@role.1 //@interimmodels.8/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.8/@designmodel/@connector.1/@role.1 //@interimmodels.8/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.8/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.8/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.8/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.8/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.8/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.8/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.8/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.8/@designmodel/@connector.5/@role.0 //@interimmodels.8/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.8/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.8/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.8/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.8/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.2/@role.0" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.4/@role.0" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.3/@role.0" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.3/@role.0" connector="//@interimmodels.8/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.1/@role.0" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.8/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.8/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.8/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.6/@role.0" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.8/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.8/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.8/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.0/@role.0" connector="//@interimmodels.8/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.8/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.8/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.8/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.1775227" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!80 -> soswire_req?80 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!80 -> dispatchwire_req?80 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!80 -> emwire_req?80 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!80 -> pgwire_req?80 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!80 -> pgwire_res?80 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!80 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!80 -> guardnoti_pub?80 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!80 -> ptwire_res?80 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?80 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!80 -> pgwire_req?80 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!80 -> pgwire_res?80 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!80 -> guardnoti_pub?80 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!80 -> ptwire_res?80 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!80 -> dispatchwire_res?80 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!80 -> soswire_res?80" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.09275069999999999" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!50 -> soswire_req?50 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!50 -> dispatchwire_req?50 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!50 -> emwire_req?50 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!50 -> pgwire_req?50 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!50 -> pgwire_res?50 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!50 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!50 -> guardnoti_pub?50 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!50 -> ptwire_req?50 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!50 -> ptwire_res?50 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?50 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!50 -> pgwire_req?50 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!50 -> pgwire_res?50 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!50 -> guardnoti_pub?50 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!50 -> ptwire_req?50 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!50 -> ptwire_res?50 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!50 -> dispatchwire_res?50 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!50 -> soswire_res?50" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.0974279" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1303654" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.12215119999999999" testport="//@interimmodels.8/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="728" verifyTime="0.0220859" testport="//@interimmodels.8/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="708" verifyTime="0.020037899999999997" testport="//@interimmodels.8/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!57 -> pgupwire_cmmd!57 -> pgupwire_cmmd?57 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!57 -> emupwire_cmmd!57 -> emupwire_cmmd?57 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?57 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.8/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.8/@designmodel/@component.2 //@interimmodels.8/@designmodel/@component.6 //@interimmodels.8/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.8/@designmodel/@host.1/@node.0" namedport="//@interimmodels.8/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.8/@designmodel/@host.1/@node.0" namedport="//@interimmodels.8/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.8/@designmodel/@host.1/@node.0" namedport="//@interimmodels.8/@designmodel/@component.6/@port.1 //@interimmodels.8/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.8/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.8/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.8/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.8/@designmodel/@host.4/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.8/@designmodel/@component.7 //@interimmodels.8/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.8/@designmodel/@host.5/@node.0" namedport="//@interimmodels.8/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.8/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.8/@designmodel/@host.6/@node.0" namedport="//@interimmodels.8/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.8/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.8/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="9" description="network route for connector:pgupwire between: backoffice practitioner " nextModel="//@interimmodels.10" isStable="true" name="network-route">
    <designmodel name="inter9">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.9/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.9/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.9/@designmodel/@connector.0/@role.0 //@interimmodels.9/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.9/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.9/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.9/@designmodel/@connector.0/@role.1 //@interimmodels.9/@designmodel/@connector.1/@role.0 //@interimmodels.9/@designmodel/@connector.2/@role.0 //@interimmodels.9/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.9/@designmodel/@connector.1/@role.1 //@interimmodels.9/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.9/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.9/@designmodel/@connector.1/@role.1 //@interimmodels.9/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.9/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.9/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.9/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.9/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.9/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.9/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.9/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.9/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.9/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.9/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.9/@designmodel/@connector.5/@role.0 //@interimmodels.9/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.9/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.9/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.9/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.9/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.2/@role.0" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.4/@role.0" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.3/@role.0" connector="//@interimmodels.9/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.3/@role.0" connector="//@interimmodels.9/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.1/@role.0" connector="//@interimmodels.9/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.9/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.9/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.9/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.6/@role.0" connector="//@interimmodels.9/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.9/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.9/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.9/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.9/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.0/@role.0" connector="//@interimmodels.9/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.9/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.9/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.9/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0957507" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!86 -> soswire_req?86 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!86 -> dispatchwire_req?86 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!86 -> emwire_req?86 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!86 -> pgwire_req?86 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!86 -> pgwire_res?86 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!86 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!86 -> guardnoti_pub?86 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!86 -> ptwire_req?86 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!86 -> ptwire_res?86 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?86 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!86 -> pgwire_req?86 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!86 -> pgwire_res?86 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!86 -> guardnoti_pub?86 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!86 -> ptwire_req?86 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!86 -> ptwire_res?86 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!86 -> dispatchwire_res?86 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!86 -> soswire_res?86" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0946571" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!38 -> soswire_req?38 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!38 -> dispatchwire_req?38 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!38 -> emwire_req?38 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!38 -> pgwire_req?38 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!38 -> pgwire_res?38 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!38 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!38 -> guardnoti_pub?38 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!38 -> ptwire_req?38 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!38 -> ptwire_res?38 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?38 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!38 -> pgwire_req?38 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!38 -> pgwire_res?38 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!38 -> guardnoti_pub?38 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!38 -> ptwire_req?38 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!38 -> ptwire_res?38 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!38 -> dispatchwire_res?38 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!38 -> soswire_res?38" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.1022831" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!71 -> soswire_req?71 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!71 -> dispatchwire_req?71 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!71 -> emwire_req?71 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!71 -> pgwire_req?71 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!71 -> pgwire_res?71 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!71 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!71 -> guardnoti_pub?71 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!71 -> ptwire_req?71 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!71 -> ptwire_res?71 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?71 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!71 -> pgwire_req?71 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!71 -> pgwire_res?71 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!71 -> guardnoti_pub?71 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!71 -> ptwire_req?71 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!71 -> ptwire_res?71 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!71 -> dispatchwire_res?71 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!71 -> soswire_res?71" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.13153209999999999" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!74 -> soswire_req?74 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!74 -> dispatchwire_req?74 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!74 -> emwire_req?74 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!74 -> pgwire_req?74 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!74 -> pgwire_res?74 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!74 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!74 -> guardnoti_pub?74 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!74 -> ptwire_req?74 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!74 -> ptwire_res?74 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?74 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!74 -> pgwire_req?74 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!74 -> pgwire_res?74 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!74 -> guardnoti_pub?74 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!74 -> ptwire_req?74 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!74 -> ptwire_res?74 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!74 -> dispatchwire_res?74 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!74 -> soswire_res?74" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1354063" testport="//@interimmodels.9/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="4840" verifyTime="0.11945449999999999" testport="//@interimmodels.9/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="4708" verifyTime="0.11329779999999999" testport="//@interimmodels.9/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!36 -> pgupwire_cmmd!36 -> pgupwire_cmmd?36 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!36 -> emupwire_cmmd!36 -> emupwire_cmmd?36 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?36 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?36 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.9/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.9/@designmodel/@component.2 //@interimmodels.9/@designmodel/@component.6 //@interimmodels.9/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.9/@designmodel/@host.1/@node.0" namedport="//@interimmodels.9/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.9/@designmodel/@host.1/@node.0" namedport="//@interimmodels.9/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.9/@designmodel/@host.1/@node.0" namedport="//@interimmodels.9/@designmodel/@component.6/@port.1 //@interimmodels.9/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.9/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.9/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.9/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.9/@designmodel/@host.4/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.9/@designmodel/@component.7 //@interimmodels.9/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.9/@designmodel/@host.5/@node.0" namedport="//@interimmodels.9/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.9/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.9/@designmodel/@host.6/@node.0" namedport="//@interimmodels.9/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.9/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.9/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="11" description="deploy service: patient" nextModel="//@interimmodels.11" isStable="true" name="deploy-service">
    <designmodel name="inter11">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.10/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.10/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.10/@designmodel/@connector.0/@role.0 //@interimmodels.10/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.10/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.10/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.10/@designmodel/@connector.0/@role.1 //@interimmodels.10/@designmodel/@connector.1/@role.0 //@interimmodels.10/@designmodel/@connector.2/@role.0 //@interimmodels.10/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.10/@designmodel/@connector.1/@role.1 //@interimmodels.10/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.10/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.10/@designmodel/@connector.1/@role.1 //@interimmodels.10/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.10/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.10/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.10/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.10/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.10/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.10/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.10/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.10/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.10/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.10/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.10/@designmodel/@connector.5/@role.0 //@interimmodels.10/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.10/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.10/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.10/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.10/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.2/@role.0" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.4/@role.0" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.3/@role.0" connector="//@interimmodels.10/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.3/@role.0" connector="//@interimmodels.10/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.1/@role.0" connector="//@interimmodels.10/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.10/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="REConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.10/@designmodel/@connector.4"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.10/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.6/@role.0" connector="//@interimmodels.10/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.10/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.10/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.10/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.10/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.0/@role.0" connector="//@interimmodels.10/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.10/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.10/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.10/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.09965489999999999" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!88 -> soswire_req?88 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!88 -> dispatchwire_req?88 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!88 -> emwire_req?88 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!88 -> pgwire_req?88 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!88 -> pgwire_res?88 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!88 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!88 -> guardnoti_pub?88 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!88 -> ptwire_req?88 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!88 -> ptwire_res?88 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?88 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!88 -> pgwire_req?88 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!88 -> pgwire_res?88 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!88 -> guardnoti_pub?88 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!88 -> ptwire_req?88 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!88 -> ptwire_res?88 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!88 -> dispatchwire_res?88 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!88 -> soswire_res?88" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0991507" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!38 -> soswire_req?38 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!38 -> dispatchwire_req?38 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!38 -> emwire_req?38 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!38 -> pgwire_req?38 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!38 -> pgwire_res?38 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!38 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!38 -> guardnoti_pub?38 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!38 -> ptwire_req?38 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!38 -> ptwire_res?38 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?38 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!38 -> pgwire_req?38 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!38 -> pgwire_res?38 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!38 -> guardnoti_pub?38 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!38 -> ptwire_req?38 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!38 -> ptwire_res?38 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!38 -> dispatchwire_res?38 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!38 -> soswire_res?38" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.0936525" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!94 -> soswire_req?94 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!94 -> dispatchwire_req?94 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!94 -> emwire_req?94 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!94 -> pgwire_req?94 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!94 -> pgwire_res?94 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!94 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!94 -> guardnoti_pub?94 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!94 -> ptwire_req?94 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!94 -> ptwire_res?94 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?94 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!94 -> pgwire_req?94 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!94 -> pgwire_res?94 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!94 -> guardnoti_pub?94 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!94 -> ptwire_req?94 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!94 -> ptwire_res?94 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!94 -> dispatchwire_res?94 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!94 -> soswire_res?94" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1276921" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!83 -> soswire_req?83 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!83 -> dispatchwire_req?83 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!83 -> emwire_req?83 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!83 -> pgwire_req?83 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!83 -> pgwire_res?83 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!83 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!83 -> guardnoti_pub?83 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!83 -> ptwire_req?83 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!83 -> ptwire_res?83 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?83 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!83 -> pgwire_req?83 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!83 -> pgwire_res?83 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!83 -> guardnoti_pub?83 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!83 -> ptwire_req?83 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!83 -> ptwire_res?83 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!83 -> dispatchwire_res?83 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!83 -> soswire_res?83" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1251582" testport="//@interimmodels.10/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!93 -> soswire_req?93 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!93 -> dispatchwire_req?93 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!93 -> emwire_req?93 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!93 -> pgwire_req?93 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!93 -> pgwire_res?93 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!93 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!93 -> guardnoti_pub?93 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!93 -> ptwire_req?93 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!93 -> ptwire_res?93 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?93 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!93 -> pgwire_req?93 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!93 -> pgwire_res?93 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!93 -> guardnoti_pub?93 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!93 -> ptwire_req?93 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!93 -> ptwire_res?93 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!93 -> dispatchwire_res?93 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!93 -> soswire_res?93" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="4840" verifyTime="0.12121789999999999" testport="//@interimmodels.10/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="4708" verifyTime="0.1143959" testport="//@interimmodels.10/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!18 -> pgupwire_cmmd!18 -> pgupwire_cmmd?18 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!18 -> emupwire_cmmd!18 -> emupwire_cmmd?18 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?18 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?18 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.10/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.10/@designmodel/@component.2 //@interimmodels.10/@designmodel/@component.6 //@interimmodels.10/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.10/@designmodel/@host.1/@node.0" namedport="//@interimmodels.10/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.10/@designmodel/@host.1/@node.0" namedport="//@interimmodels.10/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.10/@designmodel/@host.1/@node.0" namedport="//@interimmodels.10/@designmodel/@component.6/@port.1 //@interimmodels.10/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.10/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.10/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.10/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.10/@designmodel/@host.4/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.10/@designmodel/@component.7 //@interimmodels.10/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.10/@designmodel/@host.5/@node.0" namedport="//@interimmodels.10/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.10/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.10/@designmodel/@host.6/@node.0" namedport="//@interimmodels.10/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.10/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.10/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="12" description="network route for connector:ptwire between: lifeguard patient " nextModel="//@interimmodels.12" isStable="true" name="network-route">
    <designmodel name="inter12">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.11/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.11/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.11/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.11/@designmodel/@connector.0/@role.0 //@interimmodels.11/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.11/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.11/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.11/@designmodel/@connector.0/@role.1 //@interimmodels.11/@designmodel/@connector.1/@role.0 //@interimmodels.11/@designmodel/@connector.2/@role.0 //@interimmodels.11/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.11/@designmodel/@connector.1/@role.1 //@interimmodels.11/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.11/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.11/@designmodel/@connector.1/@role.1" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.11/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.11/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.11/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.11/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.11/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.11/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.11/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.11/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.11/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.11/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.11/@designmodel/@connector.5/@role.0 //@interimmodels.11/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.11/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.11/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.11/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.11/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.11/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.2/@role.0" connector="//@interimmodels.11/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.11/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.4/@role.0" connector="//@interimmodels.11/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.3/@role.0" connector="//@interimmodels.11/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.3/@role.0" connector="//@interimmodels.11/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.1/@role.0" connector="//@interimmodels.11/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.11/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.11/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.11/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.6/@role.0" connector="//@interimmodels.11/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.11/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.11/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.11/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.11/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.0/@role.0" connector="//@interimmodels.11/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.11/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.11/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.11/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.11/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.11/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.11/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.11/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.11/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.11/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.11/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.11/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.11/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.11/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.11/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.11/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.11/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.11/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.11/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.11/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.11/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.18242699999999998" testport="//@interimmodels.11/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!96 -> soswire_req?96 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!96 -> dispatchwire_req?96 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!96 -> emwire_req?96 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!96 -> pgwire_req?96 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!96 -> pgwire_res?96 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!96 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!96 -> guardnoti_pub?96 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!96 -> ptwire_req?96 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!96 -> ptwire_res?96 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?96 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!96 -> pgwire_req?96 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!96 -> pgwire_res?96 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!96 -> guardnoti_pub?96 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!96 -> ptwire_req?96 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!96 -> ptwire_res?96 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!96 -> dispatchwire_res?96 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!96 -> soswire_res?96" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.1032008" testport="//@interimmodels.11/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!31 -> soswire_req?31 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!31 -> dispatchwire_req?31 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!31 -> emwire_req?31 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!31 -> pgwire_req?31 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!31 -> pgwire_res?31 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!31 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!31 -> guardnoti_pub?31 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!31 -> ptwire_req?31 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!31 -> ptwire_res?31 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?31 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!31 -> pgwire_req?31 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!31 -> pgwire_res?31 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!31 -> guardnoti_pub?31 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!31 -> ptwire_req?31 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!31 -> ptwire_res?31 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!31 -> dispatchwire_res?31 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!31 -> soswire_res?31" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.0946617" testport="//@interimmodels.11/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!30 -> soswire_req?30 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!30 -> dispatchwire_req?30 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!30 -> emwire_req?30 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!30 -> pgwire_req?30 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!30 -> pgwire_res?30 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!30 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!30 -> guardnoti_pub?30 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!30 -> ptwire_req?30 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!30 -> ptwire_res?30 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?30 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!30 -> pgwire_req?30 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!30 -> pgwire_res?30 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!30 -> guardnoti_pub?30 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!30 -> ptwire_req?30 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!30 -> ptwire_res?30 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!30 -> dispatchwire_res?30 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!30 -> soswire_res?30" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.13797479999999998" testport="//@interimmodels.11/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!33 -> emwire_req?33 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!33 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!33 -> pgwire_req?33 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!33 -> guardnoti_pub?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1286027" testport="//@interimmodels.11/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!86 -> soswire_req?86 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!86 -> dispatchwire_req?86 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!86 -> emwire_req?86 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!86 -> pgwire_req?86 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!86 -> pgwire_res?86 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!86 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!86 -> guardnoti_pub?86 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!86 -> ptwire_req?86 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!86 -> ptwire_res?86 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?86 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!86 -> pgwire_req?86 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!86 -> pgwire_res?86 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!86 -> guardnoti_pub?86 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!86 -> ptwire_req?86 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!86 -> ptwire_res?86 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!86 -> dispatchwire_res?86 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!86 -> soswire_res?86" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="4840" verifyTime="0.1169457" testport="//@interimmodels.11/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="4708" verifyTime="0.110664" testport="//@interimmodels.11/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!45 -> pgupwire_cmmd!45 -> pgupwire_cmmd?45 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!45 -> emupwire_cmmd!45 -> emupwire_cmmd?45 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?45 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?45 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.11/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.11/@designmodel/@host.0/@node.0" namedport="//@interimmodels.11/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.11/@designmodel/@host.0/@node.0" namedport="//@interimmodels.11/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.11/@designmodel/@component.2 //@interimmodels.11/@designmodel/@component.6 //@interimmodels.11/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.11/@designmodel/@host.1/@node.0" namedport="//@interimmodels.11/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.11/@designmodel/@host.1/@node.0" namedport="//@interimmodels.11/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.11/@designmodel/@host.1/@node.0" namedport="//@interimmodels.11/@designmodel/@component.6/@port.1 //@interimmodels.11/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.11/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.11/@designmodel/@host.2/@node.0" namedport="//@interimmodels.11/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.11/@designmodel/@host.2/@node.0" namedport="//@interimmodels.11/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.11/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.11/@designmodel/@host.3/@node.0" namedport="//@interimmodels.11/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.11/@designmodel/@host.3/@node.0" namedport="//@interimmodels.11/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.11/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.11/@designmodel/@host.4/@node.0" namedport="//@interimmodels.11/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.11/@designmodel/@component.7 //@interimmodels.11/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.11/@designmodel/@host.5/@node.0" namedport="//@interimmodels.11/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.11/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.11/@designmodel/@host.6/@node.0" namedport="//@interimmodels.11/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.11/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.11/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.11/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="13" description="network route for connector:ptwire between: lifecare patient " nextModel="//@interimmodels.13" isStable="true" name="network-route">
    <designmodel name="inter13">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.12/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.12/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.12/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.12/@designmodel/@connector.0/@role.0 //@interimmodels.12/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.12/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.12/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.12/@designmodel/@connector.0/@role.1 //@interimmodels.12/@designmodel/@connector.1/@role.0 //@interimmodels.12/@designmodel/@connector.2/@role.0 //@interimmodels.12/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.12/@designmodel/@connector.1/@role.1 //@interimmodels.12/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.12/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.12/@designmodel/@connector.1/@role.1 //@interimmodels.12/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.12/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.12/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.12/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.12/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.12/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.12/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.12/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.12/@designmodel/@connector.4/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.12/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.12/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.12/@designmodel/@connector.5/@role.0 //@interimmodels.12/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.12/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.12/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.12/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.12/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.12/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.2/@role.0" connector="//@interimmodels.12/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.12/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.4/@role.0" connector="//@interimmodels.12/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.3/@role.0" connector="//@interimmodels.12/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.3/@role.0" connector="//@interimmodels.12/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.1/@role.0" connector="//@interimmodels.12/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.12/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.12/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.12/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.6/@role.0" connector="//@interimmodels.12/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.12/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.12/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.12/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.12/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.0/@role.0" connector="//@interimmodels.12/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.12/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.12/@designmodel/@connector.8"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.12/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.12/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.12/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.12/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.12/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.12/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.12/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.12/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.12/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.12/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.12/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.12/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.12/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.12/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.12/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.12/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.12/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.12/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.12/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.12/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.12/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="4144" verifyTime="0.0901173" testport="//@interimmodels.12/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!42 -> soswire_req?42 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!42 -> dispatchwire_req?42 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!42 -> emwire_req?42 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!42 -> pgwire_req?42 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!42 -> pgwire_res?42 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!42 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!42 -> guardnoti_pub?42 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!42 -> ptwire_req?42 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!42 -> ptwire_res?42 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?42 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!42 -> pgwire_req?42 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!42 -> pgwire_res?42 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!42 -> guardnoti_pub?42 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!42 -> ptwire_req?42 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!42 -> ptwire_res?42 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!42 -> dispatchwire_res?42 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!42 -> soswire_res?42" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.12/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.12/@designmodel" counterExample="" visitedStates="4145" verifyTime="0.0918524" testport="//@interimmodels.12/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!28 -> soswire_req?28 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!28 -> dispatchwire_req?28 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!28 -> emwire_req?28 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!28 -> pgwire_req?28 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!28 -> pgwire_res?28 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!28 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!28 -> guardnoti_pub?28 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!28 -> ptwire_req?28 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!28 -> ptwire_res?28 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?28 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!28 -> pgwire_req?28 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!28 -> pgwire_res?28 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!28 -> guardnoti_pub?28 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!28 -> ptwire_req?28 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!28 -> ptwire_res?28 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!28 -> dispatchwire_res?28 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!28 -> soswire_res?28" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.12/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.12/@designmodel" counterExample="" visitedStates="4144" verifyTime="0.1019974" testport="//@interimmodels.12/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!27 -> soswire_req?27 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!27 -> dispatchwire_req?27 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!27 -> emwire_req?27 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!27 -> pgwire_req?27 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!27 -> pgwire_res?27 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!27 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!27 -> guardnoti_pub?27 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!27 -> ptwire_req?27 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!27 -> ptwire_res?27 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?27 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!27 -> pgwire_req?27 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!27 -> pgwire_res?27 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!27 -> guardnoti_pub?27 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!27 -> ptwire_req?27 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!27 -> ptwire_res?27 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!27 -> dispatchwire_res?27 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!27 -> soswire_res?27" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.12/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.12/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1280695" testport="//@interimmodels.12/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!75 -> soswire_req?75 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!75 -> dispatchwire_req?75 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!75 -> emwire_req?75 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!75 -> pgwire_req?75 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!75 -> pgwire_res?75 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!75 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!75 -> guardnoti_pub?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?75 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!75 -> pgwire_req?75 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!75 -> pgwire_res?75 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!75 -> guardnoti_pub?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!75 -> dispatchwire_res?75 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!75 -> soswire_res?75" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.12/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.12/@designmodel" counterExample="" visitedStates="5811" verifyTime="0.1262846" testport="//@interimmodels.12/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!99 -> soswire_req?99 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!99 -> dispatchwire_req?99 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!99 -> emwire_req?99 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!99 -> pgwire_req?99 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!99 -> pgwire_res?99 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!99 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!99 -> guardnoti_pub?99 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!99 -> ptwire_req?99 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!99 -> ptwire_res?99 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?99 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!99 -> pgwire_req?99 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!99 -> pgwire_res?99 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!99 -> guardnoti_pub?99 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!99 -> ptwire_req?99 -> Patient_ptwire_responder_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_responder_process -> ptwire_res!99 -> ptwire_res?99 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!99 -> dispatchwire_res?99 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!99 -> soswire_res?99" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.12/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="4840" verifyTime="0.1212716" testport="//@interimmodels.12/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="4708" verifyTime="0.1141435" testport="//@interimmodels.12/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.12/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.12/@designmodel/@host.0/@node.0" namedport="//@interimmodels.12/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.12/@designmodel/@host.0/@node.0" namedport="//@interimmodels.12/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.12/@designmodel/@component.2 //@interimmodels.12/@designmodel/@component.6 //@interimmodels.12/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.12/@designmodel/@host.1/@node.0" namedport="//@interimmodels.12/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.12/@designmodel/@host.1/@node.0" namedport="//@interimmodels.12/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.12/@designmodel/@host.1/@node.0" namedport="//@interimmodels.12/@designmodel/@component.6/@port.1 //@interimmodels.12/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.12/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.12/@designmodel/@host.2/@node.0" namedport="//@interimmodels.12/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.12/@designmodel/@host.2/@node.0" namedport="//@interimmodels.12/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.12/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.12/@designmodel/@host.3/@node.0" namedport="//@interimmodels.12/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.12/@designmodel/@host.3/@node.0" namedport="//@interimmodels.12/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.12/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.12/@designmodel/@host.4/@node.0" namedport="//@interimmodels.12/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.12/@designmodel/@component.7 //@interimmodels.12/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.12/@designmodel/@host.5/@node.0" namedport="//@interimmodels.12/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.12/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.12/@designmodel/@host.6/@node.0" namedport="//@interimmodels.12/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.12/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.12/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.12/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.12/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="14" description="network route for connector:roptwire between: patient patientblockchain " nextModel="//@interimmodels.14" isStable="true" name="network-route">
    <designmodel name="inter14">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.13/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.13/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.13/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.13/@designmodel/@connector.0/@role.0 //@interimmodels.13/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.13/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.13/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.13/@designmodel/@connector.0/@role.1 //@interimmodels.13/@designmodel/@connector.1/@role.0 //@interimmodels.13/@designmodel/@connector.2/@role.0 //@interimmodels.13/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.13/@designmodel/@connector.1/@role.1 //@interimmodels.13/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.13/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.13/@designmodel/@connector.1/@role.1 //@interimmodels.13/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.13/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.13/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.13/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.13/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.13/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.13/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.13/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.13/@designmodel/@connector.4/@role.1 //@interimmodels.13/@designmodel/@connector.9/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.13/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.13/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.13/@designmodel/@connector.5/@role.0 //@interimmodels.13/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.13/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.13/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.13/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.13/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" role="//@interimmodels.13/@designmodel/@connector.9/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.13/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.2/@role.0" connector="//@interimmodels.13/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.13/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.4/@role.0" connector="//@interimmodels.13/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.3/@role.0" connector="//@interimmodels.13/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.3/@role.0" connector="//@interimmodels.13/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.1/@role.0" connector="//@interimmodels.13/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.13/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.13/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.9/@role.0" connector="//@interimmodels.13/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.6/@role.0" connector="//@interimmodels.13/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.13/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.13/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.13/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.13/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.0/@role.0" connector="//@interimmodels.13/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.13/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.13/@designmodel/@connector.8"/>
      </connector>
      <connector name="roptwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.13/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.13/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.8/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.13/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.13/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.13/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.13/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.13/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.13/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.13/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.13/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.13/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.13/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.13/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.13/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.13/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.13/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.13/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.13/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.13/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.13/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.13/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.13/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.13/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="8221" verifyTime="0.20676429999999998" testport="//@interimmodels.13/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!89 -> soswire_req?89 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!89 -> dispatchwire_req?89 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!89 -> emwire_req?89 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!89 -> pgwire_req?89 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!89 -> pgwire_res?89 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!89 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!89 -> guardnoti_pub?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!89 -> ptwire_req?89 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!89 -> roptwire_uid?89 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!89 -> roptwire_res?89 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!89 -> ptwire_res?89 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?89 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!89 -> pgwire_req?89 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!89 -> pgwire_res?89 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!89 -> guardnoti_pub?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!89 -> ptwire_req?89 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!89 -> roptwire_uid?89 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!89 -> roptwire_res?89 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!89 -> ptwire_res?89 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!89 -> dispatchwire_res?89 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!89 -> soswire_res?89" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.13/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.13/@designmodel" counterExample="" visitedStates="8222" verifyTime="0.1970437" testport="//@interimmodels.13/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!78 -> soswire_req?78 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!78 -> dispatchwire_req?78 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!78 -> emwire_req?78 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!78 -> pgwire_req?78 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!78 -> pgwire_res?78 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!78 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!78 -> guardnoti_pub?78 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!78 -> ptwire_req?78 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!78 -> roptwire_uid?78 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!78 -> roptwire_res?78 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!78 -> ptwire_res?78 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?78 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!78 -> pgwire_req?78 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!78 -> pgwire_res?78 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!78 -> guardnoti_pub?78 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!78 -> ptwire_req?78 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!78 -> roptwire_uid?78 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!78 -> roptwire_res?78 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!78 -> ptwire_res?78 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!78 -> dispatchwire_res?78 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!78 -> soswire_res?78" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.13/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.13/@designmodel" counterExample="" visitedStates="8221" verifyTime="0.19156279999999998" testport="//@interimmodels.13/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!90 -> soswire_req?90 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!90 -> dispatchwire_req?90 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!90 -> emwire_req?90 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!90 -> pgwire_req?90 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!90 -> pgwire_res?90 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!90 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!90 -> guardnoti_pub?90 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!90 -> ptwire_req?90 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!90 -> roptwire_uid?90 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!90 -> roptwire_res?90 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!90 -> ptwire_res?90 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?90 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!90 -> pgwire_req?90 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!90 -> pgwire_res?90 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!90 -> guardnoti_pub?90 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!90 -> ptwire_req?90 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!90 -> roptwire_uid?90 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!90 -> roptwire_res?90 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!90 -> ptwire_res?90 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!90 -> dispatchwire_res?90 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!90 -> soswire_res?90" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.13/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.13/@designmodel" counterExample="" visitedStates="12690" verifyTime="0.3047456" testport="//@interimmodels.13/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!13 -> soswire_req?13 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!13 -> dispatchwire_req?13 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!13 -> emwire_req?13 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!13 -> pgwire_req?13 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!13 -> pgwire_res?13 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!13 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!13 -> guardnoti_pub?13 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!13 -> ptwire_req?13 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!13 -> roptwire_uid?13 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!13 -> roptwire_res?13 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!13 -> ptwire_res?13 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?13 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!13 -> pgwire_req?13 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!13 -> pgwire_res?13 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!13 -> guardnoti_pub?13 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!13 -> ptwire_req?13 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!13 -> roptwire_uid?13 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!13 -> roptwire_res?13 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!13 -> ptwire_res?13 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!13 -> dispatchwire_res?13 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!13 -> soswire_res?13" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.13/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.13/@designmodel" counterExample="" visitedStates="12690" verifyTime="0.31090439999999997" testport="//@interimmodels.13/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!17 -> soswire_req?17 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!17 -> dispatchwire_req?17 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!17 -> emwire_req?17 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!17 -> pgwire_req?17 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!17 -> pgwire_res?17 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!17 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!17 -> guardnoti_pub?17 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!17 -> ptwire_req?17 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!17 -> roptwire_uid?17 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!17 -> roptwire_res?17 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!17 -> ptwire_res?17 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?17 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!17 -> pgwire_req?17 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!17 -> pgwire_res?17 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!17 -> guardnoti_pub?17 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!17 -> ptwire_req?17 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!17 -> roptwire_uid?17 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!17 -> roptwire_res?17 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!17 -> ptwire_res?17 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!17 -> dispatchwire_res?17 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!17 -> soswire_res?17" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.13/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="4840" verifyTime="0.1287701" testport="//@interimmodels.13/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="4708" verifyTime="0.1313788" testport="//@interimmodels.13/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!38 -> pgupwire_cmmd!38 -> pgupwire_cmmd?38 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!38 -> emupwire_cmmd!38 -> emupwire_cmmd?38 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?38 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?38 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroptwire" visitedStates="9575" verifyTime="0.3443345" testport="//@interimmodels.13/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!53 -> soswire_req?53 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53 -> dispatchwire_req?53 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!53 -> emwire_stmt?53 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?53 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!53 -> dispatchwire_res?53 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!53 -> soswire_res?53" exprText="[] (PatientBlockchain.roptwire.blocksupplier.process-> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.13/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.13/@designmodel/@host.0/@node.0" namedport="//@interimmodels.13/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.13/@designmodel/@host.0/@node.0" namedport="//@interimmodels.13/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.13/@designmodel/@component.2 //@interimmodels.13/@designmodel/@component.6 //@interimmodels.13/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.13/@designmodel/@host.1/@node.0" namedport="//@interimmodels.13/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.13/@designmodel/@host.1/@node.0" namedport="//@interimmodels.13/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.13/@designmodel/@host.1/@node.0" namedport="//@interimmodels.13/@designmodel/@component.6/@port.1 //@interimmodels.13/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.13/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.13/@designmodel/@host.2/@node.0" namedport="//@interimmodels.13/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.13/@designmodel/@host.2/@node.0" namedport="//@interimmodels.13/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.13/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.13/@designmodel/@host.3/@node.0" namedport="//@interimmodels.13/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.13/@designmodel/@host.3/@node.0" namedport="//@interimmodels.13/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.13/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.13/@designmodel/@host.4/@node.0" namedport="//@interimmodels.13/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.13/@designmodel/@component.7 //@interimmodels.13/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.13/@designmodel/@host.5/@node.0" namedport="//@interimmodels.13/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.13/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.13/@designmodel/@host.6/@node.0" namedport="//@interimmodels.13/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.13/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.13/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.13/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.13/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="16" description="deploy service: patientoracle" nextModel="//@interimmodels.15" isStable="true" name="deploy-service">
    <designmodel name="inter16">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.14/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.14/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.14/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.14/@designmodel/@connector.0/@role.0 //@interimmodels.14/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.14/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.14/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.14/@designmodel/@connector.0/@role.1 //@interimmodels.14/@designmodel/@connector.1/@role.0 //@interimmodels.14/@designmodel/@connector.2/@role.0 //@interimmodels.14/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.14/@designmodel/@connector.1/@role.1 //@interimmodels.14/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.14/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.14/@designmodel/@connector.1/@role.1 //@interimmodels.14/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.14/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.14/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.14/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.14/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.14/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.14/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.14/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.14/@designmodel/@connector.4/@role.1 //@interimmodels.14/@designmodel/@connector.9/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.14/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.14/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.14/@designmodel/@connector.5/@role.0 //@interimmodels.14/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.14/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.14/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.14/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.14/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" role="//@interimmodels.14/@designmodel/@connector.9/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <component name="PatientOracle" type="server,oracle">
        <port name="supply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.4"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.14/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.2/@role.0" connector="//@interimmodels.14/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.14/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.4/@role.0" connector="//@interimmodels.14/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.3/@role.0" connector="//@interimmodels.14/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.3/@role.0" connector="//@interimmodels.14/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.1/@role.0" connector="//@interimmodels.14/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.14/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.14/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.9/@role.0" connector="//@interimmodels.14/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.6/@role.0" connector="//@interimmodels.14/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.14/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.14/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.14/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.14/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.0/@role.0" connector="//@interimmodels.14/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.14/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.14/@designmodel/@connector.8"/>
      </connector>
      <connector name="roptwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.14/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.14/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.8/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.14/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.14/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.14/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.14/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.14/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.14/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.14/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.14/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.14/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.14/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.14/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.14/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.14/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.14/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.14/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.14/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.14/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.14/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.14/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.14/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.14/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="8221" verifyTime="0.19650309999999999" testport="//@interimmodels.14/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!14 -> soswire_req?14 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!14 -> dispatchwire_req?14 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!14 -> emwire_req?14 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!14 -> pgwire_req?14 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!14 -> pgwire_res?14 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!14 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!14 -> guardnoti_pub?14 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!14 -> ptwire_req?14 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!14 -> roptwire_uid?14 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!14 -> roptwire_res?14 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!14 -> ptwire_res?14 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?14 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!14 -> pgwire_req?14 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!14 -> pgwire_res?14 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!14 -> guardnoti_pub?14 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!14 -> ptwire_req?14 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!14 -> roptwire_uid?14 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!14 -> roptwire_res?14 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!14 -> ptwire_res?14 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!14 -> dispatchwire_res?14 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!14 -> soswire_res?14" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.14/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.14/@designmodel" counterExample="" visitedStates="8222" verifyTime="0.1908263" testport="//@interimmodels.14/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!31 -> soswire_req?31 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!31 -> dispatchwire_req?31 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!31 -> emwire_req?31 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!31 -> pgwire_req?31 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!31 -> pgwire_res?31 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!31 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!31 -> guardnoti_pub?31 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!31 -> ptwire_req?31 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!31 -> roptwire_uid?31 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!31 -> roptwire_res?31 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!31 -> ptwire_res?31 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?31 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!31 -> pgwire_req?31 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!31 -> pgwire_res?31 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!31 -> guardnoti_pub?31 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!31 -> ptwire_req?31 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!31 -> roptwire_uid?31 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!31 -> roptwire_res?31 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!31 -> ptwire_res?31 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!31 -> dispatchwire_res?31 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!31 -> soswire_res?31" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.14/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.14/@designmodel" counterExample="" visitedStates="8221" verifyTime="0.18878989999999998" testport="//@interimmodels.14/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!54 -> soswire_req?54 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!54 -> dispatchwire_req?54 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!54 -> emwire_req?54 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!54 -> pgwire_req?54 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!54 -> pgwire_res?54 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!54 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!54 -> guardnoti_pub?54 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!54 -> ptwire_req?54 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!54 -> roptwire_uid?54 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!54 -> roptwire_res?54 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!54 -> ptwire_res?54 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?54 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!54 -> pgwire_req?54 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!54 -> pgwire_res?54 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!54 -> guardnoti_pub?54 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!54 -> ptwire_req?54 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!54 -> roptwire_uid?54 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!54 -> roptwire_res?54 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!54 -> ptwire_res?54 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!54 -> dispatchwire_res?54 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!54 -> soswire_res?54" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.14/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.14/@designmodel" counterExample="" visitedStates="12690" verifyTime="0.3048589" testport="//@interimmodels.14/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!92 -> soswire_req?92 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!92 -> dispatchwire_req?92 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!92 -> emwire_req?92 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!92 -> pgwire_req?92 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!92 -> pgwire_res?92 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!92 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!92 -> guardnoti_pub?92 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!92 -> ptwire_req?92 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!92 -> roptwire_uid?92 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!92 -> roptwire_res?92 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!92 -> ptwire_res?92 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?92 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!92 -> pgwire_req?92 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!92 -> pgwire_res?92 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!92 -> guardnoti_pub?92 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!92 -> ptwire_req?92 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!92 -> roptwire_uid?92 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!92 -> roptwire_res?92 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!92 -> ptwire_res?92 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!92 -> dispatchwire_res?92 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!92 -> soswire_res?92" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.14/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.14/@designmodel" counterExample="" visitedStates="12690" verifyTime="0.31742899999999996" testport="//@interimmodels.14/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!90 -> soswire_req?90 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!90 -> dispatchwire_req?90 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!90 -> emwire_req?90 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!90 -> pgwire_req?90 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!90 -> pgwire_res?90 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!90 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!90 -> guardnoti_pub?90 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!90 -> ptwire_req?90 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!90 -> roptwire_uid?90 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!90 -> roptwire_res?90 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!90 -> ptwire_res?90 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?90 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!90 -> pgwire_req?90 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!90 -> pgwire_res?90 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!90 -> guardnoti_pub?90 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!90 -> ptwire_req?90 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!90 -> roptwire_uid?90 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!90 -> roptwire_res?90 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!90 -> ptwire_res?90 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!90 -> dispatchwire_res?90 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!90 -> soswire_res?90" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.14/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="4840" verifyTime="0.1263284" testport="//@interimmodels.14/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="4708" verifyTime="0.1310829" testport="//@interimmodels.14/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!17 -> pgupwire_cmmd!17 -> pgupwire_cmmd?17 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!17 -> emupwire_cmmd!17 -> emupwire_cmmd?17 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?17 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?17 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroptwire" visitedStates="9575" verifyTime="0.21836409999999998" testport="//@interimmodels.14/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!53 -> soswire_req?53 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53 -> dispatchwire_req?53 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!53 -> emwire_stmt?53 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?53 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!53 -> dispatchwire_res?53 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!53 -> soswire_res?53" exprText="[] (PatientBlockchain.roptwire.blocksupplier.process-> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.14/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.14/@designmodel/@host.0/@node.0" namedport="//@interimmodels.14/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.14/@designmodel/@host.0/@node.0" namedport="//@interimmodels.14/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.14/@designmodel/@component.2 //@interimmodels.14/@designmodel/@component.6 //@interimmodels.14/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.14/@designmodel/@host.1/@node.0" namedport="//@interimmodels.14/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.14/@designmodel/@host.1/@node.0" namedport="//@interimmodels.14/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.14/@designmodel/@host.1/@node.0" namedport="//@interimmodels.14/@designmodel/@component.6/@port.1 //@interimmodels.14/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.14/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.14/@designmodel/@host.2/@node.0" namedport="//@interimmodels.14/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.14/@designmodel/@host.2/@node.0" namedport="//@interimmodels.14/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.14/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.14/@designmodel/@host.3/@node.0" namedport="//@interimmodels.14/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.14/@designmodel/@host.3/@node.0" namedport="//@interimmodels.14/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.14/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.14/@designmodel/@host.4/@node.0" namedport="//@interimmodels.14/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.14/@designmodel/@component.7 //@interimmodels.14/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.14/@designmodel/@host.5/@node.0" namedport="//@interimmodels.14/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.14/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.14/@designmodel/@host.6/@node.0" namedport="//@interimmodels.14/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.14/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.14/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.14/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.14/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="17" description="network route for connector:oracleptupwire between: patientoracle patientblockchain " nextModel="//@interimmodels.16" name="network-route">
    <designmodel name="inter17">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.15/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.15/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.15/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.15/@designmodel/@connector.0/@role.0 //@interimmodels.15/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.15/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.15/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.15/@designmodel/@connector.0/@role.1 //@interimmodels.15/@designmodel/@connector.1/@role.0 //@interimmodels.15/@designmodel/@connector.2/@role.0 //@interimmodels.15/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.15/@designmodel/@connector.1/@role.1 //@interimmodels.15/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.15/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.15/@designmodel/@connector.1/@role.1 //@interimmodels.15/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.15/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.15/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.15/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.15/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.15/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.15/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.15/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.15/@designmodel/@connector.4/@role.1 //@interimmodels.15/@designmodel/@connector.9/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" role="//@interimmodels.15/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.15/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.15/@designmodel/@connector.5/@role.0 //@interimmodels.15/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.15/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.15/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.15/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.15/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" role="//@interimmodels.15/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" role="//@interimmodels.15/@designmodel/@connector.9/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <component name="PatientOracle" type="server,oracle">
        <port name="supply" role="//@interimmodels.15/@designmodel/@connector.10/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.4"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.15/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.2/@role.0" connector="//@interimmodels.15/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.15/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.4/@role.0" connector="//@interimmodels.15/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.3/@role.0" connector="//@interimmodels.15/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.3/@role.0" connector="//@interimmodels.15/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.1/@role.0" connector="//@interimmodels.15/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.15/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.15/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.9/@role.0" connector="//@interimmodels.15/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.6/@role.0" connector="//@interimmodels.15/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.15/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.15/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.15/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.15/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.0/@role.0" connector="//@interimmodels.15/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="WRConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.15/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.15/@designmodel/@connector.8"/>
      </connector>
      <connector name="roptwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.15/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.15/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.8/@connectortype.0"/>
      </connector>
      <connector name="oracleptupwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.15/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.15/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.7/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.15/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.15/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.15/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.15/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.15/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.15/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.15/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.15/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.15/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.15/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.15/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.15/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.15/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.15/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.15/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.15/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.15/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.15/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.15/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.15/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.15/@designmodel" valid="false" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!26 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!35 -> soswire_req?35 -> SOSGateway_soswire_responder_invoke -> oracleptupwire_token?26 -> (oracleptupwire_token!26 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?26)*" visitedStates="330742" verifyTime="10.8835997" testport="//@interimmodels.15/@designmodel/@component.0/@port.0" traceExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!26 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!35 -> soswire_req?35 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!35 -> dispatchwire_req?35 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!35 -> emwire_req?35 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!35 -> pgwire_req?35 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!35 -> pgwire_res?35 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!35 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!35 -> guardnoti_pub?35 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!35 -> ptwire_req?35 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!35 -> roptwire_uid?35 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!35 -> roptwire_res?35 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!35 -> ptwire_res?35 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?35 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!35 -> pgwire_req?35 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!35 -> pgwire_res?35 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!35 -> guardnoti_pub?35 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!35 -> ptwire_req?35 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!35 -> roptwire_uid?35 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!35 -> roptwire_res?35 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!35 -> ptwire_res?35 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!35 -> dispatchwire_res?35 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!35 -> soswire_res?35 -> oracleptupwire_token?26 -> (oracleptupwire_token!26 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?26)*" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.15/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.15/@designmodel" valid="false" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!44 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> oracleptupwire_token?44 -> (oracleptupwire_token!44 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?44)*" visitedStates="330514" verifyTime="10.5666604" testport="//@interimmodels.15/@designmodel/@component.0/@port.0" traceExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!44 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!58 -> soswire_req?58 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!58 -> dispatchwire_req?58 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!58 -> emwire_req?58 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!58 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!58 -> roptwire_uid?58 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!58 -> roptwire_res?58 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?58 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!58 -> pgwire_req?58 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!58 -> pgwire_res?58 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!58 -> guardnoti_pub?58 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!58 -> ptwire_req?58 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!58 -> roptwire_uid?58 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!58 -> roptwire_res?58 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!58 -> ptwire_res?58 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!58 -> dispatchwire_res?58 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!58 -> soswire_res?58 -> oracleptupwire_token?44 -> (oracleptupwire_token!44 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?44)*" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.15/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.15/@designmodel" valid="false" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!16 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!65 -> soswire_req?65 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!65 -> dispatchwire_req?65 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!65 -> emwire_req?65 -> EmCenter_emwire_readstorage_invoke -> oracleptupwire_token?16 -> (oracleptupwire_token!16 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?16)*" visitedStates="330209" verifyTime="10.851240599999999" testport="//@interimmodels.15/@designmodel/@component.0/@port.0" traceExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!16 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!65 -> soswire_req?65 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!65 -> dispatchwire_req?65 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!65 -> emwire_req?65 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!65 -> pgwire_req?65 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!65 -> pgwire_res?65 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!65 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!65 -> guardnoti_pub?65 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!65 -> ptwire_req?65 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!65 -> roptwire_uid?65 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!65 -> roptwire_res?65 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!65 -> ptwire_res?65 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?65 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!65 -> pgwire_req?65 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!65 -> pgwire_res?65 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!65 -> guardnoti_pub?65 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!65 -> ptwire_req?65 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!65 -> roptwire_uid?65 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!65 -> roptwire_res?65 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!65 -> ptwire_res?65 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!65 -> dispatchwire_res?65 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!65 -> soswire_res?65 -> oracleptupwire_token?16 -> (oracleptupwire_token!16 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?16)*" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.15/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.15/@designmodel" valid="false" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!54 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!72 -> soswire_req?72 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!72 -> dispatchwire_req?72 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!72 -> emwire_req?72 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!72 -> pgwire_req?72 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!72 -> pgwire_res?72 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!72 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!72 -> guardnoti_pub?72 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!72 -> ptwire_req?72 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!72 -> roptwire_uid?72 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!72 -> roptwire_res?72 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!72 -> ptwire_res?72 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?72 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!72 -> pgwire_req?72 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!72 -> pgwire_res?72 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!72 -> guardnoti_pub?72 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!72 -> ptwire_req?72 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!72 -> roptwire_uid?72 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!72 -> roptwire_res?72 -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!72 -> dispatchwire_res?72 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!72 -> soswire_res?72 -> oracleptupwire_token?54 -> (oracleptupwire_token!54 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?54)*" visitedStates="16980" verifyTime="0.5000277" testport="//@interimmodels.15/@designmodel/@component.0/@port.0" traceExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!54 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!72 -> soswire_req?72 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!72 -> dispatchwire_req?72 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!72 -> emwire_req?72 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!72 -> pgwire_req?72 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!72 -> pgwire_res?72 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!72 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!72 -> guardnoti_pub?72 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!72 -> ptwire_req?72 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!72 -> roptwire_uid?72 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!72 -> roptwire_res?72 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!72 -> ptwire_res?72 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?72 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!72 -> pgwire_req?72 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!72 -> pgwire_res?72 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!72 -> guardnoti_pub?72 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!72 -> ptwire_req?72 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!72 -> roptwire_uid?72 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!72 -> roptwire_res?72 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!72 -> ptwire_res?72 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!72 -> dispatchwire_res?72 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!72 -> soswire_res?72 -> oracleptupwire_token?54 -> (oracleptupwire_token!54 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?54)*" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.15/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.15/@designmodel" valid="false" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!85 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!32 -> soswire_req?32 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!32 -> dispatchwire_req?32 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!32 -> emwire_req?32 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!32 -> pgwire_req?32 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!32 -> pgwire_res?32 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!32 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!32 -> guardnoti_pub?32 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!32 -> ptwire_req?32 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!32 -> roptwire_uid?32 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!32 -> roptwire_res?32 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!32 -> ptwire_res?32 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?32 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!32 -> pgwire_req?32 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!32 -> pgwire_res?32 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!32 -> guardnoti_pub?32 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!32 -> ptwire_req?32 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!32 -> roptwire_uid?32 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!32 -> roptwire_res?32 -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!32 -> dispatchwire_res?32 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!32 -> soswire_res?32 -> oracleptupwire_token?85 -> (oracleptupwire_token!85 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?85)*" visitedStates="32513" verifyTime="0.9469662999999999" testport="//@interimmodels.15/@designmodel/@component.0/@port.0" traceExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!85 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!32 -> soswire_req?32 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!32 -> dispatchwire_req?32 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!32 -> emwire_req?32 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!32 -> pgwire_req?32 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!32 -> pgwire_res?32 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!32 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!32 -> guardnoti_pub?32 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!32 -> ptwire_req?32 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!32 -> roptwire_uid?32 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!32 -> roptwire_res?32 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!32 -> ptwire_res?32 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?32 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!32 -> pgwire_req?32 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!32 -> pgwire_res?32 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!32 -> guardnoti_pub?32 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!32 -> ptwire_req?32 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!32 -> roptwire_uid?32 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!32 -> roptwire_res?32 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!32 -> ptwire_res?32 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!32 -> dispatchwire_res?32 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!32 -> soswire_res?32 -> oracleptupwire_token?85 -> (oracleptupwire_token!85 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?85)*" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.15/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" valid="false" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!35 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!47 -> pgupwire_cmmd!47 -> pgupwire_cmmd?47 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!47 -> emupwire_cmmd!47 -> emupwire_cmmd?47 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> emupwire_stmt?47 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?47 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> oracleptupwire_token?35 -> (oracleptupwire_token!35 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?35)*" visitedStates="97881" verifyTime="3.501683" testport="//@interimmodels.15/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" valid="false" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!60 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!88 -> pgupwire_cmmd!88 -> pgupwire_cmmd?88 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!88 -> emupwire_cmmd!88 -> emupwire_cmmd?88 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?88 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?88 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> oracleptupwire_token?60 -> (oracleptupwire_token!60 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?60)*" visitedStates="97881" verifyTime="3.4871266999999997" testport="//@interimmodels.15/@designmodel/@component.8/@port.0" traceExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!60 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!88 -> pgupwire_cmmd!88 -> pgupwire_cmmd?88 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!88 -> emupwire_cmmd!88 -> emupwire_cmmd?88 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?88 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?88 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> oracleptupwire_token?60 -> (oracleptupwire_token!60 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?60)*" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroptwire" valid="false" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!78 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!34 -> soswire_req?34 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!34 -> dispatchwire_req?34 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!34 -> emwire_req?34 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!34 -> pgwire_req?34 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!34 -> pgwire_res?34 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!34 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!34 -> guardnoti_pub?34 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!34 -> ptwire_req?34 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!34 -> roptwire_uid?34 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!34 -> roptwire_res?34 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!34 -> ptwire_res?34 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?34 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!34 -> pgwire_req?34 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!34 -> pgwire_res?34 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!34 -> guardnoti_pub?34 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!34 -> ptwire_req?34 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!34 -> roptwire_uid?34 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!34 -> roptwire_res?34 -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!34 -> dispatchwire_res?34 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!34 -> soswire_res?34 -> oracleptupwire_token?78 -> (oracleptupwire_token!78 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?78)*" visitedStates="9975" verifyTime="0.2822723" testport="//@interimmodels.15/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!53 -> soswire_req?53 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53 -> dispatchwire_req?53 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!53 -> emwire_stmt?53 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?53 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!53 -> dispatchwire_res?53 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!53 -> soswire_res?53" exprText="[] (PatientBlockchain.roptwire.blocksupplier.process-> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracleptupwire" counterExample="init -> HospitalMgmt_updaterec_updated -> HospitalMgmt_ptupwire_requester_process -> ptupwire_req!89 -> ptupwire_req?89 -> PatientOracle_ptupwire_responder_invoke -> PatientOracle_supply_supplied -> PatientOracle_ptupwire_responder_process -> ptupwire_res!89 -> ptupwire_res?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!98 -> ptwire_req?98 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!98 -> roptwire_uid?98 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!98 -> roptwire_res?98 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!98 -> ptwire_res?98 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!67 -> ptwire_req?67 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!67 -> roptwire_uid?67 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!67 -> roptwire_res?67 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!67 -> ptwire_res?67 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!58 -> pgwire_stmt?58 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!58 -> pgwire_res?58 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!21" visitedStates="1307" verifyTime="0.0754663" testport="//@interimmodels.15/@designmodel/@component.9/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!33 -> emwire_stmt?33 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[] (PatientOracle.supply.supplied-> &lt;> PatientBlockchain.oracleptupwire.blockstorage.stored);&#xA;;&#xA;;&#xA;">
        <connector href="target.arch#//@connector.9"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.15/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.15/@designmodel/@host.0/@node.0" namedport="//@interimmodels.15/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.15/@designmodel/@host.0/@node.0" namedport="//@interimmodels.15/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.15/@designmodel/@component.2 //@interimmodels.15/@designmodel/@component.6 //@interimmodels.15/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.15/@designmodel/@host.1/@node.0" namedport="//@interimmodels.15/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.15/@designmodel/@host.1/@node.0" namedport="//@interimmodels.15/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.15/@designmodel/@host.1/@node.0" namedport="//@interimmodels.15/@designmodel/@component.6/@port.1 //@interimmodels.15/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.15/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.15/@designmodel/@host.2/@node.0" namedport="//@interimmodels.15/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.15/@designmodel/@host.2/@node.0" namedport="//@interimmodels.15/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.15/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.15/@designmodel/@host.3/@node.0" namedport="//@interimmodels.15/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.15/@designmodel/@host.3/@node.0" namedport="//@interimmodels.15/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.15/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.15/@designmodel/@host.4/@node.0" namedport="//@interimmodels.15/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.15/@designmodel/@component.7 //@interimmodels.15/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.15/@designmodel/@host.5/@node.0" namedport="//@interimmodels.15/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.15/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.15/@designmodel/@host.6/@node.0" namedport="//@interimmodels.15/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.15/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.15/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.15/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.15/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="18" description="network route for connector:ptupwire between: hospitalmgmt patientoracle " nextModel="//@interimmodels.17" isStable="true" name="network-route">
    <designmodel name="inter18">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.16/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.16/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.16/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.16/@designmodel/@connector.0/@role.0 //@interimmodels.16/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.16/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.16/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.16/@designmodel/@connector.0/@role.1 //@interimmodels.16/@designmodel/@connector.1/@role.0 //@interimmodels.16/@designmodel/@connector.2/@role.0 //@interimmodels.16/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.16/@designmodel/@connector.1/@role.1 //@interimmodels.16/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.16/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.16/@designmodel/@connector.1/@role.1 //@interimmodels.16/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.16/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.16/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.16/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.16/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.16/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.16/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.16/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.16/@designmodel/@connector.4/@role.1 //@interimmodels.16/@designmodel/@connector.9/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.16/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.16/@designmodel/@connector.5/@role.0 //@interimmodels.16/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.16/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.16/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.16/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.16/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" role="//@interimmodels.16/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" role="//@interimmodels.16/@designmodel/@connector.9/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <component name="PatientOracle" type="server,oracle">
        <port name="supply" role="//@interimmodels.16/@designmodel/@connector.10/@role.1 //@interimmodels.16/@designmodel/@connector.8/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.4"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.16/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.2/@role.0" connector="//@interimmodels.16/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.16/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.4/@role.0" connector="//@interimmodels.16/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.3/@role.0" connector="//@interimmodels.16/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.3/@role.0" connector="//@interimmodels.16/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.1/@role.0" connector="//@interimmodels.16/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.16/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.16/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.9/@role.0" connector="//@interimmodels.16/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.6/@role.0" connector="//@interimmodels.16/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.16/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.16/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.16/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.16/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.0/@role.0" connector="//@interimmodels.16/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.16/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="roptwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.16/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.16/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.8/@connectortype.0"/>
      </connector>
      <connector name="oracleptupwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.16/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.16/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.7/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.16/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.16/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.16/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.16/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.16/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.16/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.16/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.16/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.16/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.16/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.16/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.16/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.16/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.16/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.16/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.16/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.16/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.16/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.16/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.16/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.16/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="8221" verifyTime="0.20896589999999998" testport="//@interimmodels.16/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!70 -> emwire_req?70 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!70 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!70 -> roptwire_uid?70 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!70 -> roptwire_res?70 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!70 -> pgwire_req?70 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!70 -> guardnoti_pub?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!70 -> roptwire_uid?70 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!70 -> roptwire_res?70 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.16/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.16/@designmodel" counterExample="" visitedStates="8222" verifyTime="0.2083246" testport="//@interimmodels.16/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!18 -> soswire_req?18 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!18 -> dispatchwire_req?18 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!18 -> emwire_req?18 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!18 -> pgwire_req?18 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!18 -> pgwire_res?18 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!18 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!18 -> guardnoti_pub?18 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!18 -> ptwire_req?18 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!18 -> roptwire_uid?18 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!18 -> roptwire_res?18 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!18 -> ptwire_res?18 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?18 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!18 -> pgwire_req?18 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!18 -> pgwire_res?18 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!18 -> guardnoti_pub?18 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!18 -> ptwire_req?18 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!18 -> roptwire_uid?18 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!18 -> roptwire_res?18 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!18 -> ptwire_res?18 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!18 -> dispatchwire_res?18 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!18 -> soswire_res?18" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.16/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.16/@designmodel" counterExample="" visitedStates="8221" verifyTime="0.22917259999999998" testport="//@interimmodels.16/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!95 -> soswire_req?95 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!95 -> dispatchwire_req?95 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!95 -> emwire_req?95 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!95 -> pgwire_req?95 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!95 -> pgwire_res?95 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!95 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!95 -> guardnoti_pub?95 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!95 -> ptwire_req?95 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!95 -> roptwire_uid?95 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!95 -> roptwire_res?95 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!95 -> ptwire_res?95 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?95 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!95 -> pgwire_req?95 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!95 -> pgwire_res?95 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!95 -> guardnoti_pub?95 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!95 -> ptwire_req?95 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!95 -> roptwire_uid?95 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!95 -> roptwire_res?95 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!95 -> ptwire_res?95 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!95 -> dispatchwire_res?95 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!95 -> soswire_res?95" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.16/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.16/@designmodel" counterExample="" visitedStates="12690" verifyTime="0.45991479999999996" testport="//@interimmodels.16/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!38 -> soswire_req?38 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!38 -> dispatchwire_req?38 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!38 -> emwire_req?38 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!38 -> pgwire_req?38 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!38 -> pgwire_res?38 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!38 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!38 -> guardnoti_pub?38 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!38 -> ptwire_req?38 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!38 -> roptwire_uid?38 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!38 -> roptwire_res?38 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!38 -> ptwire_res?38 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?38 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!38 -> pgwire_req?38 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!38 -> pgwire_res?38 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!38 -> guardnoti_pub?38 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!38 -> ptwire_req?38 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!38 -> roptwire_uid?38 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!38 -> roptwire_res?38 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!38 -> ptwire_res?38 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!38 -> dispatchwire_res?38 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!38 -> soswire_res?38" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.16/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.16/@designmodel" counterExample="" visitedStates="12690" verifyTime="0.3532782" testport="//@interimmodels.16/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!14 -> soswire_req?14 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!14 -> dispatchwire_req?14 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!14 -> emwire_req?14 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!14 -> pgwire_req?14 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!14 -> pgwire_res?14 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!14 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!14 -> guardnoti_pub?14 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!14 -> ptwire_req?14 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!14 -> roptwire_uid?14 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!14 -> roptwire_res?14 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!14 -> ptwire_res?14 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?14 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!14 -> pgwire_req?14 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!14 -> pgwire_res?14 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!14 -> guardnoti_pub?14 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!14 -> ptwire_req?14 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!14 -> roptwire_uid?14 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!14 -> roptwire_res?14 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!14 -> ptwire_res?14 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!14 -> dispatchwire_res?14 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!14 -> soswire_res?14" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.16/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="4840" verifyTime="0.1563422" testport="//@interimmodels.16/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="4708" verifyTime="0.1431898" testport="//@interimmodels.16/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!65 -> pgupwire_cmmd!65 -> pgupwire_cmmd?65 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!65 -> emupwire_cmmd!65 -> emupwire_cmmd?65 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?65 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?65 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroptwire" visitedStates="9575" verifyTime="0.2386064" testport="//@interimmodels.16/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!53 -> soswire_req?53 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53 -> dispatchwire_req?53 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!53 -> emwire_stmt?53 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?53 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!53 -> dispatchwire_res?53 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!53 -> soswire_res?53" exprText="[] (PatientBlockchain.roptwire.blocksupplier.process-> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracleptupwire" counterExample="init -> HospitalMgmt_updaterec_updated -> HospitalMgmt_ptupwire_requester_process -> ptupwire_req!89 -> ptupwire_req?89 -> PatientOracle_ptupwire_responder_invoke -> PatientOracle_supply_supplied -> PatientOracle_ptupwire_responder_process -> ptupwire_res!89 -> ptupwire_res?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!98 -> ptwire_req?98 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!98 -> roptwire_uid?98 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!98 -> roptwire_res?98 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!98 -> ptwire_res?98 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!67 -> ptwire_req?67 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!67 -> roptwire_uid?67 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!67 -> roptwire_res?67 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!67 -> ptwire_res?67 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!58 -> pgwire_stmt?58 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!58 -> pgwire_res?58 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!21" visitedStates="67" verifyTime="0.023864399999999997" testport="//@interimmodels.16/@designmodel/@component.9/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!33 -> emwire_stmt?33 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[] (PatientOracle.supply.supplied-> &lt;> PatientBlockchain.oracleptupwire.blockstorage.stored);&#xA;;&#xA;;&#xA;">
        <connector href="target.arch#//@connector.9"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.16/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.16/@designmodel/@host.0/@node.0" namedport="//@interimmodels.16/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.16/@designmodel/@host.0/@node.0" namedport="//@interimmodels.16/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.16/@designmodel/@component.2 //@interimmodels.16/@designmodel/@component.6 //@interimmodels.16/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.16/@designmodel/@host.1/@node.0" namedport="//@interimmodels.16/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.16/@designmodel/@host.1/@node.0" namedport="//@interimmodels.16/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.16/@designmodel/@host.1/@node.0" namedport="//@interimmodels.16/@designmodel/@component.6/@port.1 //@interimmodels.16/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.16/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.16/@designmodel/@host.2/@node.0" namedport="//@interimmodels.16/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.16/@designmodel/@host.2/@node.0" namedport="//@interimmodels.16/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.16/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.16/@designmodel/@host.3/@node.0" namedport="//@interimmodels.16/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.16/@designmodel/@host.3/@node.0" namedport="//@interimmodels.16/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.16/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.16/@designmodel/@host.4/@node.0" namedport="//@interimmodels.16/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.16/@designmodel/@component.7 //@interimmodels.16/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.16/@designmodel/@host.5/@node.0" namedport="//@interimmodels.16/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.16/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.16/@designmodel/@host.6/@node.0" namedport="//@interimmodels.16/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.16/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.16/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.16/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.16/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="20" description="deploy service: requestdispatcher" nextModel="//@interimmodels.18" isStable="true" name="deploy-service">
    <designmodel name="inter20">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.17/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.17/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.17/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.17/@designmodel/@connector.0/@role.0 //@interimmodels.17/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.17/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.17/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.17/@designmodel/@connector.0/@role.1 //@interimmodels.17/@designmodel/@connector.1/@role.0 //@interimmodels.17/@designmodel/@connector.2/@role.0 //@interimmodels.17/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.17/@designmodel/@connector.1/@role.1 //@interimmodels.17/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.17/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.17/@designmodel/@connector.1/@role.1 //@interimmodels.17/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.17/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.17/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.17/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.17/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.17/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.17/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.17/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.17/@designmodel/@connector.4/@role.1 //@interimmodels.17/@designmodel/@connector.9/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.17/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.17/@designmodel/@connector.5/@role.0 //@interimmodels.17/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.17/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.17/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.17/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.17/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" role="//@interimmodels.17/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" role="//@interimmodels.17/@designmodel/@connector.9/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <component name="PatientOracle" type="server,oracle">
        <port name="supply" role="//@interimmodels.17/@designmodel/@connector.10/@role.1 //@interimmodels.17/@designmodel/@connector.8/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.4"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.17/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.2/@role.0" connector="//@interimmodels.17/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="publisher" roletype="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.17/@designmodel/@connector.1"/>
        <role name="subscriber" roletype="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.4/@role.0" connector="//@interimmodels.17/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.3/@role.0" connector="//@interimmodels.17/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.3/@role.0" connector="//@interimmodels.17/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.1/@role.0" connector="//@interimmodels.17/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.17/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.17/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.9/@role.0" connector="//@interimmodels.17/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.6/@role.0" connector="//@interimmodels.17/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.17/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.17/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.17/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.17/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.0/@role.0" connector="//@interimmodels.17/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.17/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="roptwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.17/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.17/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.8/@connectortype.0"/>
      </connector>
      <connector name="oracleptupwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.17/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.17/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.7/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.17/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.17/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.17/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.17/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.17/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.17/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.17/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.17/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.17/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.17/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.17/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.17/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.17/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.17/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.17/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.17/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.17/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.17/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.17/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.17/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.17/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="8221" verifyTime="0.2049073" testport="//@interimmodels.17/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!89 -> soswire_req?89 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!89 -> dispatchwire_req?89 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!89 -> emwire_req?89 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!89 -> pgwire_req?89 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!89 -> pgwire_res?89 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!89 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!89 -> guardnoti_pub?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!89 -> ptwire_req?89 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!89 -> roptwire_uid?89 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!89 -> roptwire_res?89 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!89 -> ptwire_res?89 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?89 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!89 -> pgwire_req?89 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!89 -> pgwire_res?89 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!89 -> guardnoti_pub?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!89 -> ptwire_req?89 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!89 -> roptwire_uid?89 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!89 -> roptwire_res?89 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!89 -> ptwire_res?89 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!89 -> dispatchwire_res?89 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!89 -> soswire_res?89" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.17/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.17/@designmodel" counterExample="" visitedStates="8222" verifyTime="0.2103755" testport="//@interimmodels.17/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!52 -> soswire_req?52 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!52 -> dispatchwire_req?52 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!52 -> emwire_req?52 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!52 -> pgwire_req?52 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!52 -> pgwire_res?52 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!52 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!52 -> guardnoti_pub?52 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?52 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!52 -> pgwire_req?52 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!52 -> pgwire_res?52 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!52 -> guardnoti_pub?52 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!52 -> dispatchwire_res?52 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!52 -> soswire_res?52" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.17/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.17/@designmodel" counterExample="" visitedStates="8221" verifyTime="0.2143666" testport="//@interimmodels.17/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!41 -> soswire_req?41 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!41 -> dispatchwire_req?41 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!41 -> emwire_req?41 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!41 -> pgwire_req?41 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!41 -> pgwire_res?41 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!41 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!41 -> guardnoti_pub?41 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!41 -> ptwire_req?41 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!41 -> roptwire_uid?41 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!41 -> roptwire_res?41 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!41 -> ptwire_res?41 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?41 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!41 -> pgwire_req?41 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!41 -> pgwire_res?41 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!41 -> guardnoti_pub?41 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!41 -> ptwire_req?41 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!41 -> roptwire_uid?41 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!41 -> roptwire_res?41 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!41 -> ptwire_res?41 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!41 -> dispatchwire_res?41 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!41 -> soswire_res?41" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.17/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.17/@designmodel" counterExample="" visitedStates="12690" verifyTime="0.330716" testport="//@interimmodels.17/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!37 -> soswire_req?37 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!37 -> dispatchwire_req?37 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!37 -> emwire_req?37 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!37 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!37 -> roptwire_uid?37 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!37 -> roptwire_res?37 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?37 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!37 -> pgwire_req?37 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!37 -> pgwire_res?37 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!37 -> guardnoti_pub?37 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!37 -> ptwire_req?37 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!37 -> roptwire_uid?37 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!37 -> roptwire_res?37 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!37 -> ptwire_res?37 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!37 -> dispatchwire_res?37 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!37 -> soswire_res?37" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.17/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.17/@designmodel" counterExample="" visitedStates="12690" verifyTime="0.3213058" testport="//@interimmodels.17/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!47 -> soswire_req?47 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!47 -> dispatchwire_req?47 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!47 -> emwire_req?47 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!47 -> pgwire_req?47 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!47 -> pgwire_res?47 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!47 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!47 -> guardnoti_pub?47 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!47 -> ptwire_req?47 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!47 -> roptwire_uid?47 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!47 -> roptwire_res?47 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!47 -> ptwire_res?47 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?47 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!47 -> pgwire_req?47 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!47 -> pgwire_res?47 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!47 -> guardnoti_pub?47 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!47 -> ptwire_req?47 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!47 -> roptwire_uid?47 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!47 -> roptwire_res?47 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!47 -> ptwire_res?47 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!47 -> dispatchwire_res?47 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!47 -> soswire_res?47" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.17/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="4840" verifyTime="0.1452462" testport="//@interimmodels.17/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="4708" verifyTime="0.144736" testport="//@interimmodels.17/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!20 -> pgupwire_cmmd!20 -> pgupwire_cmmd?20 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!20 -> emupwire_cmmd!20 -> emupwire_cmmd?20 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?20 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?20 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroptwire" visitedStates="9575" verifyTime="0.24261059999999998" testport="//@interimmodels.17/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!53 -> soswire_req?53 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53 -> dispatchwire_req?53 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!53 -> emwire_stmt?53 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?53 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!53 -> dispatchwire_res?53 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!53 -> soswire_res?53" exprText="[] (PatientBlockchain.roptwire.blocksupplier.process-> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracleptupwire" counterExample="init -> HospitalMgmt_updaterec_updated -> HospitalMgmt_ptupwire_requester_process -> ptupwire_req!89 -> ptupwire_req?89 -> PatientOracle_ptupwire_responder_invoke -> PatientOracle_supply_supplied -> PatientOracle_ptupwire_responder_process -> ptupwire_res!89 -> ptupwire_res?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!98 -> ptwire_req?98 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!98 -> roptwire_uid?98 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!98 -> roptwire_res?98 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!98 -> ptwire_res?98 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!67 -> ptwire_req?67 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!67 -> roptwire_uid?67 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!67 -> roptwire_res?67 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!67 -> ptwire_res?67 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!58 -> pgwire_stmt?58 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!58 -> pgwire_res?58 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!21" visitedStates="67" verifyTime="0.0240774" testport="//@interimmodels.17/@designmodel/@component.9/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!33 -> emwire_stmt?33 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[] (PatientOracle.supply.supplied-> &lt;> PatientBlockchain.oracleptupwire.blockstorage.stored);&#xA;;&#xA;;&#xA;">
        <connector href="target.arch#//@connector.9"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.17/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.17/@designmodel/@host.0/@node.0" namedport="//@interimmodels.17/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.17/@designmodel/@host.0/@node.0" namedport="//@interimmodels.17/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.17/@designmodel/@component.2 //@interimmodels.17/@designmodel/@component.6 //@interimmodels.17/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.17/@designmodel/@host.1/@node.0" namedport="//@interimmodels.17/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.17/@designmodel/@host.1/@node.0" namedport="//@interimmodels.17/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.17/@designmodel/@host.1/@node.0" namedport="//@interimmodels.17/@designmodel/@component.6/@port.1 //@interimmodels.17/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.17/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.17/@designmodel/@host.2/@node.0" namedport="//@interimmodels.17/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.17/@designmodel/@host.2/@node.0" namedport="//@interimmodels.17/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.17/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.17/@designmodel/@host.3/@node.0" namedport="//@interimmodels.17/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.17/@designmodel/@host.3/@node.0" namedport="//@interimmodels.17/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.17/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.17/@designmodel/@host.4/@node.0" namedport="//@interimmodels.17/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.17/@designmodel/@component.7 //@interimmodels.17/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.17/@designmodel/@host.5/@node.0" namedport="//@interimmodels.17/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.17/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.17/@designmodel/@host.6/@node.0" namedport="//@interimmodels.17/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.17/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.17/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.17/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.17/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="21" description="network route for connector:guardnoti between: requestdispatcher lifeguard " nextModel="//@interimmodels.19" name="network-route">
    <designmodel name="inter21">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.18/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.18/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.18/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.18/@designmodel/@connector.0/@role.0 //@interimmodels.18/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.18/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.18/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.18/@designmodel/@connector.0/@role.1 //@interimmodels.18/@designmodel/@connector.2/@role.0 //@interimmodels.18/@designmodel/@connector.3/@role.0 //@interimmodels.18/@designmodel/@connector.1/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.18/@designmodel/@connector.4/@role.0 //@interimmodels.18/@designmodel/@connector.1/@role.1" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.18/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.18/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.18/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.18/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.18/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.18/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.18/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.18/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.18/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.18/@designmodel/@connector.4/@role.1 //@interimmodels.18/@designmodel/@connector.9/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.18/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.18/@designmodel/@connector.5/@role.0 //@interimmodels.18/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.18/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.18/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.18/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.18/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" role="//@interimmodels.18/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" role="//@interimmodels.18/@designmodel/@connector.9/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <component name="PatientOracle" type="server,oracle">
        <port name="supply" role="//@interimmodels.18/@designmodel/@connector.10/@role.1 //@interimmodels.18/@designmodel/@connector.8/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.4"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.18/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.2/@role.0" connector="//@interimmodels.18/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="ESConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="eventpublisher" roletype="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.18/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.4/@role.0" connector="//@interimmodels.18/@designmodel/@connector.1"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.3/@role.0" connector="//@interimmodels.18/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.3/@role.0" connector="//@interimmodels.18/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.1/@role.0" connector="//@interimmodels.18/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.18/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.18/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.9/@role.0" connector="//@interimmodels.18/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.6/@role.0" connector="//@interimmodels.18/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.18/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.18/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.18/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.18/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.0/@role.0" connector="//@interimmodels.18/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.18/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="roptwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.18/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.18/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.8/@connectortype.0"/>
      </connector>
      <connector name="oracleptupwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.18/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.18/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.7/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.18/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.18/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.18/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.18/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.18/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.18/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.18/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.18/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.18/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.18/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.18/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.18/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.18/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.18/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.18/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.18/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.18/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.18/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.18/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.18/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.18/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="1240" verifyTime="0.047749799999999995" testport="//@interimmodels.18/@designmodel/@component.0/@port.0" traceExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!17 -> ptwire_req?17 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!17 -> roptwire_uid?17 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!17 -> roptwire_res?17 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!17 -> ptwire_res?17 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!98 -> soswire_req?98 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!98 -> dispatchwire_req?98 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!98 -> emwire_req?98 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!98 -> pgwire_req?98 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!98 -> pgwire_res?98 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!98" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.18/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.18/@designmodel" counterExample="" visitedStates="1277" verifyTime="0.0519122" testport="//@interimmodels.18/@designmodel/@component.0/@port.0" traceExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!59 -> ptwire_req?59 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!59 -> roptwire_uid?59 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!59 -> roptwire_res?59 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!59 -> ptwire_res?59 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!39 -> soswire_req?39 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!39 -> dispatchwire_req?39 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!39 -> emwire_req?39 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!39 -> pgwire_req?39 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!39 -> pgwire_res?39 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!39" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.18/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.18/@designmodel" counterExample="" visitedStates="1240" verifyTime="0.0485813" testport="//@interimmodels.18/@designmodel/@component.0/@port.0" traceExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!81 -> ptwire_req?81 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!81 -> roptwire_uid?81 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!81 -> roptwire_res?81 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!81 -> ptwire_res?81 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!44 -> soswire_req?44 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!44 -> dispatchwire_req?44 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!44 -> emwire_req?44 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!44 -> pgwire_req?44 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!44 -> pgwire_res?44 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!44" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.18/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.18/@designmodel" counterExample="" visitedStates="1739" verifyTime="0.0599301" testport="//@interimmodels.18/@designmodel/@component.0/@port.0" traceExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!45 -> ptwire_req?45 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!45 -> roptwire_uid?45 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!45 -> roptwire_res?45 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!45 -> ptwire_res?45 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!68 -> soswire_req?68 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!68 -> dispatchwire_req?68 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!68 -> emwire_req?68 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!68 -> pgwire_req?68 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!68 -> pgwire_res?68 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!68" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.18/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.18/@designmodel" counterExample="" visitedStates="1055" verifyTime="0.0456322" testport="//@interimmodels.18/@designmodel/@component.0/@port.0" traceExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!57 -> ptwire_req?57 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!57 -> roptwire_uid?57 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!57 -> roptwire_res?57 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!57 -> ptwire_res?57 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!25 -> soswire_req?25 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!25 -> dispatchwire_req?25 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!25 -> emwire_req?25 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!25 -> pgwire_req?25 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!25 -> pgwire_res?25 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!25" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.18/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="119662" verifyTime="3.7747528" testport="//@interimmodels.18/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="116434" verifyTime="3.9620081" testport="//@interimmodels.18/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!32 -> pgupwire_cmmd!32 -> pgupwire_cmmd?32 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!32 -> emupwire_cmmd!32 -> emupwire_cmmd?32 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?32 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?32 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!76 -> ptwire_req?76 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!76 -> roptwire_uid?76 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!76 -> roptwire_res?76 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!76 -> ptwire_res?76" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroptwire" visitedStates="1226" verifyTime="0.0512134" testport="//@interimmodels.18/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!53 -> soswire_req?53 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53 -> dispatchwire_req?53 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!53 -> emwire_stmt?53 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?53 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!53 -> dispatchwire_res?53 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!53 -> soswire_res?53" exprText="[] (PatientBlockchain.roptwire.blocksupplier.process-> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracleptupwire" counterExample="init -> HospitalMgmt_updaterec_updated -> HospitalMgmt_ptupwire_requester_process -> ptupwire_req!89 -> ptupwire_req?89 -> PatientOracle_ptupwire_responder_invoke -> PatientOracle_supply_supplied -> PatientOracle_ptupwire_responder_process -> ptupwire_res!89 -> ptupwire_res?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!98 -> ptwire_req?98 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!98 -> roptwire_uid?98 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!98 -> roptwire_res?98 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!98 -> ptwire_res?98 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!67 -> ptwire_req?67 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!67 -> roptwire_uid?67 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!67 -> roptwire_res?67 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!67 -> ptwire_res?67 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!58 -> pgwire_stmt?58 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!58 -> pgwire_res?58 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!21" visitedStates="2083" verifyTime="0.0735468" testport="//@interimmodels.18/@designmodel/@component.9/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!33 -> emwire_stmt?33 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[] (PatientOracle.supply.supplied-> &lt;> PatientBlockchain.oracleptupwire.blockstorage.stored);&#xA;;&#xA;;&#xA;">
        <connector href="target.arch#//@connector.9"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-guardnoti" valid="false" counterExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!29 -> ptwire_req?29 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!29 -> roptwire_uid?29 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!29 -> roptwire_res?29 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!29 -> ptwire_res?29 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!75 -> soswire_req?75 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!75 -> dispatchwire_req?75 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!75 -> emwire_req?75 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!75 -> pgwire_req?75 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!75 -> pgwire_res?75 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!75" visitedStates="82" verifyTime="0.0240579" testport="//@interimmodels.18/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!75 -> soswire_req?75 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!75 -> dispatchwire_req?75 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!75 -> emwire_stmt?75 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!75 -> pgwire_stmt?75 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!75 -> pgwire_res?75 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!75 -> guardnoti_pevt?75 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!75 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?75 -> guardnoti_bevt!75 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!75 -> guardnoti_bevt?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!75 -> roptwire_uid?75 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!75 -> roptwire_res?75 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?75 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!75 -> pgwire_stmt?75 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!75 -> pgwire_res?75 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!75 -> guardnoti_pevt?75 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!75 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?75 -> guardnoti_bevt!75 -> guardnoti_bevt?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!75 -> roptwire_uid?75 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!75 -> roptwire_res?75 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!75 -> dispatchwire_res?75 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!75 -> soswire_res?75" exprText="[] (RequestDispatcher.accept.dispatched-> &lt;> GuardnotiLog.guardnoti.eventstore.persist);&#xA;">
        <connector href="target.arch#//@connector.1"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.18/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.18/@designmodel/@host.0/@node.0" namedport="//@interimmodels.18/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.18/@designmodel/@host.0/@node.0" namedport="//@interimmodels.18/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.18/@designmodel/@component.2 //@interimmodels.18/@designmodel/@component.6 //@interimmodels.18/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.18/@designmodel/@host.1/@node.0" namedport="//@interimmodels.18/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.18/@designmodel/@host.1/@node.0" namedport="//@interimmodels.18/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.18/@designmodel/@host.1/@node.0" namedport="//@interimmodels.18/@designmodel/@component.6/@port.1 //@interimmodels.18/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.18/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.18/@designmodel/@host.2/@node.0" namedport="//@interimmodels.18/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.18/@designmodel/@host.2/@node.0" namedport="//@interimmodels.18/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.18/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.18/@designmodel/@host.3/@node.0" namedport="//@interimmodels.18/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.18/@designmodel/@host.3/@node.0" namedport="//@interimmodels.18/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.18/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.18/@designmodel/@host.4/@node.0" namedport="//@interimmodels.18/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.18/@designmodel/@component.7 //@interimmodels.18/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.18/@designmodel/@host.5/@node.0" namedport="//@interimmodels.18/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.18/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.18/@designmodel/@host.6/@node.0" namedport="//@interimmodels.18/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.18/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.18/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.18/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.18/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="22" description="network route for connector:guardnoti between: requestdispatcher guardnotilog " nextModel="//@interimmodels.20" isStable="true" name="network-route">
    <designmodel name="inter22">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.19/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.19/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.19/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.19/@designmodel/@connector.0/@role.0 //@interimmodels.19/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.19/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.19/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.19/@designmodel/@connector.0/@role.1 //@interimmodels.19/@designmodel/@connector.2/@role.0 //@interimmodels.19/@designmodel/@connector.3/@role.0 //@interimmodels.19/@designmodel/@connector.1/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.19/@designmodel/@connector.4/@role.0 //@interimmodels.19/@designmodel/@connector.1/@role.1" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.19/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.19/@designmodel/@connector.4/@role.0" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.19/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.19/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.19/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.19/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.19/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.19/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.19/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.19/@designmodel/@connector.4/@role.1 //@interimmodels.19/@designmodel/@connector.9/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.19/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.19/@designmodel/@connector.5/@role.0 //@interimmodels.19/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.19/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.19/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.19/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" role="//@interimmodels.19/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.19/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" role="//@interimmodels.19/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" role="//@interimmodels.19/@designmodel/@connector.9/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <component name="PatientOracle" type="server,oracle">
        <port name="supply" role="//@interimmodels.19/@designmodel/@connector.10/@role.1 //@interimmodels.19/@designmodel/@connector.8/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.4"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.19/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.2/@role.0" connector="//@interimmodels.19/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="ESConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="eventpublisher" roletype="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.19/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.4/@role.0" connector="//@interimmodels.19/@designmodel/@connector.1"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.3/@role.0" connector="//@interimmodels.19/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.3/@role.0" connector="//@interimmodels.19/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.1/@role.0" connector="//@interimmodels.19/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.19/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.19/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.9/@role.0" connector="//@interimmodels.19/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.6/@role.0" connector="//@interimmodels.19/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.19/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.19/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.19/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.19/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.0/@role.0" connector="//@interimmodels.19/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.19/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="roptwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.19/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.19/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.8/@connectortype.0"/>
      </connector>
      <connector name="oracleptupwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.19/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.19/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.7/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.19/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.19/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.19/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.19/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.19/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.19/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.19/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.19/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.19/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.19/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.19/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.19/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.19/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.19/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.19/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.19/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.19/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.19/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.19/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.19/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.19/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="63609" verifyTime="1.7137026" testport="//@interimmodels.19/@designmodel/@component.0/@port.0" traceExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!67 -> ptwire_req?67 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!67 -> roptwire_uid?67 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!67 -> roptwire_res?67 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!67 -> ptwire_res?67 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!14 -> soswire_req?14 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!14 -> dispatchwire_req?14 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!14 -> emwire_req?14 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!14 -> pgwire_req?14 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!14 -> pgwire_res?14 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!14 -> guardnoti_pevt?14 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!14 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?14 -> guardnoti_bevt!14 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!14 -> guardnoti_bevt?14 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!14 -> ptwire_req?14 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!14 -> roptwire_uid?14 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!14 -> roptwire_res?14 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!14 -> ptwire_res?14 -> LifeGuard_ptwire_requester_Skip -> LifeGuard_guardnoti_eventsubscriber_process -> emwire_res?14 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!14 -> pgwire_req?14 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!14 -> pgwire_res?14 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!14 -> guardnoti_pevt?14 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!14 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?14 -> guardnoti_bevt!14 -> guardnoti_bevt?14 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!14 -> ptwire_req?14 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!14 -> roptwire_uid?14 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!14 -> roptwire_res?14 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!14 -> ptwire_res?14 -> LifeGuard_ptwire_requester_Skip -> LifeGuard_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!14 -> dispatchwire_res?14 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!14 -> soswire_res?14" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.19/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.19/@designmodel" counterExample="" visitedStates="63646" verifyTime="1.7218369999999998" testport="//@interimmodels.19/@designmodel/@component.0/@port.0" traceExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!39 -> ptwire_req?39 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!39 -> roptwire_uid?39 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!39 -> roptwire_res?39 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!39 -> ptwire_res?39 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!96 -> soswire_req?96 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!96 -> dispatchwire_req?96 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!96 -> emwire_req?96 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!96 -> pgwire_req?96 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!96 -> pgwire_res?96 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!96 -> guardnoti_pevt?96 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!96 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?96 -> guardnoti_bevt!96 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!96 -> guardnoti_bevt?96 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!96 -> ptwire_req?96 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!96 -> roptwire_uid?96 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!96 -> roptwire_res?96 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!96 -> ptwire_res?96 -> LifeGuard_ptwire_requester_Skip -> LifeGuard_guardnoti_eventsubscriber_process -> emwire_res?96 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!96 -> pgwire_req?96 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!96 -> pgwire_res?96 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!96 -> guardnoti_pevt?96 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!96 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?96 -> guardnoti_bevt!96 -> guardnoti_bevt?96 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!96 -> ptwire_req?96 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!96 -> roptwire_uid?96 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!96 -> roptwire_res?96 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!96 -> ptwire_res?96 -> LifeGuard_ptwire_requester_Skip -> LifeGuard_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!96 -> dispatchwire_res?96 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!96 -> soswire_res?96" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.19/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.19/@designmodel" counterExample="" visitedStates="63609" verifyTime="1.6684259" testport="//@interimmodels.19/@designmodel/@component.0/@port.0" traceExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!73 -> ptwire_req?73 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!73 -> roptwire_uid?73 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!73 -> roptwire_res?73 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!73 -> ptwire_res?73 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!65 -> soswire_req?65 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!65 -> dispatchwire_req?65 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!65 -> emwire_req?65 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!65 -> pgwire_req?65 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!65 -> pgwire_res?65 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!65 -> guardnoti_pevt?65 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!65 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?65 -> guardnoti_bevt!65 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!65 -> guardnoti_bevt?65 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!65 -> ptwire_req?65 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!65 -> roptwire_uid?65 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!65 -> roptwire_res?65 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!65 -> ptwire_res?65 -> LifeGuard_ptwire_requester_Skip -> LifeGuard_guardnoti_eventsubscriber_process -> emwire_res?65 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!65 -> pgwire_req?65 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!65 -> pgwire_res?65 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!65 -> guardnoti_pevt?65 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!65 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?65 -> guardnoti_bevt!65 -> guardnoti_bevt?65 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!65 -> ptwire_req?65 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!65 -> roptwire_uid?65 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!65 -> roptwire_res?65 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!65 -> ptwire_res?65 -> LifeGuard_ptwire_requester_Skip -> LifeGuard_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!65 -> dispatchwire_res?65 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!65 -> soswire_res?65" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.19/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.19/@designmodel" counterExample="" visitedStates="102202" verifyTime="2.7085030999999997" testport="//@interimmodels.19/@designmodel/@component.0/@port.0" traceExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!83 -> ptwire_req?83 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!83 -> roptwire_uid?83 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!83 -> roptwire_res?83 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!83 -> ptwire_res?83 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!98 -> soswire_req?98 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!98 -> dispatchwire_req?98 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!98 -> emwire_req?98 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!98 -> pgwire_req?98 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!98 -> pgwire_res?98 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!98 -> guardnoti_pevt?98 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!98 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?98 -> guardnoti_bevt!98 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!98 -> guardnoti_bevt?98 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!98 -> ptwire_req?98 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!98 -> roptwire_uid?98 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!98 -> roptwire_res?98 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!98 -> ptwire_res?98 -> LifeGuard_ptwire_requester_Skip -> LifeGuard_guardnoti_eventsubscriber_process -> emwire_res?98 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!98 -> pgwire_req?98 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!98 -> pgwire_res?98 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!98 -> guardnoti_pevt?98 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!98 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?98 -> guardnoti_bevt!98 -> guardnoti_bevt?98 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!98 -> ptwire_req?98 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!98 -> roptwire_uid?98 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!98 -> roptwire_res?98 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!98 -> ptwire_res?98 -> LifeGuard_ptwire_requester_Skip -> LifeGuard_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!98 -> dispatchwire_res?98 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!98 -> soswire_res?98" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.19/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.19/@designmodel" counterExample="" visitedStates="92506" verifyTime="2.4872033" testport="//@interimmodels.19/@designmodel/@component.0/@port.0" traceExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!21 -> ptwire_req?21 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!21 -> roptwire_uid?21 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!21 -> roptwire_res?21 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!21 -> ptwire_res?21 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!87 -> soswire_req?87 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!87 -> dispatchwire_req?87 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!87 -> emwire_req?87 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!87 -> pgwire_req?87 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!87 -> pgwire_res?87 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!87 -> guardnoti_pevt?87 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!87 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?87 -> guardnoti_bevt!87 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!87 -> guardnoti_bevt?87 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!87 -> ptwire_req?87 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!87 -> roptwire_uid?87 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!87 -> roptwire_res?87 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!87 -> ptwire_res?87 -> LifeGuard_ptwire_requester_Skip -> LifeGuard_guardnoti_eventsubscriber_process -> emwire_res?87 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!87 -> pgwire_req?87 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!87 -> pgwire_res?87 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!87 -> guardnoti_pevt?87 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!87 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?87 -> guardnoti_bevt!87 -> guardnoti_bevt?87 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!87 -> ptwire_req?87 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!87 -> roptwire_uid?87 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!87 -> roptwire_res?87 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!87 -> ptwire_res?87 -> LifeGuard_ptwire_requester_Skip -> LifeGuard_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!87 -> dispatchwire_res?87 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!87 -> soswire_res?87" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.19/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="119662" verifyTime="3.8435278" testport="//@interimmodels.19/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="116434" verifyTime="3.7020901" testport="//@interimmodels.19/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!46 -> pgupwire_cmmd!46 -> pgupwire_cmmd?46 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!46 -> emupwire_cmmd!46 -> emupwire_cmmd?46 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?46 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?46 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!20 -> ptwire_req?20 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!20 -> roptwire_uid?20 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!20 -> roptwire_res?20 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!20 -> ptwire_res?20" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroptwire" visitedStates="75076" verifyTime="1.9833440999999998" testport="//@interimmodels.19/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!53 -> soswire_req?53 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53 -> dispatchwire_req?53 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!53 -> emwire_stmt?53 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?53 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!53 -> dispatchwire_res?53 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!53 -> soswire_res?53" exprText="[] (PatientBlockchain.roptwire.blocksupplier.process-> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracleptupwire" counterExample="init -> HospitalMgmt_updaterec_updated -> HospitalMgmt_ptupwire_requester_process -> ptupwire_req!89 -> ptupwire_req?89 -> PatientOracle_ptupwire_responder_invoke -> PatientOracle_supply_supplied -> PatientOracle_ptupwire_responder_process -> ptupwire_res!89 -> ptupwire_res?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!98 -> ptwire_req?98 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!98 -> roptwire_uid?98 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!98 -> roptwire_res?98 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!98 -> ptwire_res?98 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!67 -> ptwire_req?67 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!67 -> roptwire_uid?67 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!67 -> roptwire_res?67 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!67 -> ptwire_res?67 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!58 -> pgwire_stmt?58 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!58 -> pgwire_res?58 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!21" visitedStates="2083" verifyTime="0.0911483" testport="//@interimmodels.19/@designmodel/@component.9/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!33 -> emwire_stmt?33 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[] (PatientOracle.supply.supplied-> &lt;> PatientBlockchain.oracleptupwire.blockstorage.stored);&#xA;;&#xA;;&#xA;">
        <connector href="target.arch#//@connector.9"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-guardnoti" counterExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!18 -> ptwire_req?18 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!18 -> roptwire_uid?18 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!18 -> roptwire_res?18 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!18 -> ptwire_res?18 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!57 -> ptwire_req?57 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!57 -> roptwire_uid?57 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!57 -> roptwire_res?57 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!57 -> ptwire_res?57 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!27 -> pgwire_stmt?27 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!27 -> pgwire_res?27 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!60 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82" visitedStates="76070" verifyTime="2.0566819" testport="//@interimmodels.19/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!75 -> soswire_req?75 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!75 -> dispatchwire_req?75 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!75 -> emwire_stmt?75 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!75 -> pgwire_stmt?75 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!75 -> pgwire_res?75 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!75 -> guardnoti_pevt?75 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!75 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?75 -> guardnoti_bevt!75 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!75 -> guardnoti_bevt?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!75 -> roptwire_uid?75 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!75 -> roptwire_res?75 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?75 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!75 -> pgwire_stmt?75 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!75 -> pgwire_res?75 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!75 -> guardnoti_pevt?75 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!75 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?75 -> guardnoti_bevt!75 -> guardnoti_bevt?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!75 -> roptwire_uid?75 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!75 -> roptwire_res?75 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!75 -> dispatchwire_res?75 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!75 -> soswire_res?75" exprText="[] (RequestDispatcher.accept.dispatched-> &lt;> GuardnotiLog.guardnoti.eventstore.persist);&#xA;">
        <connector href="target.arch#//@connector.1"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.19/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.19/@designmodel/@host.0/@node.0" namedport="//@interimmodels.19/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.19/@designmodel/@host.0/@node.0" namedport="//@interimmodels.19/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.19/@designmodel/@component.2 //@interimmodels.19/@designmodel/@component.6 //@interimmodels.19/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.19/@designmodel/@host.1/@node.0" namedport="//@interimmodels.19/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.19/@designmodel/@host.1/@node.0" namedport="//@interimmodels.19/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.19/@designmodel/@host.1/@node.0" namedport="//@interimmodels.19/@designmodel/@component.6/@port.1 //@interimmodels.19/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.19/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.19/@designmodel/@host.2/@node.0" namedport="//@interimmodels.19/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.19/@designmodel/@host.2/@node.0" namedport="//@interimmodels.19/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.19/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.19/@designmodel/@host.3/@node.0" namedport="//@interimmodels.19/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.19/@designmodel/@host.3/@node.0" namedport="//@interimmodels.19/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.19/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.19/@designmodel/@host.4/@node.0" namedport="//@interimmodels.19/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.19/@designmodel/@component.7 //@interimmodels.19/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.19/@designmodel/@host.5/@node.0" namedport="//@interimmodels.19/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.19/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.19/@designmodel/@host.6/@node.0" namedport="//@interimmodels.19/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.19/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.19/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.19/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.19/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="23" description="network route for connector:guardnoti between: requestdispatcher lifecare " nextModel="//@interimmodels.21" isStable="true" name="network-route">
    <designmodel name="inter23">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.20/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.20/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.20/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.20/@designmodel/@connector.0/@role.0 //@interimmodels.20/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.20/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.20/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.20/@designmodel/@connector.0/@role.1 //@interimmodels.20/@designmodel/@connector.2/@role.0 //@interimmodels.20/@designmodel/@connector.3/@role.0 //@interimmodels.20/@designmodel/@connector.1/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.20/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.20/@designmodel/@connector.4/@role.0 //@interimmodels.20/@designmodel/@connector.1/@role.1" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.20/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.20/@designmodel/@connector.4/@role.0 //@interimmodels.20/@designmodel/@connector.1/@role.1" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.20/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.20/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.20/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.20/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.20/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.20/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.20/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.20/@designmodel/@connector.4/@role.1 //@interimmodels.20/@designmodel/@connector.9/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.20/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.20/@designmodel/@connector.5/@role.0 //@interimmodels.20/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.20/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.20/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.20/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" role="//@interimmodels.20/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.20/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" role="//@interimmodels.20/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" role="//@interimmodels.20/@designmodel/@connector.9/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <component name="PatientOracle" type="server,oracle">
        <port name="supply" role="//@interimmodels.20/@designmodel/@connector.10/@role.1 //@interimmodels.20/@designmodel/@connector.8/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.4"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.20/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.20/@designmodel/@connector.2/@role.0" connector="//@interimmodels.20/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="ESConnector" connectortype="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="eventpublisher" roletype="//@interimmodels.20/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.20/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.20/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.20/@designmodel/@connector.4/@role.0" connector="//@interimmodels.20/@designmodel/@connector.1"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.20/@designmodel/@connector.3/@role.0" connector="//@interimmodels.20/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.20/@designmodel/@connector.3/@role.0" connector="//@interimmodels.20/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.20/@designmodel/@connector.1/@role.0" connector="//@interimmodels.20/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.20/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.20/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.20/@designmodel/@connector.9/@role.0" connector="//@interimmodels.20/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.20/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.20/@designmodel/@connector.6/@role.0" connector="//@interimmodels.20/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.20/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.20/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.20/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.20/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.20/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.20/@designmodel/@connector.0/@role.0" connector="//@interimmodels.20/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="CSConnector" connectortype="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.20/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.20/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="roptwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.20/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.20/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.8/@connectortype.0"/>
      </connector>
      <connector name="oracleptupwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.20/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.20/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.7/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.20/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.20/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.20/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.20/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.20/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.20/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.20/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.20/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.20/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.20/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.20/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.20/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.20/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.20/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.20/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.20/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.20/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.20/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.20/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.20/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.20/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.20/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.20/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.20/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.20/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.20/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.20/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.20/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.20/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.20/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.20/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.20/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.20/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.20/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.20/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.20/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.20/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.20/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.20/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="22564" verifyTime="0.6071847" testport="//@interimmodels.20/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!24 -> soswire_req?24 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!24 -> dispatchwire_req?24 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!24 -> emwire_req?24 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!24 -> pgwire_req?24 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!24 -> pgwire_res?24 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!24 -> guardnoti_pevt?24 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!24 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?24 -> guardnoti_bevt!24 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!24 -> guardnoti_bevt?24 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!24 -> ptwire_req?24 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!24 -> roptwire_uid?24 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!24 -> roptwire_res?24 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!24 -> ptwire_res?24 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?24 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!24 -> pgwire_req?24 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!24 -> pgwire_res?24 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!24 -> guardnoti_pevt?24 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!24 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?24 -> guardnoti_bevt!24 -> guardnoti_bevt?24 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!24 -> ptwire_req?24 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!24 -> roptwire_uid?24 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!24 -> roptwire_res?24 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!24 -> ptwire_res?24 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!24 -> dispatchwire_res?24 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!24 -> soswire_res?24" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.20/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.20/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.20/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.20/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.20/@designmodel" counterExample="" visitedStates="22565" verifyTime="0.6264415" testport="//@interimmodels.20/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!74 -> soswire_req?74 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!74 -> dispatchwire_req?74 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!74 -> emwire_req?74 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!74 -> pgwire_req?74 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!74 -> pgwire_res?74 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!74 -> guardnoti_pevt?74 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!74 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?74 -> guardnoti_bevt!74 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!74 -> guardnoti_bevt?74 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!74 -> ptwire_req?74 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!74 -> roptwire_uid?74 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!74 -> roptwire_res?74 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!74 -> ptwire_res?74 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?74 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!74 -> pgwire_req?74 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!74 -> pgwire_res?74 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!74 -> guardnoti_pevt?74 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!74 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?74 -> guardnoti_bevt!74 -> guardnoti_bevt?74 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!74 -> ptwire_req?74 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!74 -> roptwire_uid?74 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!74 -> roptwire_res?74 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!74 -> ptwire_res?74 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!74 -> dispatchwire_res?74 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!74 -> soswire_res?74" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.20/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.20/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.20/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.20/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.20/@designmodel" counterExample="" visitedStates="22564" verifyTime="0.6098032999999999" testport="//@interimmodels.20/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!99 -> soswire_req?99 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!99 -> dispatchwire_req?99 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!99 -> emwire_req?99 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!99 -> pgwire_req?99 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!99 -> pgwire_res?99 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!99 -> guardnoti_pevt?99 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!99 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?99 -> guardnoti_bevt!99 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!99 -> guardnoti_bevt?99 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!99 -> ptwire_req?99 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!99 -> roptwire_uid?99 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!99 -> roptwire_res?99 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!99 -> ptwire_res?99 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?99 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!99 -> pgwire_req?99 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!99 -> pgwire_res?99 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!99 -> guardnoti_pevt?99 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!99 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?99 -> guardnoti_bevt!99 -> guardnoti_bevt?99 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!99 -> ptwire_req?99 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!99 -> roptwire_uid?99 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!99 -> roptwire_res?99 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!99 -> ptwire_res?99 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!99 -> dispatchwire_res?99 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!99 -> soswire_res?99" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.20/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.20/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.20/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.20/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.20/@designmodel" counterExample="" visitedStates="34615" verifyTime="0.9234513999999999" testport="//@interimmodels.20/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!23 -> soswire_req?23 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!23 -> dispatchwire_req?23 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!23 -> emwire_req?23 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!23 -> pgwire_req?23 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!23 -> pgwire_res?23 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!23 -> guardnoti_pevt?23 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!23 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?23 -> guardnoti_bevt!23 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!23 -> guardnoti_bevt?23 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!23 -> ptwire_req?23 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!23 -> roptwire_uid?23 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!23 -> roptwire_res?23 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!23 -> ptwire_res?23 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?23 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!23 -> pgwire_req?23 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!23 -> pgwire_res?23 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!23 -> guardnoti_pevt?23 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!23 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?23 -> guardnoti_bevt!23 -> guardnoti_bevt?23 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!23 -> ptwire_req?23 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!23 -> roptwire_uid?23 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!23 -> roptwire_res?23 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!23 -> ptwire_res?23 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!23 -> dispatchwire_res?23 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!23 -> soswire_res?23" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.20/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.20/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.20/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.20/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.20/@designmodel" counterExample="" visitedStates="34615" verifyTime="0.913295" testport="//@interimmodels.20/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82 -> soswire_req?82 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!82 -> dispatchwire_req?82 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!82 -> emwire_req?82 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!82 -> guardnoti_pevt?82 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!82 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?82 -> guardnoti_bevt!82 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!82 -> guardnoti_bevt?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!82 -> roptwire_uid?82 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!82 -> roptwire_res?82 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?82 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!82 -> pgwire_req?82 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!82 -> pgwire_res?82 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!82 -> guardnoti_pevt?82 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!82 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?82 -> guardnoti_bevt!82 -> guardnoti_bevt?82 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!82 -> ptwire_req?82 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!82 -> roptwire_uid?82 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!82 -> roptwire_res?82 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!82 -> ptwire_res?82 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!82 -> dispatchwire_res?82 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!82 -> soswire_res?82" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.20/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.20/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.20/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.20/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="4840" verifyTime="0.1833309" testport="//@interimmodels.20/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="4708" verifyTime="0.1840513" testport="//@interimmodels.20/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!98 -> pgupwire_cmmd!98 -> pgupwire_cmmd?98 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!98 -> emupwire_cmmd!98 -> emupwire_cmmd?98 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?98 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?98 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroptwire" visitedStates="26273" verifyTime="0.8546209" testport="//@interimmodels.20/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!53 -> soswire_req?53 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53 -> dispatchwire_req?53 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!53 -> emwire_stmt?53 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?53 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!53 -> dispatchwire_res?53 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!53 -> soswire_res?53" exprText="[] (PatientBlockchain.roptwire.blocksupplier.process-> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracleptupwire" counterExample="init -> HospitalMgmt_updaterec_updated -> HospitalMgmt_ptupwire_requester_process -> ptupwire_req!89 -> ptupwire_req?89 -> PatientOracle_ptupwire_responder_invoke -> PatientOracle_supply_supplied -> PatientOracle_ptupwire_responder_process -> ptupwire_res!89 -> ptupwire_res?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!98 -> ptwire_req?98 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!98 -> roptwire_uid?98 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!98 -> roptwire_res?98 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!98 -> ptwire_res?98 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!67 -> ptwire_req?67 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!67 -> roptwire_uid?67 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!67 -> roptwire_res?67 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!67 -> ptwire_res?67 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!58 -> pgwire_stmt?58 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!58 -> pgwire_res?58 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!21" visitedStates="67" verifyTime="0.045455699999999995" testport="//@interimmodels.20/@designmodel/@component.9/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!33 -> emwire_stmt?33 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[] (PatientOracle.supply.supplied-> &lt;> PatientBlockchain.oracleptupwire.blockstorage.stored);&#xA;;&#xA;;&#xA;">
        <connector href="target.arch#//@connector.9"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-guardnoti" counterExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!18 -> ptwire_req?18 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!18 -> roptwire_uid?18 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!18 -> roptwire_res?18 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!18 -> ptwire_res?18 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!57 -> ptwire_req?57 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!57 -> roptwire_uid?57 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!57 -> roptwire_res?57 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!57 -> ptwire_res?57 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!27 -> pgwire_stmt?27 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!27 -> pgwire_res?27 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!60 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82" visitedStates="24052" verifyTime="0.666457" testport="//@interimmodels.20/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!75 -> soswire_req?75 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!75 -> dispatchwire_req?75 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!75 -> emwire_stmt?75 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!75 -> pgwire_stmt?75 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!75 -> pgwire_res?75 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!75 -> guardnoti_pevt?75 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!75 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?75 -> guardnoti_bevt!75 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!75 -> guardnoti_bevt?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!75 -> roptwire_uid?75 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!75 -> roptwire_res?75 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?75 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!75 -> pgwire_stmt?75 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!75 -> pgwire_res?75 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!75 -> guardnoti_pevt?75 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!75 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?75 -> guardnoti_bevt!75 -> guardnoti_bevt?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!75 -> roptwire_uid?75 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!75 -> roptwire_res?75 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!75 -> dispatchwire_res?75 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!75 -> soswire_res?75" exprText="[] (RequestDispatcher.accept.dispatched-> &lt;> GuardnotiLog.guardnoti.eventstore.persist);&#xA;">
        <connector href="target.arch#//@connector.1"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.20/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.20/@designmodel/@host.0/@node.0" namedport="//@interimmodels.20/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.20/@designmodel/@host.0/@node.0" namedport="//@interimmodels.20/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.20/@designmodel/@component.2 //@interimmodels.20/@designmodel/@component.6 //@interimmodels.20/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.20/@designmodel/@host.1/@node.0" namedport="//@interimmodels.20/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.20/@designmodel/@host.1/@node.0" namedport="//@interimmodels.20/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.20/@designmodel/@host.1/@node.0" namedport="//@interimmodels.20/@designmodel/@component.6/@port.1 //@interimmodels.20/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.20/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.20/@designmodel/@host.2/@node.0" namedport="//@interimmodels.20/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.20/@designmodel/@host.2/@node.0" namedport="//@interimmodels.20/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.20/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.20/@designmodel/@host.3/@node.0" namedport="//@interimmodels.20/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.20/@designmodel/@host.3/@node.0" namedport="//@interimmodels.20/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.20/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.20/@designmodel/@host.4/@node.0" namedport="//@interimmodels.20/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.20/@designmodel/@component.7 //@interimmodels.20/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.20/@designmodel/@host.5/@node.0" namedport="//@interimmodels.20/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.20/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.20/@designmodel/@host.6/@node.0" namedport="//@interimmodels.20/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.20/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.20/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.20/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.20/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.20/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.20/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.20/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.20/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.20/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.20/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.20/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.20/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.20/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.20/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="24" description="network route for connector:pgwire between: requestdispatcher practitioner " nextModel="//@interimmodels.22" isStable="true" name="network-route">
    <designmodel name="inter24">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.21/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.21/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.21/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.21/@designmodel/@connector.0/@role.0 //@interimmodels.21/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.21/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.21/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.21/@designmodel/@connector.0/@role.1 //@interimmodels.21/@designmodel/@connector.2/@role.0 //@interimmodels.21/@designmodel/@connector.1/@role.0 //@interimmodels.21/@designmodel/@connector.3/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.21/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.21/@designmodel/@connector.4/@role.0 //@interimmodels.21/@designmodel/@connector.1/@role.1" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.21/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.21/@designmodel/@connector.4/@role.0 //@interimmodels.21/@designmodel/@connector.1/@role.1" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.21/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.21/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.21/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.21/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.21/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.21/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.21/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.21/@designmodel/@connector.4/@role.1 //@interimmodels.21/@designmodel/@connector.9/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.21/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.21/@designmodel/@connector.5/@role.0 //@interimmodels.21/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.21/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.21/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.21/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" role="//@interimmodels.21/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.21/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" role="//@interimmodels.21/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" role="//@interimmodels.21/@designmodel/@connector.9/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <component name="PatientOracle" type="server,oracle">
        <port name="supply" role="//@interimmodels.21/@designmodel/@connector.10/@role.1 //@interimmodels.21/@designmodel/@connector.8/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.4"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.21/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.21/@designmodel/@connector.2/@role.0" connector="//@interimmodels.21/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="ESConnector" connectortype="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="eventpublisher" roletype="//@interimmodels.21/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.21/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.21/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.21/@designmodel/@connector.4/@role.0" connector="//@interimmodels.21/@designmodel/@connector.1"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="REConnector,RuleEventQuery" connectortype="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.21/@designmodel/@connector.3/@role.0" connector="//@interimmodels.21/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.21/@designmodel/@connector.3/@role.0" connector="//@interimmodels.21/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="QRConnector" connectortype="//@interimmodels.21/@designmodel/@archstyle.4/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.21/@designmodel/@connector.1/@role.0" connector="//@interimmodels.21/@designmodel/@connector.3"/>
        <role name="readstore" roletype="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.21/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.21/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.21/@designmodel/@connector.9/@role.0" connector="//@interimmodels.21/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.21/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.21/@designmodel/@connector.6/@role.0" connector="//@interimmodels.21/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.21/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.21/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.21/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.21/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.21/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.21/@designmodel/@connector.0/@role.0" connector="//@interimmodels.21/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="CSConnector" connectortype="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.21/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.21/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="roptwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.21/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.21/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.8/@connectortype.0"/>
      </connector>
      <connector name="oracleptupwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.21/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.21/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.7/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.21/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.21/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.21/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.21/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.21/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.21/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.21/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.21/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.21/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.21/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.21/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.21/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.21/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.21/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.21/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.21/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.21/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.21/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.21/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.21/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.21/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.21/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.21/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.21/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.21/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.21/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.21/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.21/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.21/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.21/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.21/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.21/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.21/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.21/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.21/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.21/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.21/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.21/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.21/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="22353" verifyTime="0.6351371" testport="//@interimmodels.21/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!26 -> soswire_req?26 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!26 -> dispatchwire_req?26 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!26 -> emwire_req?26 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!26 -> pgwire_stmt?26 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!26 -> pgwire_res?26 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!26 -> guardnoti_pevt?26 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!26 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?26 -> guardnoti_bevt!26 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!26 -> guardnoti_bevt?26 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!26 -> ptwire_req?26 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!26 -> roptwire_uid?26 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!26 -> roptwire_res?26 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!26 -> ptwire_res?26 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?26 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!26 -> pgwire_stmt?26 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!26 -> pgwire_res?26 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!26 -> guardnoti_pevt?26 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!26 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?26 -> guardnoti_bevt!26 -> guardnoti_bevt?26 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!26 -> ptwire_req?26 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!26 -> roptwire_uid?26 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!26 -> roptwire_res?26 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!26 -> ptwire_res?26 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!26 -> dispatchwire_res?26 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!26 -> soswire_res?26" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.21/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.21/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.21/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.21/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.21/@designmodel" counterExample="" visitedStates="22354" verifyTime="0.6290403999999999" testport="//@interimmodels.21/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!72 -> soswire_req?72 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!72 -> dispatchwire_req?72 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!72 -> emwire_req?72 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!72 -> pgwire_stmt?72 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!72 -> pgwire_res?72 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!72 -> guardnoti_pevt?72 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!72 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?72 -> guardnoti_bevt!72 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!72 -> guardnoti_bevt?72 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!72 -> ptwire_req?72 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!72 -> roptwire_uid?72 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!72 -> roptwire_res?72 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!72 -> ptwire_res?72 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?72 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!72 -> pgwire_stmt?72 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!72 -> pgwire_res?72 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!72 -> guardnoti_pevt?72 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!72 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?72 -> guardnoti_bevt!72 -> guardnoti_bevt?72 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!72 -> ptwire_req?72 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!72 -> roptwire_uid?72 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!72 -> roptwire_res?72 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!72 -> ptwire_res?72 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!72 -> dispatchwire_res?72 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!72 -> soswire_res?72" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.21/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.21/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.21/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.21/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.21/@designmodel" counterExample="" visitedStates="22353" verifyTime="0.5960470999999999" testport="//@interimmodels.21/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!60 -> soswire_req?60 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!60 -> dispatchwire_req?60 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!60 -> emwire_req?60 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!60 -> pgwire_stmt?60 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!60 -> pgwire_res?60 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!60 -> guardnoti_pevt?60 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!60 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?60 -> guardnoti_bevt!60 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!60 -> guardnoti_bevt?60 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!60 -> ptwire_req?60 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!60 -> roptwire_uid?60 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!60 -> roptwire_res?60 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!60 -> ptwire_res?60 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?60 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!60 -> pgwire_stmt?60 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!60 -> pgwire_res?60 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!60 -> guardnoti_pevt?60 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!60 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?60 -> guardnoti_bevt!60 -> guardnoti_bevt?60 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!60 -> ptwire_req?60 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!60 -> roptwire_uid?60 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!60 -> roptwire_res?60 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!60 -> ptwire_res?60 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!60 -> dispatchwire_res?60 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!60 -> soswire_res?60" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.21/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.21/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.21/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.21/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.21/@designmodel" counterExample="" visitedStates="34344" verifyTime="0.9394889999999999" testport="//@interimmodels.21/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!62 -> soswire_req?62 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!62 -> dispatchwire_req?62 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!62 -> emwire_req?62 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!62 -> pgwire_stmt?62 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!62 -> pgwire_res?62 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!62 -> guardnoti_pevt?62 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!62 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?62 -> guardnoti_bevt!62 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!62 -> guardnoti_bevt?62 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!62 -> ptwire_req?62 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!62 -> roptwire_uid?62 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!62 -> roptwire_res?62 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!62 -> ptwire_res?62 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?62 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!62 -> pgwire_stmt?62 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!62 -> pgwire_res?62 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!62 -> guardnoti_pevt?62 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!62 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?62 -> guardnoti_bevt!62 -> guardnoti_bevt?62 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!62 -> ptwire_req?62 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!62 -> roptwire_uid?62 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!62 -> roptwire_res?62 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!62 -> ptwire_res?62 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!62 -> dispatchwire_res?62 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!62 -> soswire_res?62" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.21/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.21/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.21/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.21/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.21/@designmodel" counterExample="" visitedStates="34344" verifyTime="1.0183545999999999" testport="//@interimmodels.21/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!64 -> soswire_req?64 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!64 -> dispatchwire_req?64 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!64 -> emwire_req?64 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!64 -> pgwire_stmt?64 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!64 -> pgwire_res?64 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!64 -> guardnoti_pevt?64 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!64 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?64 -> guardnoti_bevt!64 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!64 -> guardnoti_bevt?64 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!64 -> ptwire_req?64 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!64 -> roptwire_uid?64 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!64 -> roptwire_res?64 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!64 -> ptwire_res?64 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?64 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!64 -> pgwire_stmt?64 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!64 -> pgwire_res?64 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!64 -> guardnoti_pevt?64 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!64 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?64 -> guardnoti_bevt!64 -> guardnoti_bevt?64 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!64 -> ptwire_req?64 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!64 -> roptwire_uid?64 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!64 -> roptwire_res?64 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!64 -> ptwire_res?64 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!64 -> dispatchwire_res?64 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!64 -> soswire_res?64" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.21/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.21/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.21/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.21/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="4840" verifyTime="0.171241" testport="//@interimmodels.21/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="4708" verifyTime="0.1747332" testport="//@interimmodels.21/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!51 -> pgupwire_cmmd!51 -> pgupwire_cmmd?51 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!51 -> emupwire_cmmd!51 -> emupwire_cmmd?51 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?51 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?51 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroptwire" visitedStates="26032" verifyTime="0.7153339" testport="//@interimmodels.21/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!53 -> soswire_req?53 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53 -> dispatchwire_req?53 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!53 -> emwire_stmt?53 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?53 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!53 -> dispatchwire_res?53 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!53 -> soswire_res?53" exprText="[] (PatientBlockchain.roptwire.blocksupplier.process-> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracleptupwire" counterExample="init -> HospitalMgmt_updaterec_updated -> HospitalMgmt_ptupwire_requester_process -> ptupwire_req!89 -> ptupwire_req?89 -> PatientOracle_ptupwire_responder_invoke -> PatientOracle_supply_supplied -> PatientOracle_ptupwire_responder_process -> ptupwire_res!89 -> ptupwire_res?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!98 -> ptwire_req?98 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!98 -> roptwire_uid?98 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!98 -> roptwire_res?98 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!98 -> ptwire_res?98 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!67 -> ptwire_req?67 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!67 -> roptwire_uid?67 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!67 -> roptwire_res?67 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!67 -> ptwire_res?67 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!58 -> pgwire_stmt?58 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!58 -> pgwire_res?58 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!21" visitedStates="67" verifyTime="0.044078599999999996" testport="//@interimmodels.21/@designmodel/@component.9/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!33 -> emwire_stmt?33 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[] (PatientOracle.supply.supplied-> &lt;> PatientBlockchain.oracleptupwire.blockstorage.stored);&#xA;;&#xA;;&#xA;">
        <connector href="target.arch#//@connector.9"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-guardnoti" counterExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!18 -> ptwire_req?18 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!18 -> roptwire_uid?18 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!18 -> roptwire_res?18 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!18 -> ptwire_res?18 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!57 -> ptwire_req?57 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!57 -> roptwire_uid?57 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!57 -> roptwire_res?57 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!57 -> ptwire_res?57 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!27 -> pgwire_stmt?27 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!27 -> pgwire_res?27 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!60 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82" visitedStates="23756" verifyTime="0.6475981" testport="//@interimmodels.21/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!75 -> soswire_req?75 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!75 -> dispatchwire_req?75 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!75 -> emwire_stmt?75 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!75 -> pgwire_stmt?75 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!75 -> pgwire_res?75 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!75 -> guardnoti_pevt?75 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!75 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?75 -> guardnoti_bevt!75 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!75 -> guardnoti_bevt?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!75 -> roptwire_uid?75 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!75 -> roptwire_res?75 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?75 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!75 -> pgwire_stmt?75 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!75 -> pgwire_res?75 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!75 -> guardnoti_pevt?75 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!75 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?75 -> guardnoti_bevt!75 -> guardnoti_bevt?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!75 -> roptwire_uid?75 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!75 -> roptwire_res?75 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!75 -> dispatchwire_res?75 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!75 -> soswire_res?75" exprText="[] (RequestDispatcher.accept.dispatched-> &lt;> GuardnotiLog.guardnoti.eventstore.persist);&#xA;">
        <connector href="target.arch#//@connector.1"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-query-pgwire" visitedStates="22358" verifyTime="0.6171302" testport="//@interimmodels.21/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!34 -> soswire_req?34 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!34 -> dispatchwire_req?34 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!34 -> emwire_req?34 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!34 -> pgwire_stmt?34 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!34 -> pgwire_res?34 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!34 -> guardnoti_pevt?34 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!34 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?34 -> guardnoti_bevt!34 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!34 -> guardnoti_bevt?34 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!34 -> ptwire_req?34 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!34 -> roptwire_uid?34 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!34 -> roptwire_res?34 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!34 -> ptwire_res?34 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?34 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!34 -> pgwire_stmt?34 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!34 -> pgwire_res?34 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!34 -> guardnoti_pevt?34 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!34 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?34 -> guardnoti_bevt!34 -> guardnoti_bevt?34 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!34 -> ptwire_req?34 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!34 -> roptwire_uid?34 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!34 -> roptwire_res?34 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!34 -> ptwire_res?34 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!34 -> dispatchwire_res?34 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!34 -> soswire_res?34" exprText="[] (RequestDispatcher.accept.dispatched-> &lt;> Practitioner.pgwire.readstore.process)">
        <connector href="target.arch#//@connector.3"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.21/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.21/@designmodel/@host.0/@node.0" namedport="//@interimmodels.21/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.21/@designmodel/@host.0/@node.0" namedport="//@interimmodels.21/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.21/@designmodel/@component.2 //@interimmodels.21/@designmodel/@component.6 //@interimmodels.21/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.21/@designmodel/@host.1/@node.0" namedport="//@interimmodels.21/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.21/@designmodel/@host.1/@node.0" namedport="//@interimmodels.21/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.21/@designmodel/@host.1/@node.0" namedport="//@interimmodels.21/@designmodel/@component.6/@port.1 //@interimmodels.21/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.21/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.21/@designmodel/@host.2/@node.0" namedport="//@interimmodels.21/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.21/@designmodel/@host.2/@node.0" namedport="//@interimmodels.21/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.21/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.21/@designmodel/@host.3/@node.0" namedport="//@interimmodels.21/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.21/@designmodel/@host.3/@node.0" namedport="//@interimmodels.21/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.21/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.21/@designmodel/@host.4/@node.0" namedport="//@interimmodels.21/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.21/@designmodel/@component.7 //@interimmodels.21/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.21/@designmodel/@host.5/@node.0" namedport="//@interimmodels.21/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.21/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.21/@designmodel/@host.6/@node.0" namedport="//@interimmodels.21/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.21/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.21/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.21/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.21/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.21/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.21/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.21/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.21/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.21/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.21/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.21/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.21/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.21/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.21/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="25" description="network route for connector:emwire between: requestdispatcher emcenter " isStable="true" name="network-route">
    <designmodel name="inter25">
      <component name="LifeBand" type="client" deploymentnode="//@interimmodels.22/@designmodel/@host.4/@node.0">
        <port name="alert" role="//@interimmodels.22/@designmodel/@connector.7/@role.0" type="request,OutboundPort">
          <events name="onalert"/>
        </port>
      </component>
      <component name="SOSGateway" type="client,server" deploymentnode="//@interimmodels.22/@designmodel/@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="sos" role="//@interimmodels.22/@designmodel/@connector.0/@role.0 //@interimmodels.22/@designmodel/@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
          <events name="acknowledge" next="//@interimmodels.22/@designmodel/@component.1/@port.0/@events.1"/>
          <events name="alert"/>
        </port>
      </component>
      <component name="RequestDispatcher" type="server,broadcaster,readendpoint,datareader" deploymentnode="//@interimmodels.22/@designmodel/@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
        <port name="accept" role="//@interimmodels.22/@designmodel/@connector.0/@role.1 //@interimmodels.22/@designmodel/@connector.1/@role.0 //@interimmodels.22/@designmodel/@connector.3/@role.0 //@interimmodels.22/@designmodel/@connector.2/@role.0" type="response,broadcast,read,read,OutboundPort,InboundPort,EventProcessorPort">
          <events name="dispatched"/>
        </port>
      </component>
      <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.22/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="gnotify" role="//@interimmodels.22/@designmodel/@connector.4/@role.0 //@interimmodels.22/@designmodel/@connector.1/@role.1" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@interimmodels.22/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="cnotify" role="//@interimmodels.22/@designmodel/@connector.4/@role.0 //@interimmodels.22/@designmodel/@connector.1/@role.1" type="listen,listen,read,read,OutboundPort,InboundPort">
          <events name="acknowlege"/>
        </port>
      </component>
      <component name="Practitioner" type="repository" deploymentnode="//@interimmodels.22/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="pgaccess" role="//@interimmodels.22/@designmodel/@connector.3/@role.1" type="access,InboundPort,EventProcessorPort">
          <events name="return"/>
        </port>
        <port name="pgupdate" role="//@interimmodels.22/@designmodel/@connector.6/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="EmCenter" type="readendpoint,datareader,repository" deploymentnode="//@interimmodels.22/@designmodel/@host.1/@node.0" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="emaccess" role="//@interimmodels.22/@designmodel/@connector.2/@role.1" type="read,read,access,OutboundPort,InboundPort,EventProcessorPort">
          <events name="emaccessed"/>
        </port>
        <port name="emupdate" role="//@interimmodels.22/@designmodel/@connector.5/@role.1" type="store,InboundPort,EventProcessorPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="Patient" type="repository,RuleSecureWriting,RuleSecureReading" deploymentnode="//@interimmodels.22/@designmodel/@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="ptaccess" role="//@interimmodels.22/@designmodel/@connector.4/@role.1 //@interimmodels.22/@designmodel/@connector.9/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="ptaccessed"/>
        </port>
        <port name="ptupdate" type="store,InboundPort,TamperingProofPort">
          <events name="ptcommit"/>
        </port>
      </component>
      <component name="BackOffice" type="datawriter" deploymentnode="//@interimmodels.22/@designmodel/@host.6/@node.0" securityCharacters="LeastPriviledge">
        <port name="updateprofile" role="//@interimmodels.22/@designmodel/@connector.5/@role.0 //@interimmodels.22/@designmodel/@connector.6/@role.0" type="write,OutboundPort,EventProcessorPort">
          <events name="issueupdate"/>
        </port>
      </component>
      <component name="HospitalMgmt" type="datawriter" deploymentnode="//@interimmodels.22/@designmodel/@host.5/@node.0">
        <port name="updaterec" role="//@interimmodels.22/@designmodel/@connector.8/@role.0" type="write,OutboundPort">
          <events name="updated"/>
        </port>
      </component>
      <component name="PgupwireCommandLog" type="commanddb,datastore">
        <port name="logpgupwire" role="//@interimmodels.22/@designmodel/@connector.6/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="GuardnotiLog" type="eventlogger,datastore">
        <port name="logguardnoti" role="//@interimmodels.22/@designmodel/@connector.1/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="EmupwireCommandLog" type="commanddb,datastore">
        <port name="logemupwire" role="//@interimmodels.22/@designmodel/@connector.5/@role.2" type="logcommand,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.1"/>
      </component>
      <component name="PatientBlockchain" type="blockchain,datastore">
        <port name="append" role="//@interimmodels.22/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="access" role="//@interimmodels.22/@designmodel/@connector.9/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.8/@node.0"/>
      </component>
      <component name="PatientOracle" type="server,oracle">
        <port name="supply" role="//@interimmodels.22/@designmodel/@connector.10/@role.1 //@interimmodels.22/@designmodel/@connector.8/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.4"/>
      </component>
      <connector name="dispatchwire" type="CSConnector" connectortype="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.22/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.22/@designmodel/@connector.2/@role.0" connector="//@interimmodels.22/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="guardnoti" type="ESConnector" connectortype="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="eventpublisher" roletype="//@interimmodels.22/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="publisher,out" connector="//@interimmodels.22/@designmodel/@connector.1"/>
        <role name="eventsubscriber" roletype="//@interimmodels.22/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="subscriber,in" nextRoleExpr="//@interimmodels.22/@designmodel/@connector.4/@role.0" connector="//@interimmodels.22/@designmodel/@connector.1"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
        <communicationlink href="data.json#//@link.3"/>
        <communicationlink href="data.json#//@link.4"/>
      </connector>
      <connector name="emwire" type="QRConnector" connectortype="//@interimmodels.22/@designmodel/@archstyle.4/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.22/@designmodel/@connector.3/@role.0" connector="//@interimmodels.22/@designmodel/@connector.2"/>
        <role name="readstore" roletype="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.22/@designmodel/@connector.3/@role.0" connector="//@interimmodels.22/@designmodel/@connector.2"/>
      </connector>
      <connector name="pgwire" type="QRConnector" connectortype="//@interimmodels.22/@designmodel/@archstyle.4/@connectortype.0">
        <role name="querier" roletype="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" nextRoleExpr="//@interimmodels.22/@designmodel/@connector.1/@role.0" connector="//@interimmodels.22/@designmodel/@connector.3"/>
        <role name="readstore" roletype="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" connector="//@interimmodels.22/@designmodel/@connector.3"/>
      </connector>
      <connector name="ptwire" type="CSConnector" connectortype="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.0" type="reader,out" connector="//@interimmodels.22/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.1" type="readstorage,in" nextRoleExpr="//@interimmodels.22/@designmodel/@connector.9/@role.0" connector="//@interimmodels.22/@designmodel/@connector.4"/>
        <communicationlink href="data.json#//@link.6"/>
        <communicationlink href="data.json#//@link.7"/>
      </connector>
      <connector name="emupwire" type="CRConnector" connectortype="//@interimmodels.22/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" nextRoleExpr="//@interimmodels.22/@designmodel/@connector.6/@role.0" connector="//@interimmodels.22/@designmodel/@connector.5"/>
        <role name="readstore" roletype="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.22/@designmodel/@connector.5"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="pgupwire" type="CRConnector" connectortype="//@interimmodels.22/@designmodel/@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="commander" roletype="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.22/@designmodel/@connector.6"/>
        <role name="readstore" roletype="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.1" type="writestorage,in" connector="//@interimmodels.22/@designmodel/@connector.6"/>
        <role name="commandstore" type="in">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="soswire" type="CSConnector" connectortype="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="requester,out" connector="//@interimmodels.22/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="responder,in" nextRoleExpr="//@interimmodels.22/@designmodel/@connector.0/@role.0" connector="//@interimmodels.22/@designmodel/@connector.7"/>
        <communicationlink href="data.json#//@link.5"/>
      </connector>
      <connector name="ptupwire" type="CSConnector" connectortype="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.0" type="writer,out" connector="//@interimmodels.22/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.22/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="roptwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.22/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.22/@designmodel/@connector.9">
          <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.8/@connectortype.0"/>
      </connector>
      <connector name="oracleptupwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.22/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.22/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.7/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.22/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.22/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.22/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.22/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.22/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.22/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.22/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.22/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.22/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.22/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.22/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.22/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.22/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.22/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.22/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.22/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.22/@designmodel/@archstyle.3/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.22/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.22/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.22/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.22/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.22/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.22/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.22/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.22/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.22/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.22/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.22/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.22/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.22/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.22/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.22/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.22/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.22/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.22/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.22/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.22/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.22/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.22/@designmodel" counterExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!63 -> soswire_req?63 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!63 -> dispatchwire_req?63 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_reader_process -> emwire_req!63 -> emwire_req?63 -> EmCenter_emwire_readstorage_invoke -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> EmCenter_pgwire_reader_Skip -> EmCenter_guardnoti_publisher_process -> guardnoti_pub!63 -> EmCenter_guardnoti_publisher_Skip -> EmCenter_emwire_readstorage_process -> emwire_res!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> emwire_res?63 -> RequestDispatcher_emwire_reader_Skip -> RequestDispatcher_pgwire_reader_process -> pgwire_req!63 -> pgwire_req?63 -> Practitioner_pgwire_readstorage_invoke -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstorage_process -> pgwire_res!63 -> pgwire_res?63 -> RequestDispatcher_pgwire_reader_Skip -> RequestDispatcher_guardnoti_publisher_process -> guardnoti_pub!63 -> guardnoti_pub?63 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!63 -> ptwire_req?63 -> Patient_ptwire_readstorage_invoke -> Patient_ptaccess_ptaccessed -> Patient_ptwire_readstorage_process -> ptwire_res!63 -> ptwire_res?63 -> LifeCare_ptwire_reader_Skip -> LifeCare_guardnoti_subscriber_process -> RequestDispatcher_guardnoti_publisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!63 -> dispatchwire_res?63 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!63 -> soswire_res?63" visitedStates="22352" verifyTime="0.6259475" testport="//@interimmodels.22/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!56 -> soswire_req?56 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!56 -> dispatchwire_req?56 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!56 -> emwire_stmt?56 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!56 -> pgwire_stmt?56 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!56 -> pgwire_res?56 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!56 -> guardnoti_pevt?56 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!56 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?56 -> guardnoti_bevt!56 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!56 -> guardnoti_bevt?56 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!56 -> ptwire_req?56 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!56 -> roptwire_uid?56 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!56 -> roptwire_res?56 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!56 -> ptwire_res?56 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?56 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!56 -> pgwire_stmt?56 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!56 -> pgwire_res?56 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!56 -> guardnoti_pevt?56 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!56 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?56 -> guardnoti_bevt!56 -> guardnoti_bevt?56 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!56 -> ptwire_req?56 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!56 -> roptwire_uid?56 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!56 -> roptwire_res?56 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!56 -> ptwire_res?56 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!56 -> dispatchwire_res?56 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!56 -> soswire_res?56" exprText="[]  (LifeBand.alert.onalert -> &lt;> SOSGateway.sos.acknowledge)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.22/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.22/@designmodel/@component.0/@port.0/@events.0" nextExpr="//@interimmodels.22/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.22/@designmodel/@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.22/@designmodel" counterExample="" visitedStates="22353" verifyTime="0.6460342" testport="//@interimmodels.22/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!38 -> soswire_req?38 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!38 -> dispatchwire_req?38 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!38 -> emwire_stmt?38 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!38 -> pgwire_stmt?38 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!38 -> pgwire_res?38 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!38 -> guardnoti_pevt?38 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!38 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?38 -> guardnoti_bevt!38 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!38 -> guardnoti_bevt?38 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!38 -> ptwire_req?38 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!38 -> roptwire_uid?38 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!38 -> roptwire_res?38 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!38 -> ptwire_res?38 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?38 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!38 -> pgwire_stmt?38 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!38 -> pgwire_res?38 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!38 -> guardnoti_pevt?38 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!38 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?38 -> guardnoti_bevt!38 -> guardnoti_bevt?38 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!38 -> ptwire_req?38 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!38 -> roptwire_uid?38 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!38 -> roptwire_res?38 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!38 -> ptwire_res?38 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!38 -> dispatchwire_res?38 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!38 -> soswire_res?38" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> RequestDispatcher.accept.dispatched);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.22/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.22/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.22/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.22/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.22/@designmodel" counterExample="" visitedStates="22351" verifyTime="0.6214436999999999" testport="//@interimmodels.22/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!99 -> soswire_req?99 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!99 -> dispatchwire_req?99 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!99 -> emwire_stmt?99 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!99 -> pgwire_stmt?99 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!99 -> pgwire_res?99 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!99 -> guardnoti_pevt?99 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!99 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?99 -> guardnoti_bevt!99 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!99 -> guardnoti_bevt?99 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!99 -> ptwire_req?99 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!99 -> roptwire_uid?99 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!99 -> roptwire_res?99 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!99 -> ptwire_res?99 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?99 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!99 -> pgwire_stmt?99 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!99 -> pgwire_res?99 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!99 -> guardnoti_pevt?99 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!99 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?99 -> guardnoti_bevt!99 -> guardnoti_bevt?99 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!99 -> ptwire_req?99 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!99 -> roptwire_uid?99 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!99 -> roptwire_res?99 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!99 -> ptwire_res?99 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!99 -> dispatchwire_res?99 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!99 -> soswire_res?99" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.22/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.22/@designmodel/@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.22/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.22/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.22/@designmodel" counterExample="" visitedStates="34343" verifyTime="0.9269771" testport="//@interimmodels.22/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!70 -> emwire_stmt?70 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!70 -> pgwire_stmt?70 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!70 -> guardnoti_pevt?70 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!70 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?70 -> guardnoti_bevt!70 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!70 -> guardnoti_bevt?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!70 -> roptwire_uid?70 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!70 -> roptwire_res?70 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?70 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!70 -> pgwire_stmt?70 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!70 -> pgwire_res?70 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!70 -> guardnoti_pevt?70 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!70 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?70 -> guardnoti_bevt!70 -> guardnoti_bevt?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!70 -> ptwire_req?70 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!70 -> roptwire_uid?70 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!70 -> roptwire_res?70 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!70 -> ptwire_res?70 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.22/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.22/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.22/@designmodel/@component.4/@port.0/@events.0" nextExpr="//@interimmodels.22/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.22/@designmodel" counterExample="" visitedStates="34343" verifyTime="0.9287213999999999" testport="//@interimmodels.22/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!48 -> soswire_req?48 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!48 -> dispatchwire_req?48 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!48 -> emwire_stmt?48 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!48 -> pgwire_stmt?48 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!48 -> pgwire_res?48 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!48 -> guardnoti_pevt?48 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!48 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?48 -> guardnoti_bevt!48 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!48 -> guardnoti_bevt?48 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!48 -> ptwire_req?48 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!48 -> roptwire_uid?48 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!48 -> roptwire_res?48 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!48 -> ptwire_res?48 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?48 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!48 -> pgwire_stmt?48 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!48 -> pgwire_res?48 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!48 -> guardnoti_pevt?48 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!48 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?48 -> guardnoti_bevt!48 -> guardnoti_bevt?48 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!48 -> ptwire_req?48 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!48 -> roptwire_uid?48 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!48 -> roptwire_res?48 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!48 -> ptwire_res?48 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!48 -> dispatchwire_res?48 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!48 -> soswire_res?48" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.22/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.22/@designmodel/@component.3/@port.0/@events.0" nextExpr="//@interimmodels.22/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.22/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-emupwire" counterExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!68 -> pgupwire_cmmd!68 -> pgupwire_cmmd?68 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> pgupwire_stmt?68 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!80 -> ptwire_req?80 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!80 -> roptwire_uid?80 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!80 -> roptwire_res?80 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!80 -> ptwire_res?80 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!52 -> ptwire_req?52 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!52 -> roptwire_uid?52 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!52 -> roptwire_res?52 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!52 -> ptwire_res?52 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!73 -> pgwire_stmt?73 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!73 -> pgwire_res?73 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53" visitedStates="4840" verifyTime="0.1759874" testport="//@interimmodels.22/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!48 -> pgupwire_cmmd!48 -> pgupwire_cmmd?48 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!48 -> emupwire_cmmd!48 -> emupwire_cmmd?48 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?48 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?48 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-command-pgupwire" visitedStates="4708" verifyTime="0.1738826" testport="//@interimmodels.22/@designmodel/@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!71 -> pgupwire_cmmd!71 -> pgupwire_cmmd?71 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!71 -> emupwire_cmmd!71 -> emupwire_cmmd?71 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> emupwire_stmt?71 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?71 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[] (BackOffice.updateprofile.issueupdate-> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist)">
        <connector href="target.arch#//@connector.6"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroptwire" visitedStates="26031" verifyTime="0.7295636" testport="//@interimmodels.22/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!53 -> soswire_req?53 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!53 -> dispatchwire_req?53 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!53 -> emwire_stmt?53 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?53 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!53 -> pgwire_stmt?53 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!53 -> pgwire_res?53 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!53 -> guardnoti_pevt?53 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!53 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?53 -> guardnoti_bevt!53 -> guardnoti_bevt?53 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!53 -> ptwire_req?53 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!53 -> roptwire_uid?53 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!53 -> roptwire_res?53 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!53 -> ptwire_res?53 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!53 -> dispatchwire_res?53 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!53 -> soswire_res?53" exprText="[] (PatientBlockchain.roptwire.blocksupplier.process-> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracleptupwire" counterExample="init -> HospitalMgmt_updaterec_updated -> HospitalMgmt_ptupwire_requester_process -> ptupwire_req!89 -> ptupwire_req?89 -> PatientOracle_ptupwire_responder_invoke -> PatientOracle_supply_supplied -> PatientOracle_ptupwire_responder_process -> ptupwire_res!89 -> ptupwire_res?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!98 -> ptwire_req?98 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!98 -> roptwire_uid?98 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!98 -> roptwire_res?98 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!98 -> ptwire_res?98 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!67 -> ptwire_req?67 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!67 -> roptwire_uid?67 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!67 -> roptwire_res?67 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!67 -> ptwire_res?67 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!58 -> pgwire_stmt?58 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!58 -> pgwire_res?58 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!21" visitedStates="67" verifyTime="0.044013199999999995" testport="//@interimmodels.22/@designmodel/@component.9/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!33 -> soswire_req?33 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!33 -> dispatchwire_req?33 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!33 -> emwire_stmt?33 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?33 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!33 -> pgwire_stmt?33 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!33 -> pgwire_res?33 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!33 -> guardnoti_pevt?33 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!33 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?33 -> guardnoti_bevt!33 -> guardnoti_bevt?33 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!33 -> ptwire_req?33 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!33 -> roptwire_uid?33 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!33 -> roptwire_res?33 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!33 -> ptwire_res?33 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!33 -> dispatchwire_res?33 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!33 -> soswire_res?33" exprText="[] (PatientOracle.supply.supplied-> &lt;> PatientBlockchain.oracleptupwire.blockstorage.stored);&#xA;;&#xA;;&#xA;">
        <connector href="target.arch#//@connector.9"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-guardnoti" counterExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!18 -> ptwire_req?18 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!18 -> roptwire_uid?18 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!18 -> roptwire_res?18 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!18 -> ptwire_res?18 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!57 -> ptwire_req?57 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!57 -> roptwire_uid?57 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!57 -> roptwire_res?57 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!57 -> ptwire_res?57 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!27 -> pgwire_stmt?27 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!27 -> pgwire_res?27 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!60 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!82" visitedStates="23754" verifyTime="0.6397482" testport="//@interimmodels.22/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!75 -> soswire_req?75 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!75 -> dispatchwire_req?75 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!75 -> emwire_stmt?75 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!75 -> pgwire_stmt?75 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!75 -> pgwire_res?75 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!75 -> guardnoti_pevt?75 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!75 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?75 -> guardnoti_bevt!75 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!75 -> guardnoti_bevt?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!75 -> roptwire_uid?75 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!75 -> roptwire_res?75 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?75 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!75 -> pgwire_stmt?75 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!75 -> pgwire_res?75 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!75 -> guardnoti_pevt?75 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!75 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?75 -> guardnoti_bevt!75 -> guardnoti_bevt?75 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!75 -> ptwire_req?75 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!75 -> roptwire_uid?75 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!75 -> roptwire_res?75 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!75 -> ptwire_res?75 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!75 -> dispatchwire_res?75 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!75 -> soswire_res?75" exprText="[] (RequestDispatcher.accept.dispatched-> &lt;> GuardnotiLog.guardnoti.eventstore.persist);&#xA;">
        <connector href="target.arch#//@connector.1"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-query-pgwire" visitedStates="22356" verifyTime="0.6089064" testport="//@interimmodels.22/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!17 -> soswire_req?17 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!17 -> dispatchwire_req?17 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!17 -> emwire_stmt?17 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!17 -> pgwire_stmt?17 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!17 -> pgwire_res?17 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!17 -> guardnoti_pevt?17 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!17 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?17 -> guardnoti_bevt!17 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!17 -> guardnoti_bevt?17 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!17 -> ptwire_req?17 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!17 -> roptwire_uid?17 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!17 -> roptwire_res?17 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!17 -> ptwire_res?17 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?17 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!17 -> pgwire_stmt?17 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!17 -> pgwire_res?17 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!17 -> guardnoti_pevt?17 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!17 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?17 -> guardnoti_bevt!17 -> guardnoti_bevt?17 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!17 -> ptwire_req?17 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!17 -> roptwire_uid?17 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!17 -> roptwire_res?17 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!17 -> ptwire_res?17 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!17 -> dispatchwire_res?17 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!17 -> soswire_res?17" exprText="[] (RequestDispatcher.accept.dispatched-> &lt;> Practitioner.pgwire.readstore.process)">
        <connector href="target.arch#//@connector.3"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-query-emwire" counterExample="init -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!27 -> ptwire_req?27 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!27 -> roptwire_uid?27 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!27 -> roptwire_res?27 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!27 -> ptwire_res?27 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_requester_process -> ptwire_req!51 -> ptwire_req?51 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!51 -> roptwire_uid?51 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!51 -> roptwire_res?51 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!51 -> ptwire_res?51 -> RequestDispatcher_accept_dispatched -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!46 -> pgwire_stmt?46 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!46 -> pgwire_res?46 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!32 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!95" visitedStates="22918" verifyTime="0.6260477999999999" testport="//@interimmodels.22/@designmodel/@component.0/@port.0" traceExample="init -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> soswire_req!89 -> soswire_req?89 -> SOSGateway_soswire_responder_invoke -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> dispatchwire_req!89 -> dispatchwire_req?89 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!89 -> emwire_stmt?89 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!89 -> pgwire_stmt?89 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!89 -> pgwire_res?89 -> EmCenter_pgwire_querier_Skip -> EmCenter_guardnoti_eventpublisher_process -> guardnoti_pevt!89 -> guardnoti_pevt?89 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!89 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?89 -> guardnoti_bevt!89 -> EmCenter_guardnoti_eventpublisher_broadcast -> EmCenter_guardnoti_eventpublisher_Skip -> EmCenter_emwire_readstore_process -> emwire_res!89 -> guardnoti_bevt?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!89 -> ptwire_req?89 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!89 -> roptwire_uid?89 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!89 -> roptwire_res?89 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!89 -> ptwire_res?89 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> emwire_res?89 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_pgwire_querier_process -> pgwire_stmt!89 -> pgwire_stmt?89 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!89 -> pgwire_res?89 -> RequestDispatcher_pgwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!89 -> guardnoti_pevt?89 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!89 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?89 -> guardnoti_bevt!89 -> guardnoti_bevt?89 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_requester_process -> ptwire_req!89 -> ptwire_req?89 -> Patient_ptwire_responder_invoke -> Patient_roptwire_extquerier_request -> roptwire_uid!89 -> roptwire_uid?89 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!89 -> roptwire_res?89 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> Patient_roptwire_extquerier_Skip -> Patient_ptwire_responder_process -> ptwire_res!89 -> ptwire_res?89 -> LifeCare_ptwire_requester_Skip -> LifeCare_guardnoti_eventsubscriber_process -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!89 -> dispatchwire_res?89 -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!89 -> soswire_res?89" exprText="[] (RequestDispatcher.accept.dispatched-> &lt;> EmCenter.emwire.readstore.process)">
        <connector href="target.arch#//@connector.2"/>
      </verifyProperty>
      <host name="AppServer">
        <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@interimmodels.22/@designmodel/@component.1">
          <port name="port" portNumber="25555" node="//@interimmodels.22/@designmodel/@host.0/@node.0" namedport="//@interimmodels.22/@designmodel/@component.1/@port.0" hasFirewall="true"/>
          <port name="port" portNumber="8089" node="//@interimmodels.22/@designmodel/@host.0/@node.0" namedport="//@interimmodels.22/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@interimmodels.22/@designmodel/@component.2 //@interimmodels.22/@designmodel/@component.6 //@interimmodels.22/@designmodel/@component.5">
          <port name="port" portNumber="8080" node="//@interimmodels.22/@designmodel/@host.1/@node.0" namedport="//@interimmodels.22/@designmodel/@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
          <port name="port" portNumber="23333" node="//@interimmodels.22/@designmodel/@host.1/@node.0" namedport="//@interimmodels.22/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.22/@designmodel/@host.1/@node.0" namedport="//@interimmodels.22/@designmodel/@component.6/@port.1 //@interimmodels.22/@designmodel/@component.5/@port.1"/>
        </node>
      </host>
      <host name="Mobile1">
        <node type="APPLICATION_CONTAINER" name="Android1" component="//@interimmodels.22/@designmodel/@component.3">
          <port name="port" portNumber="27877" node="//@interimmodels.22/@designmodel/@host.2/@node.0" namedport="//@interimmodels.22/@designmodel/@component.3/@port.0"/>
          <port name="port" portNumber="25123" node="//@interimmodels.22/@designmodel/@host.2/@node.0" namedport="//@interimmodels.22/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="Mobile2">
        <node name="Android2" component="//@interimmodels.22/@designmodel/@component.4">
          <port name="port" portNumber="27889" node="//@interimmodels.22/@designmodel/@host.3/@node.0" namedport="//@interimmodels.22/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="25124" node="//@interimmodels.22/@designmodel/@host.3/@node.0" namedport="//@interimmodels.22/@designmodel/@component.4/@port.0"/>
        </node>
      </host>
      <host name="Wristband">
        <node type="APPLICATION_CONTAINER" name="Android0" component="//@interimmodels.22/@designmodel/@component.0">
          <port name="port" portNumber="14555" node="//@interimmodels.22/@designmodel/@host.4/@node.0" namedport="//@interimmodels.22/@designmodel/@component.0/@port.0"/>
        </node>
      </host>
      <host name="HMS">
        <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@interimmodels.22/@designmodel/@component.7 //@interimmodels.22/@designmodel/@component.9">
          <port name="port" portNumber="28855" node="//@interimmodels.22/@designmodel/@host.5/@node.0" namedport="//@interimmodels.22/@designmodel/@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BackOfficeServer">
        <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@interimmodels.22/@designmodel/@component.8">
          <port name="port" portNumber="12243" node="//@interimmodels.22/@designmodel/@host.6/@node.0" namedport="//@interimmodels.22/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.22/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.22/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link2"/>
      <link name="link3"/>
      <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.22/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.22/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.22/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.22/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link6" networkType="INTERNET" source="//@interimmodels.22/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.22/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.22/@designmodel/@host.2/@node.0/@port.1" target="//@interimmodels.22/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.22/@designmodel/@host.3/@node.0/@port.1" target="//@interimmodels.22/@designmodel/@host.5/@node.0/@port.0"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.22/@designmodel/@host.6/@node.0/@port.0" target="//@interimmodels.22/@designmodel/@host.1/@node.0/@port.2"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb or blockchain"/>
    </designmodel>
  </interimmodels>
</arch:MigrationModel>
