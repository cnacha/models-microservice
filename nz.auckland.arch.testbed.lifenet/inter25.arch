<?xml version="1.0" encoding="ASCII"?>
<arch:DesignModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arch="http://www.example.org/arch" name="inter25">
  <component name="LifeBand" type="client" deploymentnode="//@host.4/@node.0">
    <port name="alert" role="//@connector.7/@role.0" type="request,OutboundPort">
      <events name="onalert"/>
    </port>
  </component>
  <component name="SOSGateway" type="client,server" deploymentnode="//@host.0/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,DenialOfService,DataTampering">
    <port name="sos" role="//@connector.0/@role.0 //@connector.7/@role.1" type="request,response,OutboundPort,InboundPort">
      <events name="acknowledge" next="//@component.1/@port.0/@events.1"/>
      <events name="alert"/>
    </port>
  </component>
  <component name="RequestDispatcher" type="server,eventsource,readendpoint,datareader" deploymentnode="//@host.1/@node.0" criticalLevel="Low" securityCharacters="AttackSurface,LeastPriviledge,Compartmentalization">
    <port name="accept" role="//@connector.0/@role.1 //@connector.1/@role.0 //@connector.2/@role.0" type="response,publish,read,OutboundPort,InboundPort,EventProcessorPort">
      <events name="dispatched"/>
    </port>
  </component>
  <component name="LifeGuard" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@host.2/@node.0" securityCharacters="AttackSurface,DenialOfService">
    <port name="gnotify" role="//@connector.1/@role.1 //@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
      <events name="acknowlege"/>
    </port>
  </component>
  <component name="LifeCare" type="listener,eventconsumer,readendpoint,datareader" deploymentnode="//@host.3/@node.0" securityCharacters="AttackSurface,DenialOfService">
    <port name="cnotify" role="//@connector.1/@role.1 //@connector.4/@role.0" type="listen,read,OutboundPort,InboundPort">
      <events name="acknowlege"/>
    </port>
  </component>
  <component name="Practitioner" type="viewdb" deploymentnode="//@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
    <port name="pgaccess" role="//@connector.3/@role.1" type="update,query,InboundPort,EventProcessorPort">
      <events name="return"/>
    </port>
    <port name="pgupdate" role="//@connector.6/@role.1" type="update,query,InboundPort,EventProcessorPort">
      <events name="updated"/>
    </port>
  </component>
  <component name="EmCenter" type="viewdb,readendpoint,datareader" criticalLevel="High" securityCharacters="AttackSurface,DenialOfService,DataTampering">
    <port name="emaccess" role="//@connector.2/@role.1 //@connector.3/@role.0" type="update,read,query,OutboundPort,InboundPort,EventProcessorPort">
      <events name="emaccessed"/>
    </port>
    <port name="emupdate" role="//@connector.5/@role.1" type="update,query,InboundPort,EventProcessorPort">
      <events name="updated"/>
    </port>
  </component>
  <component name="Patient" type="repository,reverseoracle,RuleSecureWriting,RuleSecureReading" deploymentnode="//@host.5/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
    <port name="ptaccess" role="//@connector.4/@role.1 //@connector.9/@role.0" type="access,blockquery,OutboundPort,InboundPort,TamperingProofPort">
      <events name="ptaccessed"/>
    </port>
    <port name="ptupdate" role="//@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
      <events name="ptcommit"/>
    </port>
  </component>
  <component name="BackOffice" type="commandendpoint" deploymentnode="//@host.6/@node.0" securityCharacters="LeastPriviledge">
    <port name="updateprofile" role="//@connector.5/@role.0 //@connector.6/@role.0" type="issue,OutboundPort,EventProcessorPort">
      <events name="issueupdate"/>
    </port>
  </component>
  <component name="HospitalMgmt" type="datawriter" deploymentnode="//@host.5/@node.0">
    <port name="updaterec" role="//@connector.8/@role.0" type="write,OutboundPort">
      <events name="updated"/>
    </port>
  </component>
  <component name="GuardnotiLog" type="eventlogger">
    <port name="logguardnoti" role="//@connector.1/@role.2" type="log,InboundPort">
      <events name="logged"/>
    </port>
  </component>
  <component name="PatientBlockchain" type="blockchain">
    <port name="append" role="//@connector.10/@role.0" type="bcstore,InboundPort">
      <events name="appended"/>
    </port>
    <port name="access" role="//@connector.9/@role.1" type="blocksupply,InboundPort">
      <events name="accessed"/>
    </port>
  </component>
  <component name="EmupwireCommandLog" type="commanddb">
    <port name="logemupwire" role="//@connector.5/@role.2" type="logcommand,InboundPort">
      <events name="logged"/>
    </port>
  </component>
  <component name="PgupwireCommandLog" type="commanddb">
    <port name="logpgupwire" role="//@connector.6/@role.2" type="logcommand,InboundPort">
      <events name="logged"/>
    </port>
  </component>
  <component name="PatientOracle" type="oracle">
    <port name="supply" role="//@connector.10/@role.1" type="orafeed,OutboundPort">
      <events name="supplied"/>
    </port>
  </component>
  <connector name="dispatchwire" type="CSConnector" connectortype="//@archstyle.0/@connectortype.0">
    <role name="requester" roletype="//@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@connector.0"/>
    <role name="responder" roletype="//@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@connector.2/@role.0" connector="//@connector.0"/>
    <communicationlink href="data.json#//@link.0"/>
  </connector>
  <connector name="guardnoti" type="ESConnector" connectortype="//@archstyle.2/@connectortype.0" securityCharacters="DenialOfServiceConnector">
    <role name="eventpublisher" roletype="//@archstyle.1/@connectortype.0/@roletype.0" type="out" connector="//@connector.1"/>
    <role name="eventsubscriber" roletype="//@archstyle.1/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@connector.4/@role.0" connector="//@connector.1"/>
    <role name="eventstore" type="in">
      <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
      <connector href="target.arch#//@connector.1"/>
    </role>
    <communicationlink href="data.json#//@link.3"/>
    <communicationlink href="data.json#//@link.4"/>
  </connector>
  <connector name="emwire" type="QRConnector" connectortype="//@archstyle.4/@connectortype.0">
    <role name="querier" roletype="//@archstyle.5/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@connector.1/@role.0" connector="//@connector.2"/>
    <role name="readstore" roletype="//@archstyle.5/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@connector.3/@role.0" connector="//@connector.2"/>
  </connector>
  <connector name="pgwire" type="QRConnector" connectortype="//@archstyle.4/@connectortype.0">
    <role name="querier" roletype="//@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@connector.3"/>
    <role name="readstore" roletype="//@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@connector.3"/>
  </connector>
  <connector name="ptwire" type="REConnector" connectortype="//@archstyle.5/@connectortype.0" securityCharacters="DenialOfServiceConnector">
    <role name="reader" roletype="//@archstyle.5/@connectortype.0/@roletype.0" type="out" connector="//@connector.4"/>
    <role name="readstorage" roletype="//@archstyle.5/@connectortype.0/@roletype.1" type="in" connector="//@connector.4"/>
    <communicationlink href="data.json#//@link.6"/>
    <communicationlink href="data.json#//@link.7"/>
  </connector>
  <connector name="emupwire" type="CRConnector" connectortype="//@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
    <role name="commander" roletype="//@archstyle.6/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@connector.6/@role.0" connector="//@connector.5"/>
    <role name="readstore" roletype="//@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@connector.5"/>
    <role name="commandstore" type="in">
      <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
      <connector href="target.arch#//@connector.5"/>
    </role>
    <communicationlink href="data.json#//@link.8"/>
  </connector>
  <connector name="pgupwire" type="CRConnector" connectortype="//@archstyle.3/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
    <role name="commander" roletype="//@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@connector.6"/>
    <role name="readstore" roletype="//@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@connector.6"/>
    <role name="commandstore" type="in">
      <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2"/>
      <connector href="target.arch#//@connector.6"/>
    </role>
    <communicationlink href="data.json#//@link.8"/>
  </connector>
  <connector name="soswire" type="CSConnector" connectortype="//@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector,DenialOfServiceConnector">
    <role name="requester" roletype="//@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@connector.7"/>
    <role name="responder" roletype="//@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@connector.0/@role.0" connector="//@connector.7"/>
    <communicationlink href="data.json#//@link.5"/>
  </connector>
  <connector name="ptupwire" type="WRConnector" connectortype="//@archstyle.6/@connectortype.0">
    <role name="writer" roletype="//@archstyle.6/@connectortype.0/@roletype.0" type="out" connector="//@connector.8"/>
    <role name="writestorage" roletype="//@archstyle.6/@connectortype.0/@roletype.1" type="in" connector="//@connector.8"/>
  </connector>
  <connector name="roptwire" type="ROConnector">
    <role name="extquerier" type="out" connector="//@connector.9">
      <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.0"/>
    </role>
    <role name="blocksupplier" type="in" connector="//@connector.9">
      <roletype href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1"/>
    </role>
    <connectortype href="target.arch#//@archstyle.8/@connectortype.0"/>
  </connector>
  <connector name="oracleptupwire" type="IOConnector">
    <role name="blockstorage" type="in" connector="//@connector.10">
      <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.0"/>
    </role>
    <role name="extsupplier" type="out" connector="//@connector.10">
      <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
    </role>
    <connectortype href="target.arch#//@archstyle.7/@connectortype.0"/>
  </connector>
  <archstyle name="client-server">
    <connectortype name="CSConnector">
      <roletype name="requester" porttype="//@archstyle.0/@componenttype.0/@porttype.0">
        <event name="request" next="//@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
        <event xsi:type="arch:Channel" name="res" next="//@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
        <event name="process" next="//@archstyle.0/@connectortype.0/@roletype.0/@event.4"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="responder" porttype="//@archstyle.0/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="invoke" next="//@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
        <event name="process" next="//@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
        <event xsi:type="arch:Channel" name="res" type="output" bind="//@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="client">
      <porttype name="request"/>
    </componenttype>
    <componenttype name="server">
      <porttype name="response"/>
    </componenttype>
  </archstyle>
  <archstyle name="publish-subscribe">
    <connectortype name="PSConnector" eaConnector="//@archstyle.0/@connectortype.0">
      <roletype name="publisher" porttype="//@archstyle.1/@componenttype.0/@porttype.0">
        <event name="process" next="//@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="pub" next="//@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="subscriber" porttype="//@archstyle.1/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="pub" next="//@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="process"/>
      </roletype>
    </connectortype>
    <componenttype name="broadcaster">
      <porttype name="broadcast"/>
    </componenttype>
    <componenttype name="listener">
      <porttype name="listen"/>
    </componenttype>
  </archstyle>
  <archstyle name="event-sourcing">
    <connectortype name="ESConnector">
      <roletype name="eventpublisher" porttype="//@archstyle.2/@componenttype.0/@porttype.0">
        <event name="process" next="//@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="pevt" next="//@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
        <event xsi:type="arch:Channel" name="sevt" next="//@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
        <event xsi:type="arch:Channel" name="bevt" next="//@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
        <event name="broadcast" next="//@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="eventsubscriber" porttype="//@archstyle.2/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="bevt" next="//@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="process"/>
      </roletype>
      <roletype name="eventstore" porttype="//@archstyle.2/@componenttype.2/@porttype.0">
        <event xsi:type="arch:Channel" name="pevt" next="//@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
        <event name="process" next="//@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
        <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
        <event name="persist" next="//@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="eventsource">
      <porttype name="publish"/>
    </componenttype>
    <componenttype name="eventconsumer">
      <porttype name="listen"/>
    </componenttype>
    <componenttype name="eventlogger">
      <porttype name="log"/>
    </componenttype>
  </archstyle>
  <archstyle name="command-responsibility">
    <connectortype name="CRConnector">
      <roletype name="readstore" porttype="//@archstyle.3/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="stmt" next="//@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
        <event name="process" next="//@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
        <event name="persist"/>
      </roletype>
      <roletype name="commander" porttype="//@archstyle.3/@componenttype.0/@porttype.0">
        <event name="process" next="//@archstyle.3/@connectortype.0/@roletype.1/@event.3"/>
        <event xsi:type="arch:Channel" name="stmt" next="//@archstyle.3/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
        <event name="Skip"/>
        <event xsi:type="arch:Channel" name="cmmd" next="//@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@archstyle.3/@connectortype.0/@roletype.2/@event.0"/>
      </roletype>
      <roletype name="commandstore" porttype="//@archstyle.3/@componenttype.2/@porttype.0">
        <event xsi:type="arch:Channel" name="cmmd" next="//@archstyle.3/@connectortype.0/@roletype.2/@event.1" type="input"/>
        <event name="process" next="//@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
        <event name="persist"/>
      </roletype>
    </connectortype>
    <componenttype name="commandendpoint">
      <porttype name="issue"/>
    </componenttype>
    <componenttype name="viewdb">
      <porttype name="update"/>
    </componenttype>
    <componenttype name="commanddb">
      <porttype name="logcommand"/>
    </componenttype>
  </archstyle>
  <archstyle name="query-responsibility">
    <connectortype name="QRConnector">
      <roletype name="querier" porttype="//@archstyle.4/@componenttype.0/@porttype.0">
        <event name="process" next="//@archstyle.4/@connectortype.0/@roletype.0/@event.3"/>
        <event xsi:type="arch:Channel" name="stmt" next="//@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
        <event xsi:type="arch:Channel" name="res" next="//@archstyle.4/@connectortype.0/@roletype.0/@event.0" type="input"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="readstore" porttype="//@archstyle.4/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="stmt" next="//@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="process" next="//@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
        <event xsi:type="arch:Channel" name="res" type="output" bind="//@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="readendpoint">
      <porttype name="read"/>
    </componenttype>
    <componenttype name="viewdb">
      <porttype name="query"/>
    </componenttype>
  </archstyle>
  <archstyle name="repository-read">
    <connectortype name="REConnector">
      <roletype name="reader" porttype="//@archstyle.5/@componenttype.0/@porttype.0">
        <event name="process" next="//@archstyle.5/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.5/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.5/@connectortype.0/@roletype.1/@event.0"/>
        <event xsi:type="arch:Channel" name="res" next="//@archstyle.5/@connectortype.0/@roletype.0/@event.3" type="input"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="readstorage" porttype="//@archstyle.5/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="invoke" next="//@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
        <event name="process" next="//@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
        <event xsi:type="arch:Channel" name="res" type="output" bind="//@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="datareader">
      <porttype name="read"/>
    </componenttype>
    <componenttype name="repository">
      <porttype name="access"/>
    </componenttype>
  </archstyle>
  <archstyle name="repository-write">
    <connectortype name="WRConnector">
      <roletype name="writer" porttype="//@archstyle.6/@componenttype.0/@porttype.0">
        <event name="request" next="//@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.6/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
        <event xsi:type="arch:Channel" name="res" next="//@archstyle.6/@connectortype.0/@roletype.0/@event.3" type="input"/>
        <event name="process" next="//@archstyle.6/@connectortype.0/@roletype.0/@event.4"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="writestorage" porttype="//@archstyle.6/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="req" next="//@archstyle.6/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="invoke" next="//@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
        <event name="process" next="//@archstyle.6/@connectortype.0/@roletype.1/@event.3"/>
        <event xsi:type="arch:Channel" name="res" type="output" bind="//@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="datawriter">
      <porttype name="write"/>
    </componenttype>
    <componenttype name="repository">
      <porttype name="store"/>
    </componenttype>
  </archstyle>
  <archstyle name="oracle">
    <connectortype name="IOConnector">
      <roletype name="blockstorage" porttype="//@archstyle.7/@componenttype.0/@porttype.0">
        <event xsi:type="arch:Channel" name="token" next="//@archstyle.7/@connectortype.0/@roletype.0/@event.1" type="input"/>
        <event name="process" next="//@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
        <event name="stored"/>
      </roletype>
      <roletype name="extsupplier" porttype="//@archstyle.7/@componenttype.1/@porttype.0">
        <event name="process" next="//@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
        <event xsi:type="arch:Channel" name="token" type="output" bind="//@archstyle.7/@connectortype.0/@roletype.0/@event.0"/>
      </roletype>
    </connectortype>
    <componenttype name="blockchain">
      <porttype name="bcstore"/>
    </componenttype>
    <componenttype name="oracle">
      <porttype name="orafeed"/>
    </componenttype>
  </archstyle>
  <archstyle name="reverse-oracle">
    <connectortype name="ROConnector">
      <roletype name="extquerier" porttype="//@archstyle.8/@componenttype.0/@porttype.0">
        <event name="request" next="//@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
        <event xsi:type="arch:Channel" name="uid" next="//@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
        <event xsi:type="arch:Channel" name="res" next="//@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
        <event name="process" next="//@archstyle.8/@connectortype.0/@roletype.0/@event.4"/>
        <event name="Skip"/>
      </roletype>
      <roletype name="blocksupplier" porttype="//@archstyle.8/@componenttype.1/@porttype.0">
        <event xsi:type="arch:Channel" name="uid" next="//@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
        <event name="process" next="//@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
        <event xsi:type="arch:Channel" name="res" type="output" bind="//@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
      </roletype>
    </connectortype>
    <componenttype name="reverseoracle">
      <porttype name="blockquery"/>
    </componenttype>
    <componenttype name="blockchain">
      <porttype name="blocksupply"/>
    </componenttype>
  </archstyle>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="/" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!21 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> Patient_roptwire_extquerier_request -> roptwire_uid!28 -> roptwire_uid?28 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!28 -> roptwire_res?28 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!29 -> soswire_req?29 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!29 -> dispatchwire_req?29 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!29 -> emwire_stmt?29 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!29 -> pgwire_stmt?29 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!29 -> pgwire_res?29 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!29 -> emwire_res?29 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!29 -> guardnoti_pevt?29 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!29 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?29 -> guardnoti_bevt!29 -> guardnoti_bevt?29 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!29 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!29 -> dispatchwire_res?29 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!29 -> soswire_res?29 -> oracleptupwire_token?21 -> (oracleptupwire_token!21 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?21)*" visitedStates="13530" verifyTime="0.4191242" testport="//@component.0/@port.0" traceExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!25 -> roptwire_uid?25 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!25 -> roptwire_res?25 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!15 -> soswire_req?15 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!15 -> dispatchwire_req?15 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!15 -> emwire_stmt?15 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!15 -> pgwire_stmt?15 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!15 -> pgwire_res?15 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!15 -> emwire_res?15 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!15 -> guardnoti_pevt?15 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!15 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?15 -> guardnoti_bevt!15 -> guardnoti_bevt?15 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!15 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!15 -> dispatchwire_res?15 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!15 -> soswire_res?15 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (SOSGateway.sos.acknowledge -> &lt;> LifeBand.alert.onalert);&#xA;">
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.0">
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.1/@port.0/@events.0" nextExpr="//@verifyProperty.0/@ltlexpr.0/@expr.0"/>
    </ltlexpr>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="/" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!26 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> Patient_roptwire_extquerier_request -> roptwire_uid!15 -> roptwire_uid?15 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!15 -> roptwire_res?15 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!74 -> soswire_req?74 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!74 -> dispatchwire_req?74 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!74 -> emwire_stmt?74 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!74 -> pgwire_stmt?74 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!74 -> pgwire_res?74 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!74 -> emwire_res?74 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!74 -> guardnoti_pevt?74 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!74 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?74 -> guardnoti_bevt!74 -> guardnoti_bevt?74 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!74 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!74 -> dispatchwire_res?74 -> oracleptupwire_token?26 -> (oracleptupwire_token!26 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?26)*" visitedStates="22488" verifyTime="0.6554144" testport="//@component.0/@port.0" traceExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!67 -> roptwire_uid?67 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!67 -> roptwire_res?67 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!52 -> soswire_req?52 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!52 -> dispatchwire_req?52 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!52 -> emwire_stmt?52 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!52 -> pgwire_stmt?52 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!52 -> pgwire_res?52 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!52 -> emwire_res?52 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!52 -> guardnoti_pevt?52 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!52 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?52 -> guardnoti_bevt!52 -> guardnoti_bevt?52 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!52 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!52 -> dispatchwire_res?52 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!52 -> soswire_res?52 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (&lt;> RequestDispatcher.accept.dispatched -> &lt;> SOSGateway.sos.acknowledge);&#xA;">
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.1">
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.1/@port.0/@events.0" operator="EVENTUALLY"/>
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@verifyProperty.1/@ltlexpr.0/@expr.0"/>
    </ltlexpr>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="/" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!96 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> Patient_roptwire_extquerier_request -> roptwire_uid!89 -> roptwire_uid?89 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!89 -> roptwire_res?89 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!64 -> soswire_req?64 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!64 -> dispatchwire_req?64 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!64 -> emwire_stmt?64 -> oracleptupwire_token?96 -> (oracleptupwire_token!96 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?96)*" visitedStates="9462" verifyTime="0.31493889999999997" testport="//@component.0/@port.0" traceExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!17 -> roptwire_uid?17 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!17 -> roptwire_res?17 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!45 -> soswire_req?45 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!45 -> dispatchwire_req?45 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!45 -> emwire_stmt?45 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!45 -> pgwire_stmt?45 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!45 -> pgwire_res?45 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!45 -> emwire_res?45 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!45 -> guardnoti_pevt?45 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!45 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?45 -> guardnoti_bevt!45 -> guardnoti_bevt?45 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!45 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!45 -> dispatchwire_res?45 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!45 -> soswire_res?45 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emaccess.emaccessed);&#xA;">
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.2">
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.6/@port.0/@events.0" operator="EVENTUALLY"/>
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.2/@port.0/@events.0" nextExpr="//@verifyProperty.2/@ltlexpr.0/@expr.0"/>
    </ltlexpr>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="/" valid="false" counterExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!40 -> roptwire_uid?40 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!40 -> roptwire_res?40 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!99 -> soswire_req?99 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!99 -> dispatchwire_req?99 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!99 -> emwire_stmt?99 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!99 -> pgwire_stmt?99 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!99 -> pgwire_res?99 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!99 -> emwire_res?99 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!99 -> guardnoti_pevt?99 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!99 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?99 -> guardnoti_bevt!99 -> guardnoti_bevt?99 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!99 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!99 -> dispatchwire_res?99 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!99 -> soswire_res?99 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" visitedStates="150" verifyTime="0.0451608" testport="//@component.0/@port.0" traceExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!40 -> roptwire_uid?40 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!40 -> roptwire_res?40 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!99 -> soswire_req?99 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!99 -> dispatchwire_req?99 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!99 -> emwire_stmt?99 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!99 -> pgwire_stmt?99 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!99 -> pgwire_res?99 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!99 -> emwire_res?99 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!99 -> guardnoti_pevt?99 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!99 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?99 -> guardnoti_bevt!99 -> guardnoti_bevt?99 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_reader_process -> ptwire_req!99 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!99 -> dispatchwire_res?99 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!99 -> soswire_res?99 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (LifeCare.cnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.3">
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.4/@port.0/@events.0" nextExpr="//@verifyProperty.3/@ltlexpr.0/@expr.0"/>
    </ltlexpr>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="/" valid="false" counterExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!85 -> roptwire_uid?85 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!85 -> roptwire_res?85 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!13 -> soswire_req?13 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!13 -> dispatchwire_req?13 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!13 -> emwire_stmt?13 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!13 -> pgwire_stmt?13 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!13 -> pgwire_res?13 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!13 -> emwire_res?13 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!13 -> guardnoti_pevt?13 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!13 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?13 -> guardnoti_bevt!13 -> guardnoti_bevt?13 -> LifeGuard_gnotify_acknowlege -> LifeGuard_ptwire_reader_process -> ptwire_req!13 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!13 -> dispatchwire_res?13 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!13 -> soswire_res?13 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" visitedStates="251" verifyTime="0.047546" testport="//@component.0/@port.0" traceExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!85 -> roptwire_uid?85 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!85 -> roptwire_res?85 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!13 -> soswire_req?13 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!13 -> dispatchwire_req?13 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!13 -> emwire_stmt?13 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!13 -> pgwire_stmt?13 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!13 -> pgwire_res?13 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!13 -> emwire_res?13 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!13 -> guardnoti_pevt?13 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!13 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?13 -> guardnoti_bevt!13 -> guardnoti_bevt?13 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!13 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!13 -> dispatchwire_res?13 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!13 -> soswire_res?13 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (LifeGuard.gnotify.acknowlege -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.4">
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.3/@port.0/@events.0" nextExpr="//@verifyProperty.4/@ltlexpr.0/@expr.1"/>
      <expr xsi:type="arch:LTLRegularExpr" event="//@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
    </ltlexpr>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch2-command" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!89 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!52 -> pgupwire_cmmd!52 -> pgupwire_cmmd?52 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!52 -> emupwire_cmmd!52 -> emupwire_cmmd?52 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> Patient_roptwire_extquerier_request -> roptwire_uid!95 -> roptwire_uid?95 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!95 -> roptwire_res?95 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> emupwire_stmt?52 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?52 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> oracleptupwire_token?89 -> (oracleptupwire_token!89 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?89)*" visitedStates="62251" verifyTime="1.9501739" testport="//@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!27 -> pgupwire_cmmd!27 -> pgupwire_cmmd?27 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!27 -> emupwire_cmmd!27 -> emupwire_cmmd?27 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> Patient_roptwire_extquerier_request -> roptwire_uid!16 -> roptwire_uid?16 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!16 -> roptwire_res?16 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> emupwire_stmt?27 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?27 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[]  (BackOffice.updateprofile.issueupdate -> &lt;> EmupwireCommandLog.emupwire.commandstore.persist);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.5">
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.5/@ltlexpr.0/@expr.1">
        <event href="target.arch#//@component.8/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
        <role href="target.arch#//@connector.5/@role.2"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.5"/>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch3-command" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!57 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!53 -> pgupwire_cmmd!53 -> pgupwire_cmmd?53 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!53 -> emupwire_cmmd!53 -> emupwire_cmmd?53 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> Patient_roptwire_extquerier_request -> roptwire_uid!99 -> roptwire_uid?99 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!99 -> roptwire_res?99 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> emupwire_stmt?53 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?53 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist -> oracleptupwire_token?57 -> (oracleptupwire_token!57 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?57)*" visitedStates="60571" verifyTime="1.8963619999999999" testport="//@component.8/@port.0" traceExample="init -> BackOffice_updateprofile_issueupdate -> BackOffice_pgupwire_commander_process -> pgupwire_stmt!36 -> pgupwire_cmmd!36 -> pgupwire_cmmd?36 -> PgupwireCommandLog_logpgupwire_logged -> PgupwireCommandLog_pgupwire_commandstore_process -> PgupwireCommandLog_pgupwire_commandstore_persist -> BackOffice_pgupwire_commander_Skip -> BackOffice_emupwire_commander_process -> emupwire_stmt!36 -> emupwire_cmmd!36 -> emupwire_cmmd?36 -> EmupwireCommandLog_logemupwire_logged -> EmupwireCommandLog_emupwire_commandstore_process -> EmupwireCommandLog_emupwire_commandstore_persist -> Patient_roptwire_extquerier_request -> roptwire_uid!71 -> roptwire_uid?71 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!71 -> roptwire_res?71 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> emupwire_stmt?36 -> EmCenter_emupdate_updated -> EmCenter_emupwire_readstore_process -> EmCenter_emupwire_readstore_persist -> pgupwire_stmt?36 -> Practitioner_pgupdate_updated -> Practitioner_pgupwire_readstore_process -> Practitioner_pgupwire_readstore_persist" exprText="[]  (BackOffice.updateprofile.issueupdate -> &lt;> PgupwireCommandLog.pgupwire.commandstore.persist);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.6">
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.6/@ltlexpr.0/@expr.1">
        <event href="target.arch#//@component.8/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@archstyle.3/@connectortype.0/@roletype.2/@event.2"/>
        <role href="target.arch#//@connector.6/@role.2"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.6"/>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch1-eventsource" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!78 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> Patient_roptwire_extquerier_request -> roptwire_uid!86 -> roptwire_uid?86 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!86 -> roptwire_res?86 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!70 -> soswire_req?70 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!70 -> dispatchwire_req?70 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!70 -> emwire_stmt?70 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!70 -> pgwire_stmt?70 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!70 -> pgwire_res?70 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!70 -> emwire_res?70 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!70 -> guardnoti_pevt?70 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!70 -> guardnoti_sevt?70 -> guardnoti_bevt!70 -> guardnoti_bevt?70 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!70 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!70 -> dispatchwire_res?70 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!70 -> soswire_res?70 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> oracleptupwire_token?78 -> (oracleptupwire_token!78 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?78)*" visitedStates="13527" verifyTime="0.38796959999999997" testport="//@component.0/@port.0" traceExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!23 -> roptwire_uid?23 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!23 -> roptwire_res?23 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!18 -> soswire_req?18 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!18 -> dispatchwire_req?18 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!18 -> emwire_stmt?18 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!18 -> pgwire_stmt?18 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!18 -> pgwire_res?18 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!18 -> emwire_res?18 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!18 -> guardnoti_pevt?18 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!18 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?18 -> guardnoti_bevt!18 -> guardnoti_bevt?18 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!18 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!18 -> dispatchwire_res?18 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!18 -> soswire_res?18 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> GuardnotiLog.guardnoti.eventstore.persist);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.7">
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.7/@ltlexpr.0/@expr.1">
        <event href="target.arch#//@component.2/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
        <role href="target.arch#//@connector.1/@role.2"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.1"/>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch4-query" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!62 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> Patient_roptwire_extquerier_request -> roptwire_uid!26 -> roptwire_uid?26 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!26 -> roptwire_res?26 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!52 -> soswire_req?52 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!52 -> dispatchwire_req?52 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!52 -> emwire_stmt?52 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!52 -> pgwire_stmt?52 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!52 -> pgwire_res?52 -> EmCenter_pgwire_querier_Skip -> oracleptupwire_token?62 -> (oracleptupwire_token!62 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?62)*" visitedStates="9633" verifyTime="0.2930373" testport="//@component.0/@port.0" traceExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!37 -> roptwire_uid?37 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!37 -> roptwire_res?37 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!20 -> soswire_req?20 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!20 -> dispatchwire_req?20 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!20 -> emwire_stmt?20 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!20 -> pgwire_stmt?20 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!20 -> pgwire_res?20 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!20 -> emwire_res?20 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!20 -> guardnoti_pevt?20 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!20 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?20 -> guardnoti_bevt!20 -> guardnoti_bevt?20 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!20 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!20 -> dispatchwire_res?20 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!20 -> soswire_res?20 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> EmCenter.emwire.readstore.process);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.8">
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.8/@ltlexpr.0/@expr.1">
        <event href="target.arch#//@component.2/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
        <role href="target.arch#//@connector.2/@role.1"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.2"/>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch5-query" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!84 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> Patient_roptwire_extquerier_request -> roptwire_uid!91 -> roptwire_uid?91 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!91 -> roptwire_res?91 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!11 -> soswire_req?11 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!11 -> dispatchwire_req?11 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!11 -> emwire_stmt?11 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!11 -> pgwire_stmt?11 -> Practitioner_pgaccess_return -> oracleptupwire_token?84 -> (oracleptupwire_token!84 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?84)*" visitedStates="9557" verifyTime="0.30699689999999996" testport="//@component.0/@port.0" traceExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!70 -> roptwire_uid?70 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!70 -> roptwire_res?70 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!57 -> soswire_req?57 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!57 -> dispatchwire_req?57 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!57 -> emwire_stmt?57 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!57 -> pgwire_stmt?57 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!57 -> pgwire_res?57 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!57 -> emwire_res?57 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!57 -> guardnoti_pevt?57 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!57 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?57 -> guardnoti_bevt!57 -> guardnoti_bevt?57 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!57 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!57 -> dispatchwire_res?57 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!57 -> soswire_res?57 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (RequestDispatcher.accept.dispatched -> &lt;> Practitioner.pgwire.readstore.process);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.9">
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.9/@ltlexpr.0/@expr.1">
        <event href="target.arch#//@component.2/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
        <role href="target.arch#//@connector.3/@role.1"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.3"/>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch7-reverseoracle" counterExample="init -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> oracleptupwire_token!49 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> Patient_roptwire_extquerier_request -> roptwire_uid!43 -> roptwire_uid?43 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!43 -> roptwire_res?43 -> LifeBand_soswire_requester_request -> soswire_req!24 -> soswire_req?24 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!24 -> dispatchwire_req?24 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!24 -> emwire_stmt?24 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!24 -> pgwire_stmt?24 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!24 -> pgwire_res?24 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!24 -> emwire_res?24 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!24 -> guardnoti_pevt?24 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!24 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?24 -> guardnoti_bevt!24 -> guardnoti_bevt?24 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!24 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!24 -> dispatchwire_res?24 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!24 -> soswire_res?24 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process -> oracleptupwire_token?49 -> (oracleptupwire_token!49 -> PatientOracle_supply_supplied -> PatientOracle_oracleptupwire_extsupplier_process -> PatientBlockchain_append_appended -> PatientBlockchain_oracleptupwire_blockstorage_process -> PatientBlockchain_oracleptupwire_blockstorage_stored -> oracleptupwire_token?49)*" visitedStates="12293" verifyTime="0.3566023" testport="//@component.0/@port.0" traceExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!59 -> roptwire_uid?59 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!59 -> roptwire_res?59 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!55 -> soswire_req?55 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!55 -> dispatchwire_req?55 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!55 -> emwire_stmt?55 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!55 -> pgwire_stmt?55 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!55 -> pgwire_res?55 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!55 -> emwire_res?55 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!55 -> guardnoti_pevt?55 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!55 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?55 -> guardnoti_bevt!55 -> guardnoti_bevt?55 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!55 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!55 -> dispatchwire_res?55 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!55 -> soswire_res?55 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (PatientBlockchain.roptwire.blocksupplier.process -> &lt;> Patient.ptaccess.ptaccessed);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.10">
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@component.7/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.10/@ltlexpr.0/@expr.0">
        <event href="target.arch#//@archstyle.8/@connectortype.0/@roletype.1/@event.1"/>
        <role href="target.arch#//@connector.10/@role.1"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.10"/>
  </verifyProperty>
  <verifyProperty xsi:type="arch:BehaviourProperty" name="arch6-oracle" visitedStates="9386" verifyTime="0.2885183" testport="//@component.0/@port.0" traceExample="init -> Patient_roptwire_extquerier_request -> roptwire_uid!57 -> roptwire_uid?57 -> PatientBlockchain_access_accessed -> PatientBlockchain_roptwire_blocksupplier_process -> roptwire_res!57 -> roptwire_res?57 -> Patient_ptaccess_ptaccessed -> Patient_roptwire_extquerier_process -> LifeBand_soswire_requester_request -> soswire_req!13 -> soswire_req?13 -> SOSGateway_soswire_responder_invoke -> SOSGateway_dispatchwire_requester_request -> dispatchwire_req!13 -> dispatchwire_req?13 -> RequestDispatcher_dispatchwire_responder_invoke -> RequestDispatcher_accept_dispatched -> RequestDispatcher_emwire_querier_process -> emwire_stmt!13 -> emwire_stmt?13 -> EmCenter_emaccess_emaccessed -> EmCenter_pgwire_querier_process -> pgwire_stmt!13 -> pgwire_stmt?13 -> Practitioner_pgaccess_return -> Practitioner_pgwire_readstore_process -> pgwire_res!13 -> pgwire_res?13 -> EmCenter_pgwire_querier_Skip -> EmCenter_emwire_readstore_process -> emwire_res!13 -> emwire_res?13 -> RequestDispatcher_emwire_querier_Skip -> RequestDispatcher_guardnoti_eventpublisher_process -> guardnoti_pevt!13 -> guardnoti_pevt?13 -> GuardnotiLog_logguardnoti_logged -> GuardnotiLog_guardnoti_eventstore_process -> guardnoti_sevt!13 -> GuardnotiLog_guardnoti_eventstore_persist -> guardnoti_sevt?13 -> guardnoti_bevt!13 -> guardnoti_bevt?13 -> LifeCare_cnotify_acknowlege -> LifeCare_ptwire_reader_process -> ptwire_req!13 -> RequestDispatcher_guardnoti_eventpublisher_broadcast -> RequestDispatcher_guardnoti_eventpublisher_Skip -> RequestDispatcher_dispatchwire_responder_process -> dispatchwire_res!13 -> dispatchwire_res?13 -> SOSGateway_sos_acknowledge -> SOSGateway_sos_alert -> SOSGateway_dispatchwire_requester_process -> SOSGateway_dispatchwire_requester_Skip -> SOSGateway_soswire_responder_process -> soswire_res!13 -> soswire_res?13 -> LifeBand_alert_onalert -> LifeBand_soswire_requester_process" exprText="[]  (PatientOracle.supply.supplied -> &lt;> PatientBlockchain.oracleptupwire.blockstorage.stored);&#xA;">
    <model href="target.arch#/"/>
    <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@verifyProperty.11">
      <expr xsi:type="arch:LTLRegularExpr" nextExpr="//@verifyProperty.11/@ltlexpr.0/@expr.1">
        <event href="target.arch#//@component.13/@port.0/@events.0"/>
      </expr>
      <expr xsi:type="arch:LTLRegularExpr" operator="EVENTUALLY">
        <event href="target.arch#//@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
        <role href="target.arch#//@connector.9/@role.0"/>
      </expr>
    </ltlexpr>
    <connector href="target.arch#//@connector.9"/>
  </verifyProperty>
  <host name="AppServer">
    <node type="APPLICATION_CONTAINER" name="J2EEContainer" component="//@component.1">
      <port name="port" portNumber="25555" node="//@host.0/@node.0" namedport="//@component.1/@port.0" hasFirewall="true"/>
      <port name="port" portNumber="8089" node="//@host.0/@node.0" namedport="//@component.1/@port.0"/>
    </node>
  </host>
  <host netAccessType="PUBLIC" name="DedicatedAppServer" hostType="DEDICATED_SERVER">
    <node type="APPLICATION_CONTAINER" name="JBossAppServer" component="//@component.2 //@component.6 //@component.5">
      <port name="port" portNumber="8080" node="//@host.1/@node.0" namedport="//@component.2/@port.0" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
      <port name="port" portNumber="23333" node="//@host.1/@node.0" namedport="//@component.2/@port.0"/>
      <port name="port" portNumber="8089" node="//@host.1/@node.0" namedport="//@component.6/@port.1 //@component.5/@port.1"/>
    </node>
  </host>
  <host name="Mobile1">
    <node type="APPLICATION_CONTAINER" name="Android1" component="//@component.3">
      <port name="port" portNumber="27877" node="//@host.2/@node.0" namedport="//@component.3/@port.0"/>
      <port name="port" portNumber="25123" node="//@host.2/@node.0" namedport="//@component.3/@port.0"/>
    </node>
  </host>
  <host name="Mobile2">
    <node name="Android2" component="//@component.4">
      <port name="port" portNumber="27889" node="//@host.3/@node.0" namedport="//@component.4/@port.0"/>
      <port name="port" portNumber="25124" node="//@host.3/@node.0" namedport="//@component.4/@port.0"/>
    </node>
  </host>
  <host name="Wristband">
    <node type="APPLICATION_CONTAINER" name="Android0" component="//@component.0">
      <port name="port" portNumber="14555" node="//@host.4/@node.0" namedport="//@component.0/@port.0"/>
    </node>
  </host>
  <host name="HMS">
    <node type="APPLICATION_CONTAINER" name="TomcatServer" component="//@component.7 //@component.9">
      <port name="port" portNumber="28855" node="//@host.5/@node.0" namedport="//@component.7/@port.0" hasAuthentication="true" hasAuthorization="true"/>
    </node>
  </host>
  <host name="BackOfficeServer">
    <node type="APPLICATION_CONTAINER" name="RuntimeFramework" component="//@component.8">
      <port name="port" portNumber="12243" node="//@host.6/@node.0" namedport="//@component.8/@port.0"/>
    </node>
  </host>
  <link name="link1" linkType="HTTPS" networkType="INTERNET" source="//@host.0/@node.0/@port.0" target="//@host.1/@node.0/@port.0"/>
  <link name="link2"/>
  <link name="link3"/>
  <link name="link4" linkType="HTTPS" networkType="INTERNET" source="//@host.1/@node.0/@port.1" target="//@host.2/@node.0/@port.0"/>
  <link name="link5" linkType="HTTPS" networkType="INTERNET" source="//@host.1/@node.0/@port.1" target="//@host.3/@node.0/@port.0"/>
  <link name="link6" networkType="INTERNET" source="//@host.4/@node.0/@port.0" target="//@host.0/@node.0/@port.1"/>
  <link name="link7" linkType="HTTPS" networkType="INTERNET" source="//@host.2/@node.0/@port.1" target="//@host.5/@node.0/@port.0"/>
  <link name="link8" linkType="HTTPS" networkType="INTERNET" source="//@host.3/@node.0/@port.1" target="//@host.5/@node.0/@port.0"/>
  <link name="link9" networkType="INTERNET" source="//@host.6/@node.0/@port.0" target="//@host.1/@node.0/@port.2"/>
  <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
  <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
  <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
  <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
  <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
  <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
  <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
</arch:DesignModel>
