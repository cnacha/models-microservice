<?xml version="1.0" encoding="UTF-8"?>
<arch:MigrationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arch="http://www.example.org/arch">
  <source href="sample.arch#/"/>
  <target href="target.arch#/"/>
  <interimmodels step="1" description="setup database: financetransblockchain" nextModel="//@interimmodels.1" isStable="true" name="setup-database">
    <designmodel name="inter1">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.0/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.0/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.0/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.0/@designmodel/@connector.1/@role.1 //@interimmodels.0/@designmodel/@connector.4/@role.0 //@interimmodels.0/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.0/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.0/@designmodel/@connector.2/@role.1 //@interimmodels.0/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.0/@designmodel/@connector.4/@role.1 //@interimmodels.0/@designmodel/@connector.6/@role.0 //@interimmodels.0/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.0/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.0/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.0/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.0/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.0/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.0/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.0/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.0/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.0/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.5/@role.0" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.4/@role.0" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.8/@role.0" connector="//@interimmodels.0/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.4/@role.0" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.6/@role.0" connector="//@interimmodels.0/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.9"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.0/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.0/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.063572" testport="//@interimmodels.0/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!94 -> prvapiwire_req?94 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!94 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!94 -> prvmsgwire_req?94 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!94 -> comwire_req?94 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!94 -> comwire_res?94 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!94 -> finwritewire_req?94 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!94 -> finwritewire_res?94 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!94 -> prvmsgwire_res?94 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!94 -> prvapiwire_res?94 -> admsgwire_pub?94 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0042471" testport="//@interimmodels.0/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!57 -> iotreqwire_req?57 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!57 -> prvmsgwire_req?57 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!57 -> comwire_req?57 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!57 -> comwire_res?57 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!57 -> finwritewire_req?57 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!57 -> finwritewire_res?57 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!57 -> prvmsgwire_res?57 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!57 -> iotreqwire_res?57" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.0/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.0/@designmodel" visitedStates="10" verifyTime="0.003954399999999999" testport="//@interimmodels.0/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!24 -> ibankwire_req?24 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!24 -> ibankwire_res?24" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.0/@designmodel" visitedStates="346" verifyTime="0.011163" testport="//@interimmodels.0/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!34 -> prvapiwire_req?34 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!34 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!34 -> prvmsgwire_req?34 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!34 -> comwire_req?34 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!34 -> comwire_res?34 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!34 -> finwritewire_req?34 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!34 -> finwritewire_res?34 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!34 -> prvmsgwire_res?34 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!34 -> prvapiwire_res?34 -> admsgwire_pub?34 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.0/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.0/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.0/@designmodel/@host.1/@node.0" namedport="//@interimmodels.0/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.0/@designmodel/@component.2 //@interimmodels.0/@designmodel/@component.3 //@interimmodels.0/@designmodel/@component.5 //@interimmodels.0/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.0/@designmodel/@component.10 //@interimmodels.0/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.0/@designmodel/@host.2/@node.1" namedport="//@interimmodels.0/@designmodel/@component.10/@port.0 //@interimmodels.0/@designmodel/@component.10/@port.1 //@interimmodels.0/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.0/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.0/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.0/@designmodel/@host.4/@node.0" namedport="//@interimmodels.0/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.0/@designmodel/@host.4/@node.0" namedport="//@interimmodels.0/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.0/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.0/@designmodel/@host.4/@node.1" namedport="//@interimmodels.0/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.0/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.0/@designmodel/@host.5/@node.0" namedport="//@interimmodels.0/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.0/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.0/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="setup database: admsgwirelog" nextModel="//@interimmodels.2" isStable="true" name="setup-database">
    <designmodel name="inter2">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.1/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.1/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.1/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.1/@designmodel/@connector.1/@role.1 //@interimmodels.1/@designmodel/@connector.4/@role.0 //@interimmodels.1/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.1/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.1/@designmodel/@connector.2/@role.1 //@interimmodels.1/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.1/@designmodel/@connector.4/@role.1 //@interimmodels.1/@designmodel/@connector.6/@role.0 //@interimmodels.1/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.1/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.1/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.1/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.1/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.1/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.1/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.1/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.1/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.1/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.5/@role.0" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.4/@role.0" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.8/@role.0" connector="//@interimmodels.1/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.4/@role.0" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.6/@role.0" connector="//@interimmodels.1/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.9"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.1/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.1/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0119285" testport="//@interimmodels.1/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!22 -> prvapiwire_req?22 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!22 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!22 -> prvmsgwire_req?22 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!22 -> comwire_req?22 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!22 -> comwire_res?22 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!22 -> finwritewire_req?22 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!22 -> finwritewire_res?22 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!22 -> prvmsgwire_res?22 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!22 -> prvapiwire_res?22 -> admsgwire_pub?22 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0044066999999999995" testport="//@interimmodels.1/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!49 -> iotreqwire_req?49 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!49 -> prvmsgwire_req?49 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!49 -> comwire_req?49 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!49 -> comwire_res?49 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!49 -> finwritewire_req?49 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!49 -> finwritewire_res?49 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!49 -> prvmsgwire_res?49 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!49 -> iotreqwire_res?49" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.1/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.1/@designmodel" visitedStates="10" verifyTime="0.0047262" testport="//@interimmodels.1/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!55 -> ibankwire_req?55 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!55 -> ibankwire_res?55" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.1/@designmodel" visitedStates="346" verifyTime="0.0097551" testport="//@interimmodels.1/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!82 -> prvapiwire_req?82 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!82 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!82 -> prvmsgwire_req?82 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!82 -> comwire_req?82 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!82 -> comwire_res?82 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!82 -> finwritewire_req?82 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!82 -> finwritewire_res?82 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!82 -> prvmsgwire_res?82 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!82 -> prvapiwire_res?82 -> admsgwire_pub?82 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.1/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.1/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.1/@designmodel/@host.1/@node.0" namedport="//@interimmodels.1/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.1/@designmodel/@component.2 //@interimmodels.1/@designmodel/@component.3 //@interimmodels.1/@designmodel/@component.5 //@interimmodels.1/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.1/@designmodel/@component.10 //@interimmodels.1/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.1/@designmodel/@host.2/@node.1" namedport="//@interimmodels.1/@designmodel/@component.10/@port.0 //@interimmodels.1/@designmodel/@component.10/@port.1 //@interimmodels.1/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.1/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.1/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.1/@designmodel/@host.4/@node.0" namedport="//@interimmodels.1/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.1/@designmodel/@host.4/@node.0" namedport="//@interimmodels.1/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.1/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.1/@designmodel/@host.4/@node.1" namedport="//@interimmodels.1/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.1/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.1/@designmodel/@host.5/@node.0" namedport="//@interimmodels.1/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.1/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.1/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="deploy service: financetrans" nextModel="//@interimmodels.3" isStable="true" name="deploy-service">
    <designmodel name="inter3">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.2/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.2/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.2/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.2/@designmodel/@connector.1/@role.1 //@interimmodels.2/@designmodel/@connector.4/@role.0 //@interimmodels.2/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.2/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.2/@designmodel/@connector.2/@role.1 //@interimmodels.2/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.2/@designmodel/@connector.4/@role.1 //@interimmodels.2/@designmodel/@connector.6/@role.0 //@interimmodels.2/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.2/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.2/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.2/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.2/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.2/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.2/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.2/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.2/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.2/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.5/@role.0" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.4/@role.0" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.8/@role.0" connector="//@interimmodels.2/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.4/@role.0" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.6/@role.0" connector="//@interimmodels.2/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.9"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.2/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.2/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.012242399999999999" testport="//@interimmodels.2/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!18 -> prvapiwire_req?18 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!18 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!18 -> prvapiwire_res?18 -> admsgwire_pub?18 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0040552999999999995" testport="//@interimmodels.2/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!38 -> iotreqwire_req?38 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!38 -> prvmsgwire_req?38 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!38 -> comwire_req?38 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!38 -> comwire_res?38 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!38 -> finwritewire_req?38 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!38 -> finwritewire_res?38 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!38 -> prvmsgwire_res?38 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!38 -> iotreqwire_res?38" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.2/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.2/@designmodel" visitedStates="10" verifyTime="0.0038632999999999996" testport="//@interimmodels.2/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!44 -> ibankwire_req?44 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!44 -> ibankwire_res?44" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.2/@designmodel" visitedStates="346" verifyTime="0.0123653" testport="//@interimmodels.2/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!21 -> prvapiwire_req?21 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!21 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!21 -> prvmsgwire_req?21 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!21 -> comwire_req?21 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!21 -> comwire_res?21 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!21 -> finwritewire_req?21 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!21 -> finwritewire_res?21 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!21 -> prvmsgwire_res?21 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!21 -> prvapiwire_res?21 -> admsgwire_pub?21 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.2/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.2/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.2/@designmodel/@host.1/@node.0" namedport="//@interimmodels.2/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.2/@designmodel/@component.2 //@interimmodels.2/@designmodel/@component.3 //@interimmodels.2/@designmodel/@component.5 //@interimmodels.2/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.2/@designmodel/@component.10 //@interimmodels.2/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.2/@designmodel/@host.2/@node.1" namedport="//@interimmodels.2/@designmodel/@component.10/@port.0 //@interimmodels.2/@designmodel/@component.10/@port.1 //@interimmodels.2/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.2/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.2/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.2/@designmodel/@host.4/@node.0" namedport="//@interimmodels.2/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.2/@designmodel/@host.4/@node.0" namedport="//@interimmodels.2/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.2/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.2/@designmodel/@host.4/@node.1" namedport="//@interimmodels.2/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.2/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.2/@designmodel/@host.5/@node.0" namedport="//@interimmodels.2/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.2/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.2/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="4" description="network route for connector:rofinreadwire between: financetrans financetransblockchain " nextModel="//@interimmodels.4" name="network-route">
    <designmodel name="inter4">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.3/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.3/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.3/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.3/@designmodel/@connector.1/@role.1 //@interimmodels.3/@designmodel/@connector.4/@role.0 //@interimmodels.3/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.3/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.3/@designmodel/@connector.2/@role.1 //@interimmodels.3/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.3/@designmodel/@connector.4/@role.1 //@interimmodels.3/@designmodel/@connector.6/@role.0 //@interimmodels.3/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.3/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.3/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.3/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.3/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.3/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.3/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.3/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.3/@designmodel/@connector.7/@role.1 //@interimmodels.3/@designmodel/@connector.10/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.3/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.3/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.5/@role.0" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.4/@role.0" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.8/@role.0" connector="//@interimmodels.3/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.4/@role.0" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.6/@role.0" connector="//@interimmodels.3/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.3/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.3/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.3/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.3/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="5209" verifyTime="0.13485229999999998" testport="//@interimmodels.3/@designmodel/@component.3/@port.0" traceExample="init -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!74 -> rofinreadwire_uid?74 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!74 -> rofinreadwire_res?74 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!59 -> prvapiwire_req?59 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!59 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!59 -> prvmsgwire_req?59 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!59 -> comwire_req?59 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!59 -> comwire_res?59 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!59 -> finwritewire_req?59 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!59 -> finwritewire_res?59 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!59 -> prvmsgwire_res?59 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!59 -> prvapiwire_res?59 -> admsgwire_pub?59 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="599" verifyTime="0.0207525" testport="//@interimmodels.3/@designmodel/@component.7/@port.0" traceExample="init -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!91 -> rofinreadwire_uid?91 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!91 -> rofinreadwire_res?91 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!79 -> iotreqwire_req?79 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!79 -> iotreqwire_res?79" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.3/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.3/@designmodel" valid="false" counterExample="init -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!76 -> rofinreadwire_uid?76 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!76 -> rofinreadwire_res?76 -> InternetBanking_listaccount_renderlist -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> InternetBanking_ibankwire_requester_process -> ibankwire_req!86 -> ibankwire_req?86 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!86 -> ibankwire_res?86" visitedStates="60" verifyTime="0.0061890999999999995" testport="//@interimmodels.3/@designmodel/@component.8/@port.0" traceExample="init -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!76 -> rofinreadwire_uid?76 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!76 -> rofinreadwire_res?76 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!86 -> ibankwire_req?86 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!86 -> ibankwire_res?86" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.3/@designmodel" visitedStates="5377" verifyTime="0.11651349999999999" testport="//@interimmodels.3/@designmodel/@component.3/@port.0" traceExample="init -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!75 -> rofinreadwire_uid?75 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!75 -> rofinreadwire_res?75 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!73 -> prvapiwire_req?73 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!73 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!73 -> prvapiwire_res?73 -> admsgwire_pub?73 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="88" verifyTime="0.007456399999999999" testport="//@interimmodels.3/@designmodel/@component.6/@port.0" traceExample="init -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!65 -> rofinreadwire_uid?65 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!65 -> rofinreadwire_res?65 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_reader_process -> finreadwire_req!17" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.3/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.3/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.3/@designmodel/@host.1/@node.0" namedport="//@interimmodels.3/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.3/@designmodel/@component.2 //@interimmodels.3/@designmodel/@component.3 //@interimmodels.3/@designmodel/@component.5 //@interimmodels.3/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.3/@designmodel/@component.10 //@interimmodels.3/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.3/@designmodel/@host.2/@node.1" namedport="//@interimmodels.3/@designmodel/@component.10/@port.0 //@interimmodels.3/@designmodel/@component.10/@port.1 //@interimmodels.3/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.3/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.3/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.3/@designmodel/@host.4/@node.0" namedport="//@interimmodels.3/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.3/@designmodel/@host.4/@node.0" namedport="//@interimmodels.3/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.3/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.3/@designmodel/@host.4/@node.1" namedport="//@interimmodels.3/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.3/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.3/@designmodel/@host.5/@node.0" namedport="//@interimmodels.3/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.3/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.3/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="5" description="network route for connector:finreadwire between: digitalwallet financetrans " nextModel="//@interimmodels.5" isStable="true" name="network-route">
    <designmodel name="inter5">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.4/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.4/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.4/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.4/@designmodel/@connector.1/@role.1 //@interimmodels.4/@designmodel/@connector.4/@role.0 //@interimmodels.4/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.4/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.4/@designmodel/@connector.2/@role.1 //@interimmodels.4/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.4/@designmodel/@connector.4/@role.1 //@interimmodels.4/@designmodel/@connector.6/@role.0 //@interimmodels.4/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.4/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.4/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.4/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.4/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.4/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.4/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.4/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.4/@designmodel/@connector.10/@role.0 //@interimmodels.4/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.4/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.4/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.5/@role.0" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.4/@role.0" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.8/@role.0" connector="//@interimmodels.4/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.4/@role.0" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.10/@role.0" connector="//@interimmodels.4/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.6/@role.0" connector="//@interimmodels.4/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.4/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.4/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.4/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.4/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0112106" testport="//@interimmodels.4/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!71 -> prvapiwire_req?71 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!71 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!71 -> prvmsgwire_req?71 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!71 -> comwire_req?71 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!71 -> comwire_res?71 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!71 -> finwritewire_req?71 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!71 -> finwritewire_res?71 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!71 -> prvmsgwire_res?71 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!71 -> prvapiwire_res?71 -> admsgwire_pub?71 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0057128" testport="//@interimmodels.4/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!73 -> iotreqwire_req?73 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!73 -> iotreqwire_res?73" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.4/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.4/@designmodel" visitedStates="10" verifyTime="0.0085839" testport="//@interimmodels.4/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!40 -> ibankwire_req?40 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!40 -> ibankwire_res?40" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.4/@designmodel" visitedStates="346" verifyTime="0.0108314" testport="//@interimmodels.4/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!12 -> prvapiwire_req?12 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!12 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!12 -> prvmsgwire_req?12 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!12 -> comwire_req?12 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!12 -> comwire_res?12 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!12 -> finwritewire_req?12 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!12 -> finwritewire_res?12 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!12 -> prvmsgwire_res?12 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!12 -> prvapiwire_res?12 -> admsgwire_pub?12 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0550205" testport="//@interimmodels.4/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!18 -> finreadwire_req?18 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!18 -> rofinreadwire_uid?18 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!18 -> rofinreadwire_res?18 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!18 -> finreadwire_res?18" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.4/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.4/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.4/@designmodel/@host.1/@node.0" namedport="//@interimmodels.4/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.4/@designmodel/@component.2 //@interimmodels.4/@designmodel/@component.3 //@interimmodels.4/@designmodel/@component.5 //@interimmodels.4/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.4/@designmodel/@component.10 //@interimmodels.4/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.4/@designmodel/@host.2/@node.1" namedport="//@interimmodels.4/@designmodel/@component.10/@port.0 //@interimmodels.4/@designmodel/@component.10/@port.1 //@interimmodels.4/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.4/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.4/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.4/@designmodel/@host.4/@node.0" namedport="//@interimmodels.4/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.4/@designmodel/@host.4/@node.0" namedport="//@interimmodels.4/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.4/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.4/@designmodel/@host.4/@node.1" namedport="//@interimmodels.4/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.4/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.4/@designmodel/@host.5/@node.0" namedport="//@interimmodels.4/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.4/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.4/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="6" description="deploy service: commodity" nextModel="//@interimmodels.6" isStable="true" name="deploy-service">
    <designmodel name="inter6">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.5/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.5/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.5/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.5/@designmodel/@connector.1/@role.1 //@interimmodels.5/@designmodel/@connector.4/@role.0 //@interimmodels.5/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.5/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.5/@designmodel/@connector.2/@role.1 //@interimmodels.5/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.5/@designmodel/@connector.4/@role.1 //@interimmodels.5/@designmodel/@connector.6/@role.0 //@interimmodels.5/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.5/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.5/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.5/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.5/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.5/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.5/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.5/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.5/@designmodel/@connector.10/@role.0 //@interimmodels.5/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.5/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.5/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.5/@role.0" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.4/@role.0" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.8/@role.0" connector="//@interimmodels.5/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.4/@role.0" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.10/@role.0" connector="//@interimmodels.5/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.6/@role.0" connector="//@interimmodels.5/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.5/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.5/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.5/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.5/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0145513" testport="//@interimmodels.5/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!36 -> prvapiwire_req?36 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!36 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!36 -> prvmsgwire_req?36 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!36 -> comwire_req?36 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!36 -> comwire_res?36 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!36 -> finwritewire_req?36 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!36 -> finwritewire_res?36 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!36 -> prvmsgwire_res?36 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!36 -> prvapiwire_res?36 -> admsgwire_pub?36 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0052248" testport="//@interimmodels.5/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!68 -> iotreqwire_req?68 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!68 -> prvmsgwire_req?68 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!68 -> comwire_req?68 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!68 -> comwire_res?68 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!68 -> finwritewire_req?68 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!68 -> finwritewire_res?68 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!68 -> prvmsgwire_res?68 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!68 -> iotreqwire_res?68" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.5/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.5/@designmodel" visitedStates="10" verifyTime="0.0061782" testport="//@interimmodels.5/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!77 -> ibankwire_req?77 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!77 -> ibankwire_res?77" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.5/@designmodel" visitedStates="346" verifyTime="0.0134836" testport="//@interimmodels.5/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!92 -> prvapiwire_req?92 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!92 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!92 -> prvmsgwire_req?92 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!92 -> comwire_req?92 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!92 -> comwire_res?92 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!92 -> finwritewire_req?92 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!92 -> finwritewire_res?92 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!92 -> prvmsgwire_res?92 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!92 -> prvapiwire_res?92 -> admsgwire_pub?92 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0067594" testport="//@interimmodels.5/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!71 -> finreadwire_req?71 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!71 -> rofinreadwire_uid?71 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!71 -> rofinreadwire_res?71 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!71 -> finreadwire_res?71" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.5/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.5/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.5/@designmodel/@host.1/@node.0" namedport="//@interimmodels.5/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.5/@designmodel/@component.2 //@interimmodels.5/@designmodel/@component.3 //@interimmodels.5/@designmodel/@component.5 //@interimmodels.5/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.5/@designmodel/@component.10 //@interimmodels.5/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.5/@designmodel/@host.2/@node.1" namedport="//@interimmodels.5/@designmodel/@component.10/@port.0 //@interimmodels.5/@designmodel/@component.10/@port.1 //@interimmodels.5/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.5/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.5/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.5/@designmodel/@host.4/@node.0" namedport="//@interimmodels.5/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.5/@designmodel/@host.4/@node.0" namedport="//@interimmodels.5/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.5/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.5/@designmodel/@host.4/@node.1" namedport="//@interimmodels.5/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.5/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.5/@designmodel/@host.5/@node.0" namedport="//@interimmodels.5/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.5/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.5/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="8" description="deploy service: commodityoracle" nextModel="//@interimmodels.7" isStable="true" name="deploy-service">
    <designmodel name="inter8">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.6/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.6/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.6/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.6/@designmodel/@connector.1/@role.1 //@interimmodels.6/@designmodel/@connector.4/@role.0 //@interimmodels.6/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.6/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.6/@designmodel/@connector.2/@role.1 //@interimmodels.6/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.6/@designmodel/@connector.4/@role.1 //@interimmodels.6/@designmodel/@connector.6/@role.0 //@interimmodels.6/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.6/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.6/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.6/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.6/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.6/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.6/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.6/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.6/@designmodel/@connector.10/@role.0 //@interimmodels.6/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.6/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.6/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.5/@role.0" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.4/@role.0" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.8/@role.0" connector="//@interimmodels.6/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.4/@role.0" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.10/@role.0" connector="//@interimmodels.6/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.6/@role.0" connector="//@interimmodels.6/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.6/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.6/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.6/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.6/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0137381" testport="//@interimmodels.6/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!27 -> prvapiwire_req?27 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!27 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!27 -> prvmsgwire_req?27 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!27 -> comwire_req?27 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!27 -> comwire_res?27 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!27 -> finwritewire_req?27 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!27 -> finwritewire_res?27 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!27 -> prvmsgwire_res?27 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!27 -> prvapiwire_res?27 -> admsgwire_pub?27 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0061962" testport="//@interimmodels.6/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!57 -> iotreqwire_req?57 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!57 -> prvmsgwire_req?57 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!57 -> comwire_req?57 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!57 -> comwire_res?57 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!57 -> finwritewire_req?57 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!57 -> finwritewire_res?57 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!57 -> prvmsgwire_res?57 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!57 -> iotreqwire_res?57" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.6/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.6/@designmodel" visitedStates="10" verifyTime="0.0050758" testport="//@interimmodels.6/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!79 -> ibankwire_req?79 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!79 -> ibankwire_res?79" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.6/@designmodel" visitedStates="346" verifyTime="0.0122262" testport="//@interimmodels.6/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!50 -> prvapiwire_req?50 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!50 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!50 -> prvmsgwire_req?50 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!50 -> comwire_req?50 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!50 -> comwire_res?50 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!50 -> finwritewire_req?50 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!50 -> finwritewire_res?50 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!50 -> prvmsgwire_res?50 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!50 -> prvapiwire_res?50 -> admsgwire_pub?50 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0061814" testport="//@interimmodels.6/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!61 -> finreadwire_req?61 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!61 -> rofinreadwire_uid?61 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!61 -> rofinreadwire_res?61 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!61 -> finreadwire_res?61" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.6/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.6/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.6/@designmodel/@host.1/@node.0" namedport="//@interimmodels.6/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.6/@designmodel/@component.2 //@interimmodels.6/@designmodel/@component.3 //@interimmodels.6/@designmodel/@component.5 //@interimmodels.6/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.6/@designmodel/@component.10 //@interimmodels.6/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.6/@designmodel/@host.2/@node.1" namedport="//@interimmodels.6/@designmodel/@component.10/@port.0 //@interimmodels.6/@designmodel/@component.10/@port.1 //@interimmodels.6/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.6/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.6/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.6/@designmodel/@host.4/@node.0" namedport="//@interimmodels.6/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.6/@designmodel/@host.4/@node.0" namedport="//@interimmodels.6/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.6/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.6/@designmodel/@host.4/@node.1" namedport="//@interimmodels.6/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.6/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.6/@designmodel/@host.5/@node.0" namedport="//@interimmodels.6/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.6/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.6/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="10" description="deploy service: financetransoracle" nextModel="//@interimmodels.8" isStable="true" name="deploy-service">
    <designmodel name="inter10">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.7/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.7/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.7/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.7/@designmodel/@connector.1/@role.1 //@interimmodels.7/@designmodel/@connector.4/@role.0 //@interimmodels.7/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.7/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.7/@designmodel/@connector.2/@role.1 //@interimmodels.7/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.7/@designmodel/@connector.4/@role.1 //@interimmodels.7/@designmodel/@connector.6/@role.0 //@interimmodels.7/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.7/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.7/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.7/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.7/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.7/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.7/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.7/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.7/@designmodel/@connector.10/@role.0 //@interimmodels.7/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.7/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.7/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.5/@role.0" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.4/@role.0" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.8/@role.0" connector="//@interimmodels.7/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.4/@role.0" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.10/@role.0" connector="//@interimmodels.7/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.6/@role.0" connector="//@interimmodels.7/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.7/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.7/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.7/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.7/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0122583" testport="//@interimmodels.7/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!94 -> prvapiwire_req?94 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!94 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!94 -> prvmsgwire_req?94 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!94 -> comwire_req?94 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!94 -> comwire_res?94 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!94 -> finwritewire_req?94 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!94 -> finwritewire_res?94 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!94 -> prvmsgwire_res?94 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!94 -> prvapiwire_res?94 -> admsgwire_pub?94 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0064911" testport="//@interimmodels.7/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!30 -> iotreqwire_req?30 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!30 -> prvmsgwire_req?30 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!30 -> comwire_req?30 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!30 -> comwire_res?30 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!30 -> finwritewire_req?30 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!30 -> finwritewire_res?30 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!30 -> prvmsgwire_res?30 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!30 -> iotreqwire_res?30" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.7/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.7/@designmodel" visitedStates="10" verifyTime="0.0048597" testport="//@interimmodels.7/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!66 -> ibankwire_req?66 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!66 -> ibankwire_res?66" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.7/@designmodel" visitedStates="346" verifyTime="0.0118649" testport="//@interimmodels.7/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!70 -> prvapiwire_req?70 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!70 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!70 -> prvmsgwire_req?70 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!70 -> comwire_req?70 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!70 -> comwire_res?70 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!70 -> finwritewire_req?70 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!70 -> finwritewire_res?70 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!70 -> prvmsgwire_res?70 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!70 -> prvapiwire_res?70 -> admsgwire_pub?70 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0056029999999999995" testport="//@interimmodels.7/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!49 -> finreadwire_req?49 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!49 -> rofinreadwire_uid?49 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!49 -> rofinreadwire_res?49 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!49 -> finreadwire_res?49" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.7/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.7/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.7/@designmodel/@host.1/@node.0" namedport="//@interimmodels.7/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.7/@designmodel/@component.2 //@interimmodels.7/@designmodel/@component.3 //@interimmodels.7/@designmodel/@component.5 //@interimmodels.7/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.7/@designmodel/@component.10 //@interimmodels.7/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.7/@designmodel/@host.2/@node.1" namedport="//@interimmodels.7/@designmodel/@component.10/@port.0 //@interimmodels.7/@designmodel/@component.10/@port.1 //@interimmodels.7/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.7/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.7/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.7/@designmodel/@host.4/@node.0" namedport="//@interimmodels.7/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.7/@designmodel/@host.4/@node.0" namedport="//@interimmodels.7/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.7/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.7/@designmodel/@host.4/@node.1" namedport="//@interimmodels.7/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.7/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.7/@designmodel/@host.5/@node.0" namedport="//@interimmodels.7/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.7/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.7/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="11" description="setup database: commodityblockchain" nextModel="//@interimmodels.9" isStable="true" name="setup-database">
    <designmodel name="inter11">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.8/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.8/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.8/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.8/@designmodel/@connector.1/@role.1 //@interimmodels.8/@designmodel/@connector.4/@role.0 //@interimmodels.8/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.8/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.8/@designmodel/@connector.2/@role.1 //@interimmodels.8/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.8/@designmodel/@connector.4/@role.1 //@interimmodels.8/@designmodel/@connector.6/@role.0 //@interimmodels.8/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.8/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.8/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.8/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.8/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.8/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.8/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.8/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.8/@designmodel/@connector.10/@role.0 //@interimmodels.8/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.8/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.8/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.5/@role.0" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.4/@role.0" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.8/@role.0" connector="//@interimmodels.8/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.4/@role.0" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.10/@role.0" connector="//@interimmodels.8/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.6/@role.0" connector="//@interimmodels.8/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.8/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.8/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.8/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.8/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0103137" testport="//@interimmodels.8/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!35 -> prvapiwire_req?35 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!35 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!35 -> prvmsgwire_req?35 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!35 -> comwire_req?35 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!35 -> comwire_res?35 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!35 -> finwritewire_req?35 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!35 -> finwritewire_res?35 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!35 -> prvmsgwire_res?35 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!35 -> prvapiwire_res?35 -> admsgwire_pub?35 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0055287999999999995" testport="//@interimmodels.8/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!28 -> iotreqwire_req?28 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!28 -> prvmsgwire_req?28 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!28 -> comwire_req?28 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!28 -> comwire_res?28 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!28 -> finwritewire_req?28 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!28 -> finwritewire_res?28 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!28 -> prvmsgwire_res?28 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!28 -> iotreqwire_res?28" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.8/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.8/@designmodel" visitedStates="10" verifyTime="0.004845599999999999" testport="//@interimmodels.8/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!18 -> ibankwire_req?18 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!18 -> ibankwire_res?18" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.8/@designmodel" visitedStates="346" verifyTime="0.0110987" testport="//@interimmodels.8/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!83 -> prvapiwire_req?83 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!83 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!83 -> prvmsgwire_req?83 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!83 -> comwire_req?83 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!83 -> comwire_res?83 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!83 -> finwritewire_req?83 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!83 -> finwritewire_res?83 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!83 -> prvmsgwire_res?83 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!83 -> prvapiwire_res?83 -> admsgwire_pub?83 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0062353999999999994" testport="//@interimmodels.8/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!14 -> finreadwire_req?14 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!14 -> rofinreadwire_uid?14 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!14 -> rofinreadwire_res?14 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!14 -> finreadwire_res?14" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.8/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.8/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.8/@designmodel/@host.1/@node.0" namedport="//@interimmodels.8/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.8/@designmodel/@component.2 //@interimmodels.8/@designmodel/@component.3 //@interimmodels.8/@designmodel/@component.5 //@interimmodels.8/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.8/@designmodel/@component.10 //@interimmodels.8/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.8/@designmodel/@host.2/@node.1" namedport="//@interimmodels.8/@designmodel/@component.10/@port.0 //@interimmodels.8/@designmodel/@component.10/@port.1 //@interimmodels.8/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.8/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.8/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.8/@designmodel/@host.4/@node.0" namedport="//@interimmodels.8/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.8/@designmodel/@host.4/@node.0" namedport="//@interimmodels.8/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.8/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.8/@designmodel/@host.4/@node.1" namedport="//@interimmodels.8/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.8/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.8/@designmodel/@host.5/@node.0" namedport="//@interimmodels.8/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.8/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.8/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="13" description="deploy service: bcintegrator" nextModel="//@interimmodels.10" isStable="true" name="deploy-service">
    <designmodel name="inter13">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.9/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.9/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.9/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.9/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.9/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.9/@designmodel/@connector.1/@role.1 //@interimmodels.9/@designmodel/@connector.4/@role.0 //@interimmodels.9/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.9/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.9/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.9/@designmodel/@connector.2/@role.1 //@interimmodels.9/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.9/@designmodel/@connector.4/@role.1 //@interimmodels.9/@designmodel/@connector.6/@role.0 //@interimmodels.9/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.9/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.9/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.9/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.9/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.9/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.9/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.9/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.9/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.9/@designmodel/@connector.10/@role.0 //@interimmodels.9/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.9/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.9/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.5/@role.0" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.4/@role.0" connector="//@interimmodels.9/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.8/@role.0" connector="//@interimmodels.9/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.4/@role.0" connector="//@interimmodels.9/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.10/@role.0" connector="//@interimmodels.9/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.6/@role.0" connector="//@interimmodels.9/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.9/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.9/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.9/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.9/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.9/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.9/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.9/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.9/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0112032" testport="//@interimmodels.9/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!74 -> prvapiwire_req?74 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!74 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!74 -> prvmsgwire_req?74 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!74 -> comwire_req?74 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!74 -> comwire_res?74 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!74 -> finwritewire_req?74 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!74 -> finwritewire_res?74 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!74 -> prvmsgwire_res?74 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!74 -> prvapiwire_res?74 -> admsgwire_pub?74 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="32" verifyTime="0.057979499999999996" testport="//@interimmodels.9/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!79 -> iotreqwire_req?79 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!79 -> iotreqwire_res?79" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.9/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.9/@designmodel" visitedStates="10" verifyTime="0.0051934" testport="//@interimmodels.9/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!85 -> ibankwire_req?85 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!85 -> ibankwire_res?85" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.9/@designmodel" visitedStates="346" verifyTime="0.0145937" testport="//@interimmodels.9/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!88 -> prvapiwire_req?88 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!88 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!88 -> prvmsgwire_req?88 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!88 -> comwire_req?88 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!88 -> comwire_res?88 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!88 -> finwritewire_req?88 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!88 -> finwritewire_res?88 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!88 -> prvmsgwire_res?88 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!88 -> prvapiwire_res?88 -> admsgwire_pub?88 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0076891" testport="//@interimmodels.9/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!69 -> finreadwire_req?69 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!69 -> rofinreadwire_uid?69 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!69 -> rofinreadwire_res?69 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!69 -> finreadwire_res?69" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.9/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.9/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.9/@designmodel/@host.1/@node.0" namedport="//@interimmodels.9/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.9/@designmodel/@component.2 //@interimmodels.9/@designmodel/@component.3 //@interimmodels.9/@designmodel/@component.5 //@interimmodels.9/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.9/@designmodel/@component.10 //@interimmodels.9/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.9/@designmodel/@host.2/@node.1" namedport="//@interimmodels.9/@designmodel/@component.10/@port.0 //@interimmodels.9/@designmodel/@component.10/@port.1 //@interimmodels.9/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.9/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.9/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.9/@designmodel/@host.4/@node.0" namedport="//@interimmodels.9/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.9/@designmodel/@host.4/@node.0" namedport="//@interimmodels.9/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.9/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.9/@designmodel/@host.4/@node.1" namedport="//@interimmodels.9/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.9/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.9/@designmodel/@host.5/@node.0" namedport="//@interimmodels.9/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.9/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.9/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.9/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="14" description="network route for connector:comwire between: bcintegrator commodityoracle " nextModel="//@interimmodels.11" isStable="true" name="network-route">
    <designmodel name="inter14">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.10/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.10/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.10/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.10/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.10/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.10/@designmodel/@connector.1/@role.1 //@interimmodels.10/@designmodel/@connector.4/@role.0 //@interimmodels.10/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.10/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.10/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.10/@designmodel/@connector.2/@role.1 //@interimmodels.10/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.10/@designmodel/@connector.4/@role.1 //@interimmodels.10/@designmodel/@connector.6/@role.0 //@interimmodels.10/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.10/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.10/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.10/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.10/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.10/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.10/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.10/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.10/@designmodel/@connector.10/@role.0 //@interimmodels.10/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.10/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.10/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.10/@designmodel/@connector.8/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.5/@role.0" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.4/@role.0" connector="//@interimmodels.10/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.8/@role.0" connector="//@interimmodels.10/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.4/@role.0" connector="//@interimmodels.10/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.10/@role.0" connector="//@interimmodels.10/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.6/@role.0" connector="//@interimmodels.10/@designmodel/@connector.8"/>
        <role name="responder" type="in">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <nextRoleExpr href="target.arch#//@connector.10/@role.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.10/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.10/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.10/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.10/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.10/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.10/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.10/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.10/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0096983" testport="//@interimmodels.10/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!60 -> prvapiwire_req?60 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!60 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!60 -> prvmsgwire_req?60 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!60 -> comwire_req?60 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!60 -> comwire_res?60 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!60 -> finwritewire_req?60 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!60 -> finwritewire_res?60 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!60 -> prvmsgwire_res?60 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!60 -> prvapiwire_res?60 -> admsgwire_pub?60 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0070144" testport="//@interimmodels.10/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!10 -> iotreqwire_req?10 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!10 -> prvmsgwire_req?10 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!10 -> comwire_req?10 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!10 -> comwire_res?10 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!10 -> finwritewire_req?10 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!10 -> finwritewire_res?10 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!10 -> prvmsgwire_res?10 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!10 -> iotreqwire_res?10" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.10/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.10/@designmodel" visitedStates="10" verifyTime="0.0040143999999999996" testport="//@interimmodels.10/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!22 -> ibankwire_req?22 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!22 -> ibankwire_res?22" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.10/@designmodel" visitedStates="346" verifyTime="0.011949699999999999" testport="//@interimmodels.10/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.044183799999999995" testport="//@interimmodels.10/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!53 -> finreadwire_req?53 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!53 -> rofinreadwire_uid?53 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!53 -> rofinreadwire_res?53 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!53 -> finreadwire_res?53" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.10/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.10/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.10/@designmodel/@host.1/@node.0" namedport="//@interimmodels.10/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.10/@designmodel/@component.2 //@interimmodels.10/@designmodel/@component.3 //@interimmodels.10/@designmodel/@component.5 //@interimmodels.10/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.10/@designmodel/@component.10 //@interimmodels.10/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.10/@designmodel/@host.2/@node.1" namedport="//@interimmodels.10/@designmodel/@component.10/@port.0 //@interimmodels.10/@designmodel/@component.10/@port.1 //@interimmodels.10/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.10/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.10/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.10/@designmodel/@host.4/@node.0" namedport="//@interimmodels.10/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.10/@designmodel/@host.4/@node.0" namedport="//@interimmodels.10/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.10/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.10/@designmodel/@host.4/@node.1" namedport="//@interimmodels.10/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.10/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.10/@designmodel/@host.5/@node.0" namedport="//@interimmodels.10/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.10/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.10/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.10/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="16" description="setup application: controller" nextModel="//@interimmodels.12" isStable="true" name="setup-application">
    <designmodel name="inter16">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.11/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.11/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.11/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.11/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.11/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.11/@designmodel/@connector.1/@role.1 //@interimmodels.11/@designmodel/@connector.4/@role.0 //@interimmodels.11/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.11/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.11/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.11/@designmodel/@connector.2/@role.1 //@interimmodels.11/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.11/@designmodel/@connector.4/@role.1 //@interimmodels.11/@designmodel/@connector.6/@role.0 //@interimmodels.11/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.11/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.11/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.11/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.11/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.11/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.11/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.11/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.11/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.11/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.11/@designmodel/@connector.10/@role.0 //@interimmodels.11/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.11/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.11/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.11/@designmodel/@connector.8/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.5/@role.0" connector="//@interimmodels.11/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.4/@role.0" connector="//@interimmodels.11/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.8/@role.0" connector="//@interimmodels.11/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.4/@role.0" connector="//@interimmodels.11/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.10/@role.0" connector="//@interimmodels.11/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.6/@role.0" connector="//@interimmodels.11/@designmodel/@connector.8"/>
        <role name="responder" type="in">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <nextRoleExpr href="target.arch#//@connector.10/@role.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.11/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.11/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.11/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.11/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.11/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.11/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.11/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.11/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.11/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.11/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.11/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.11/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.11/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.11/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.11/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.11/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.11/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.11/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.11/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.11/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.11/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.11/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.11/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.11/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.11/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.11/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0096983" testport="//@interimmodels.11/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!60 -> prvapiwire_req?60 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!60 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!60 -> prvmsgwire_req?60 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!60 -> comwire_req?60 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!60 -> comwire_res?60 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!60 -> finwritewire_req?60 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!60 -> finwritewire_res?60 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!60 -> prvmsgwire_res?60 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!60 -> prvapiwire_res?60 -> admsgwire_pub?60 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0070144" testport="//@interimmodels.11/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!10 -> iotreqwire_req?10 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!10 -> prvmsgwire_req?10 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!10 -> comwire_req?10 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!10 -> comwire_res?10 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!10 -> finwritewire_req?10 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!10 -> finwritewire_res?10 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!10 -> prvmsgwire_res?10 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!10 -> iotreqwire_res?10" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.11/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.11/@designmodel" visitedStates="10" verifyTime="0.0040143999999999996" testport="//@interimmodels.11/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!22 -> ibankwire_req?22 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!22 -> ibankwire_res?22" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.11/@designmodel" visitedStates="346" verifyTime="0.011949699999999999" testport="//@interimmodels.11/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.044183799999999995" testport="//@interimmodels.11/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!53 -> finreadwire_req?53 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!53 -> rofinreadwire_uid?53 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!53 -> rofinreadwire_res?53 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!53 -> finreadwire_res?53" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.11/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.11/@designmodel/@host.0/@node.0" namedport="//@interimmodels.11/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.11/@designmodel/@host.0/@node.0" namedport="//@interimmodels.11/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.11/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.11/@designmodel/@host.1/@node.0" namedport="//@interimmodels.11/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.11/@designmodel/@component.2 //@interimmodels.11/@designmodel/@component.3 //@interimmodels.11/@designmodel/@component.5 //@interimmodels.11/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.11/@designmodel/@host.2/@node.0" namedport="//@interimmodels.11/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.11/@designmodel/@host.2/@node.0" namedport="//@interimmodels.11/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.11/@designmodel/@host.2/@node.0" namedport="//@interimmodels.11/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.11/@designmodel/@component.10 //@interimmodels.11/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.11/@designmodel/@host.2/@node.1" namedport="//@interimmodels.11/@designmodel/@component.10/@port.0 //@interimmodels.11/@designmodel/@component.10/@port.1 //@interimmodels.11/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.11/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.11/@designmodel/@host.3/@node.0" namedport="//@interimmodels.11/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.11/@designmodel/@host.3/@node.0" namedport="//@interimmodels.11/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.11/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.11/@designmodel/@host.4/@node.0" namedport="//@interimmodels.11/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.11/@designmodel/@host.4/@node.0" namedport="//@interimmodels.11/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.11/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.11/@designmodel/@host.4/@node.1" namedport="//@interimmodels.11/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.11/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.11/@designmodel/@host.5/@node.0" namedport="//@interimmodels.11/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.11/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.11/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.11/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.11/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.11/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="17" description="network route for connector:oraclecomwire between: commodityoracle commodityblockchain " nextModel="//@interimmodels.13" isStable="true" name="network-route">
    <designmodel name="inter17">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.12/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.12/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.12/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.12/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.12/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.12/@designmodel/@connector.1/@role.1 //@interimmodels.12/@designmodel/@connector.4/@role.0 //@interimmodels.12/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.12/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.12/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.12/@designmodel/@connector.2/@role.1 //@interimmodels.12/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.12/@designmodel/@connector.4/@role.1 //@interimmodels.12/@designmodel/@connector.6/@role.0 //@interimmodels.12/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.12/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.12/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.12/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.12/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.12/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.12/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.12/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.12/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.12/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.12/@designmodel/@connector.10/@role.0 //@interimmodels.12/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.12/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.12/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.12/@designmodel/@connector.8/@role.1 //@interimmodels.12/@designmodel/@connector.11/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" role="//@interimmodels.12/@designmodel/@connector.11/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.12/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.5/@role.0" connector="//@interimmodels.12/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.4/@role.0" connector="//@interimmodels.12/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.12/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.8/@role.0" connector="//@interimmodels.12/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.4/@role.0" connector="//@interimmodels.12/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.12/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.12/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.10/@role.0" connector="//@interimmodels.12/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.6/@role.0" connector="//@interimmodels.12/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.11/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.12/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.12/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.12/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="oraclecomwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.12/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.12/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.12/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.12/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.12/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.12/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.12/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.12/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.12/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.12/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.12/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.12/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.12/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.12/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.12/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.12/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.12/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.12/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.12/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.12/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.12/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.12/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.12/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.12/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.12/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.12/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.12/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.12/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.12/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="1243" verifyTime="0.0437664" testport="//@interimmodels.12/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!85 -> prvapiwire_req?85 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!85 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!85 -> prvmsgwire_req?85 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!85 -> comwire_req?85 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!85 -> oraclecomwire_token?85 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!85 -> comwire_res?85 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!85 -> finwritewire_req?85 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!85 -> finwritewire_res?85 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!85 -> prvmsgwire_res?85 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!85 -> prvapiwire_res?85 -> admsgwire_pub?85 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.12/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.12/@designmodel" counterExample="" visitedStates="16" verifyTime="0.0087269" testport="//@interimmodels.12/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!67 -> iotreqwire_req?67 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!67 -> prvmsgwire_req?67 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!67 -> comwire_req?67 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!67 -> oraclecomwire_token?67 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!67 -> comwire_res?67 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!67 -> finwritewire_req?67 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!67 -> finwritewire_res?67 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!67 -> prvmsgwire_res?67 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!67 -> iotreqwire_res?67" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.12/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.12/@designmodel" visitedStates="10" verifyTime="0.0083205" testport="//@interimmodels.12/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!18 -> ibankwire_req?18 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!18 -> ibankwire_res?18" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.12/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.12/@designmodel" visitedStates="1740" verifyTime="0.050831299999999996" testport="//@interimmodels.12/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!17 -> prvapiwire_req?17 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!17 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!17 -> prvmsgwire_req?17 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!17 -> comwire_req?17 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!17 -> oraclecomwire_token?17 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!17 -> comwire_res?17 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!17 -> finwritewire_req?17 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!17 -> finwritewire_res?17 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!17 -> prvmsgwire_res?17 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!17 -> prvapiwire_res?17 -> admsgwire_pub?17 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.12/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0147222" testport="//@interimmodels.12/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!54 -> finreadwire_req?54 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!54 -> rofinreadwire_uid?54 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!54 -> rofinreadwire_res?54 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!54 -> finreadwire_res?54" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclecomwire" visitedStates="1202" verifyTime="0.033781399999999996" testport="//@interimmodels.12/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!52 -> prvapiwire_req?52 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!52 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!52 -> prvmsgwire_req?52 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!52 -> comwire_req?52 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!52 -> oraclecomwire_token?52 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!52 -> comwire_res?52 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!52 -> finwritewire_req?52 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!52 -> finwritewire_res?52 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!52 -> prvmsgwire_res?52 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!52 -> prvapiwire_res?52 -> admsgwire_pub?52 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[] (CommodityOracle.supply.supplied-> &lt;> CommodityBlockchain.oraclecomwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.12/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.12/@designmodel/@host.0/@node.0" namedport="//@interimmodels.12/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.12/@designmodel/@host.0/@node.0" namedport="//@interimmodels.12/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.12/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.12/@designmodel/@host.1/@node.0" namedport="//@interimmodels.12/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.12/@designmodel/@component.2 //@interimmodels.12/@designmodel/@component.3 //@interimmodels.12/@designmodel/@component.5 //@interimmodels.12/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.12/@designmodel/@host.2/@node.0" namedport="//@interimmodels.12/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.12/@designmodel/@host.2/@node.0" namedport="//@interimmodels.12/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.12/@designmodel/@host.2/@node.0" namedport="//@interimmodels.12/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.12/@designmodel/@component.10 //@interimmodels.12/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.12/@designmodel/@host.2/@node.1" namedport="//@interimmodels.12/@designmodel/@component.10/@port.0 //@interimmodels.12/@designmodel/@component.10/@port.1 //@interimmodels.12/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.12/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.12/@designmodel/@host.3/@node.0" namedport="//@interimmodels.12/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.12/@designmodel/@host.3/@node.0" namedport="//@interimmodels.12/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.12/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.12/@designmodel/@host.4/@node.0" namedport="//@interimmodels.12/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.12/@designmodel/@host.4/@node.0" namedport="//@interimmodels.12/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.12/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.12/@designmodel/@host.4/@node.1" namedport="//@interimmodels.12/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.12/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.12/@designmodel/@host.5/@node.0" namedport="//@interimmodels.12/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.12/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.12/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.12/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.12/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.12/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.12/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="19" description="deploy service: provenanceint" nextModel="//@interimmodels.14" isStable="true" name="deploy-service">
    <designmodel name="inter19">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.13/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.13/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.13/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.13/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.13/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.13/@designmodel/@connector.1/@role.1 //@interimmodels.13/@designmodel/@connector.4/@role.0 //@interimmodels.13/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.13/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.13/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.13/@designmodel/@connector.2/@role.1 //@interimmodels.13/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.13/@designmodel/@connector.4/@role.1 //@interimmodels.13/@designmodel/@connector.6/@role.0 //@interimmodels.13/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.13/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.13/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.13/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.13/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.13/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.13/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.13/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.13/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.13/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.13/@designmodel/@connector.10/@role.0 //@interimmodels.13/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.13/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.13/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.13/@designmodel/@connector.8/@role.1 //@interimmodels.13/@designmodel/@connector.11/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" role="//@interimmodels.13/@designmodel/@connector.11/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.13/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.5/@role.0" connector="//@interimmodels.13/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.4/@role.0" connector="//@interimmodels.13/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.13/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.8/@role.0" connector="//@interimmodels.13/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.4/@role.0" connector="//@interimmodels.13/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.13/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.13/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.10/@role.0" connector="//@interimmodels.13/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.6/@role.0" connector="//@interimmodels.13/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.11/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.13/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.13/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.13/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="oraclecomwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.13/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.13/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.13/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.13/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.13/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.13/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.13/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.13/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.13/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.13/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.13/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.13/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.13/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.13/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.13/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.13/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.13/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.13/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.13/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.13/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.13/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.13/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.13/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.13/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.13/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.13/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.13/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.13/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.13/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="1243" verifyTime="0.10319479999999999" testport="//@interimmodels.13/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!72 -> prvapiwire_req?72 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!72 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!72 -> prvmsgwire_req?72 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!72 -> comwire_req?72 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!72 -> oraclecomwire_token?72 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!72 -> comwire_res?72 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!72 -> finwritewire_req?72 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!72 -> finwritewire_res?72 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!72 -> prvmsgwire_res?72 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!72 -> prvapiwire_res?72 -> admsgwire_pub?72 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.13/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.13/@designmodel" counterExample="" visitedStates="16" verifyTime="0.0112015" testport="//@interimmodels.13/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!64 -> iotreqwire_req?64 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!64 -> prvmsgwire_req?64 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!64 -> comwire_req?64 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!64 -> oraclecomwire_token?64 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!64 -> comwire_res?64 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!64 -> finwritewire_req?64 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!64 -> finwritewire_res?64 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!64 -> prvmsgwire_res?64 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!64 -> iotreqwire_res?64" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.13/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.13/@designmodel" visitedStates="10" verifyTime="0.0076609" testport="//@interimmodels.13/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!32 -> ibankwire_req?32 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!32 -> ibankwire_res?32" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.13/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.13/@designmodel" visitedStates="1740" verifyTime="0.0555315" testport="//@interimmodels.13/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!21 -> prvapiwire_req?21 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!21 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!21 -> prvmsgwire_req?21 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!21 -> comwire_req?21 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!21 -> oraclecomwire_token?21 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!21 -> comwire_res?21 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!21 -> finwritewire_req?21 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!21 -> finwritewire_res?21 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!21 -> prvmsgwire_res?21 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!21 -> prvapiwire_res?21 -> admsgwire_pub?21 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.13/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0136502" testport="//@interimmodels.13/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!56 -> finreadwire_req?56 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!56 -> rofinreadwire_uid?56 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!56 -> rofinreadwire_res?56 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!56 -> finreadwire_res?56" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclecomwire" visitedStates="1202" verifyTime="0.0455634" testport="//@interimmodels.13/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!96 -> prvapiwire_req?96 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!96 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!96 -> prvmsgwire_req?96 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!96 -> comwire_req?96 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!96 -> oraclecomwire_token?96 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!96 -> comwire_res?96 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!96 -> finwritewire_req?96 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!96 -> finwritewire_res?96 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!96 -> prvmsgwire_res?96 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!96 -> prvapiwire_res?96 -> admsgwire_pub?96 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[] (CommodityOracle.supply.supplied-> &lt;> CommodityBlockchain.oraclecomwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.13/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.13/@designmodel/@host.0/@node.0" namedport="//@interimmodels.13/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.13/@designmodel/@host.0/@node.0" namedport="//@interimmodels.13/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.13/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.13/@designmodel/@host.1/@node.0" namedport="//@interimmodels.13/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.13/@designmodel/@component.2 //@interimmodels.13/@designmodel/@component.3 //@interimmodels.13/@designmodel/@component.5 //@interimmodels.13/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.13/@designmodel/@host.2/@node.0" namedport="//@interimmodels.13/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.13/@designmodel/@host.2/@node.0" namedport="//@interimmodels.13/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.13/@designmodel/@host.2/@node.0" namedport="//@interimmodels.13/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.13/@designmodel/@component.10 //@interimmodels.13/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.13/@designmodel/@host.2/@node.1" namedport="//@interimmodels.13/@designmodel/@component.10/@port.0 //@interimmodels.13/@designmodel/@component.10/@port.1 //@interimmodels.13/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.13/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.13/@designmodel/@host.3/@node.0" namedport="//@interimmodels.13/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.13/@designmodel/@host.3/@node.0" namedport="//@interimmodels.13/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.13/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.13/@designmodel/@host.4/@node.0" namedport="//@interimmodels.13/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.13/@designmodel/@host.4/@node.0" namedport="//@interimmodels.13/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.13/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.13/@designmodel/@host.4/@node.1" namedport="//@interimmodels.13/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.13/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.13/@designmodel/@host.5/@node.0" namedport="//@interimmodels.13/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.13/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.13/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.13/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.13/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.13/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.13/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="20" description="network route for connector:admsgwire between: provenanceint admsgwirelog " nextModel="//@interimmodels.15" name="network-route">
    <designmodel name="inter20">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.14/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.14/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.14/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.14/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.14/@designmodel/@connector.1/@role.1 //@interimmodels.14/@designmodel/@connector.4/@role.0 //@interimmodels.14/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.14/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.14/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.14/@designmodel/@connector.2/@role.1 //@interimmodels.14/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.14/@designmodel/@connector.4/@role.1 //@interimmodels.14/@designmodel/@connector.6/@role.0 //@interimmodels.14/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.14/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.14/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.14/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.14/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.14/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.14/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.14/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.14/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.14/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.14/@designmodel/@connector.10/@role.0 //@interimmodels.14/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.14/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.14/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.14/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.14/@designmodel/@connector.8/@role.1 //@interimmodels.14/@designmodel/@connector.11/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" role="//@interimmodels.14/@designmodel/@connector.11/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.14/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.5/@role.0" connector="//@interimmodels.14/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.4/@role.0" connector="//@interimmodels.14/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.14/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.8/@role.0" connector="//@interimmodels.14/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.4/@role.0" connector="//@interimmodels.14/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.14/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.14/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.10/@role.0" connector="//@interimmodels.14/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.6/@role.0" connector="//@interimmodels.14/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.11/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.14/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.14/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.14/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="oraclecomwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.14/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.14/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.14/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.14/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.14/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.14/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.14/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.14/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.14/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.14/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.14/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.14/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.14/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.14/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.14/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.14/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.14/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.14/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.14/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.14/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.14/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.14/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.14/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.14/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.14/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.14/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.14/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.14/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.14/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="589" verifyTime="0.019387099999999997" testport="//@interimmodels.14/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!58 -> prvapiwire_req?58 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!58 -> admsgwire_pevt?58 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!58 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?58 -> admsgwire_bevt!58 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!58 -> prvmsgwire_req?58 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!58 -> comwire_req?58 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!58 -> oraclecomwire_token?58 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!58 -> comwire_res?58 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!58 -> finwritewire_req?58 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!58 -> finwritewire_res?58 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!58 -> prvmsgwire_res?58 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!58 -> prvapiwire_res?58" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.14/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.14/@designmodel" counterExample="" visitedStates="16" verifyTime="0.0074487" testport="//@interimmodels.14/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!22 -> iotreqwire_req?22 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!22 -> prvmsgwire_req?22 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!22 -> comwire_req?22 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!22 -> oraclecomwire_token?22 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!22 -> comwire_res?22 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!22 -> finwritewire_req?22 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!22 -> finwritewire_res?22 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!22 -> prvmsgwire_res?22 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!22 -> iotreqwire_res?22" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.14/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.14/@designmodel" visitedStates="10" verifyTime="0.011068999999999999" testport="//@interimmodels.14/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!54 -> ibankwire_req?54 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!54 -> ibankwire_res?54" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.14/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.14/@designmodel" valid="false" counterExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!58 -> prvapiwire_req?58 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!58 -> admsgwire_pevt?58 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!58 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?58 -> admsgwire_bevt!58 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!58 -> prvmsgwire_req?58 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!58 -> comwire_req?58 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!58 -> oraclecomwire_token?58 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!58 -> comwire_res?58 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!58 -> finwritewire_req?58 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!58 -> finwritewire_res?58 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!58 -> prvmsgwire_res?58 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!58 -> prvapiwire_res?58" visitedStates="611" verifyTime="0.0197727" testport="//@interimmodels.14/@designmodel/@component.3/@port.0" traceExample="********Verification Result********&#xD;&#xA;The Assertion (inter20() |= ![](ProvenanceInt_prvpub_prvevntpublish->&lt;" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.14/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.009643599999999999" testport="//@interimmodels.14/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!62 -> finreadwire_req?62 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!62 -> rofinreadwire_uid?62 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!62 -> rofinreadwire_res?62 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!62 -> finreadwire_res?62" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclecomwire" visitedStates="557" verifyTime="0.025071399999999997" testport="//@interimmodels.14/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!23 -> prvapiwire_req?23 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!23 -> admsgwire_pevt?23 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!23 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?23 -> admsgwire_bevt!23 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!23 -> prvmsgwire_req?23 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!23 -> comwire_req?23 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!23 -> oraclecomwire_token?23 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!23 -> comwire_res?23 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!23 -> finwritewire_req?23 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!23 -> finwritewire_res?23 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!23 -> prvmsgwire_res?23 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!23 -> prvapiwire_res?23" exprText="[] (CommodityOracle.supply.supplied-> &lt;> CommodityBlockchain.oraclecomwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" visitedStates="773" verifyTime="0.022335499999999998" testport="//@interimmodels.14/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!39 -> prvapiwire_req?39 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!39 -> admsgwire_pevt?39 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!39 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?39 -> admsgwire_bevt!39 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!39 -> prvmsgwire_req?39 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!39 -> comwire_req?39 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!39 -> oraclecomwire_token?39 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!39 -> comwire_res?39 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!39 -> finwritewire_req?39 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!39 -> finwritewire_res?39 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!39 -> prvmsgwire_res?39 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!39 -> prvapiwire_res?39" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.14/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.14/@designmodel/@host.0/@node.0" namedport="//@interimmodels.14/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.14/@designmodel/@host.0/@node.0" namedport="//@interimmodels.14/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.14/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.14/@designmodel/@host.1/@node.0" namedport="//@interimmodels.14/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.14/@designmodel/@component.2 //@interimmodels.14/@designmodel/@component.3 //@interimmodels.14/@designmodel/@component.5 //@interimmodels.14/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.14/@designmodel/@host.2/@node.0" namedport="//@interimmodels.14/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.14/@designmodel/@host.2/@node.0" namedport="//@interimmodels.14/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.14/@designmodel/@host.2/@node.0" namedport="//@interimmodels.14/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.14/@designmodel/@component.10 //@interimmodels.14/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.14/@designmodel/@host.2/@node.1" namedport="//@interimmodels.14/@designmodel/@component.10/@port.0 //@interimmodels.14/@designmodel/@component.10/@port.1 //@interimmodels.14/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.14/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.14/@designmodel/@host.3/@node.0" namedport="//@interimmodels.14/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.14/@designmodel/@host.3/@node.0" namedport="//@interimmodels.14/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.14/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.14/@designmodel/@host.4/@node.0" namedport="//@interimmodels.14/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.14/@designmodel/@host.4/@node.0" namedport="//@interimmodels.14/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.14/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.14/@designmodel/@host.4/@node.1" namedport="//@interimmodels.14/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.14/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.14/@designmodel/@host.5/@node.0" namedport="//@interimmodels.14/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.14/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.14/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.14/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.14/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.14/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.14/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="21" description="network route for connector:oraclefinwritewire between: financetransoracle financetransblockchain " nextModel="//@interimmodels.16" name="network-route">
    <designmodel name="inter21">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.15/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.15/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.15/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.15/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.15/@designmodel/@connector.1/@role.1 //@interimmodels.15/@designmodel/@connector.4/@role.0 //@interimmodels.15/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.15/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.15/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.15/@designmodel/@connector.2/@role.1 //@interimmodels.15/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.15/@designmodel/@connector.4/@role.1 //@interimmodels.15/@designmodel/@connector.6/@role.0 //@interimmodels.15/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.15/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.15/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.15/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.15/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.15/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.15/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.15/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.15/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.15/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.15/@designmodel/@connector.10/@role.0 //@interimmodels.15/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.15/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.15/@designmodel/@connector.12/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.15/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.15/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.15/@designmodel/@connector.8/@role.1 //@interimmodels.15/@designmodel/@connector.11/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.15/@designmodel/@connector.12/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" role="//@interimmodels.15/@designmodel/@connector.11/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.15/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.5/@role.0" connector="//@interimmodels.15/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.4/@role.0" connector="//@interimmodels.15/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.15/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.8/@role.0" connector="//@interimmodels.15/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.4/@role.0" connector="//@interimmodels.15/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.15/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.15/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.10/@role.0" connector="//@interimmodels.15/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.6/@role.0" connector="//@interimmodels.15/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.11/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.15/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.15/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.15/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="oraclecomwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.15/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.15/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.15/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.15/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.15/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.15/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.15/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.15/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.15/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.15/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.15/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.15/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.15/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.15/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.15/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.15/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.15/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.15/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.15/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.15/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.15/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.15/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.15/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.15/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.15/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.15/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.15/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.15/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.15/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.15/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.15/@designmodel" valid="false" counterExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!42 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!92 -> prvapiwire_req?92 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!92 -> admsgwire_pevt?92 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!92 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?92 -> admsgwire_bevt!92 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!92 -> prvmsgwire_req?92 -> BCIntegrator_prvmsgwire_responder_invoke -> oraclefinwritewire_token?42 -> (oraclefinwritewire_token!42 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?42)*" visitedStates="24122" verifyTime="0.7348304999999999" testport="//@interimmodels.15/@designmodel/@component.3/@port.0" traceExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!42 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!92 -> prvapiwire_req?92 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!92 -> admsgwire_pevt?92 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!92 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?92 -> admsgwire_bevt!92 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!92 -> prvmsgwire_req?92 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!92 -> comwire_req?92 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!92 -> oraclecomwire_token?92 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!92 -> comwire_res?92 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!92 -> finwritewire_req?92 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!92 -> finwritewire_res?92 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!92 -> prvmsgwire_res?92 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!92 -> prvapiwire_res?92 -> oraclefinwritewire_token?42 -> (oraclefinwritewire_token!42 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?42)*" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.15/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.15/@designmodel" valid="false" counterExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!39 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!23 -> iotreqwire_req?23 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!23 -> prvmsgwire_req?23 -> BCIntegrator_prvmsgwire_responder_invoke -> oraclefinwritewire_token?39 -> (oraclefinwritewire_token!39 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?39)*" visitedStates="532" verifyTime="0.033779199999999995" testport="//@interimmodels.15/@designmodel/@component.7/@port.0" traceExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!39 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!23 -> iotreqwire_req?23 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!23 -> prvmsgwire_req?23 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!23 -> comwire_req?23 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!23 -> oraclecomwire_token?23 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!23 -> comwire_res?23 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!23 -> finwritewire_req?23 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!23 -> finwritewire_res?23 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!23 -> prvmsgwire_res?23 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!23 -> iotreqwire_res?23 -> oraclefinwritewire_token?39 -> (oraclefinwritewire_token!39 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?39)*" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.15/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.15/@designmodel" visitedStates="627" verifyTime="0.0378798" testport="//@interimmodels.15/@designmodel/@component.8/@port.0" traceExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!19 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!46 -> ibankwire_req?46 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!46 -> ibankwire_res?46 -> oraclefinwritewire_token?19 -> (oraclefinwritewire_token!19 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?19)*" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.15/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.15/@designmodel" valid="false" counterExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!57 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!71 -> prvapiwire_req?71 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!71 -> admsgwire_pevt?71 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!71 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?71 -> admsgwire_bevt!71 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!71 -> prvmsgwire_req?71 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!71 -> comwire_req?71 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!71 -> oraclecomwire_token?71 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!71 -> comwire_res?71 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!71 -> finwritewire_req?71 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!71 -> finwritewire_res?71 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!71 -> prvmsgwire_res?71 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!71 -> prvapiwire_res?71 -> oraclefinwritewire_token?57 -> (oraclefinwritewire_token!57 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?57)*" visitedStates="24522" verifyTime="0.7637239" testport="//@interimmodels.15/@designmodel/@component.3/@port.0" traceExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!57 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!71 -> prvapiwire_req?71 -> ProvenanceInt_prvapiwire_responder_invoke -> oraclefinwritewire_token?57 -> (oraclefinwritewire_token!57 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?57)*" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.15/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" valid="false" counterExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!30 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!53 -> finreadwire_req?53 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!53 -> rofinreadwire_uid?53 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!53 -> rofinreadwire_res?53 -> oraclefinwritewire_token?30 -> (oraclefinwritewire_token!30 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?30)*" visitedStates="760" verifyTime="0.0405412" testport="//@interimmodels.15/@designmodel/@component.6/@port.0" traceExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!30 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!53 -> finreadwire_req?53 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!53 -> rofinreadwire_uid?53 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!53 -> rofinreadwire_res?53 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!53 -> finreadwire_res?53 -> oraclefinwritewire_token?30 -> (oraclefinwritewire_token!30 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?30)*" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclecomwire" visitedStates="24169" verifyTime="0.6853325" testport="//@interimmodels.15/@designmodel/@component.3/@port.0" traceExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!76 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!73 -> prvapiwire_req?73 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!73 -> admsgwire_pevt?73 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!73 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?73 -> admsgwire_bevt!73 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!73 -> comwire_req?73 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!73 -> oraclecomwire_token?73 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!73 -> prvapiwire_res?73 -> oraclefinwritewire_token?76 -> (oraclefinwritewire_token!76 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?76)*" exprText="[] (CommodityOracle.supply.supplied-> &lt;> CommodityBlockchain.oraclecomwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" valid="false" counterExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!10 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!63 -> prvapiwire_req?63 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!63 -> admsgwire_pevt?63 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!63 -> admsgwire_sevt?63 -> admsgwire_bevt!63 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!63 -> prvmsgwire_req?63 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!63 -> comwire_req?63 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!63 -> oraclecomwire_token?63 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!63 -> comwire_res?63 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!63 -> finwritewire_req?63 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!63 -> finwritewire_res?63 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!63 -> prvmsgwire_res?63 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!63 -> prvapiwire_res?63 -> oraclefinwritewire_token?10 -> (oraclefinwritewire_token!10 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?10)*" visitedStates="24519" verifyTime="0.723849" testport="//@interimmodels.15/@designmodel/@component.3/@port.0" traceExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!10 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!63 -> prvapiwire_req?63 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!63 -> admsgwire_pevt?63 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!63 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?63 -> admsgwire_bevt!63 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!63 -> prvmsgwire_req?63 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!63 -> comwire_req?63 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!63 -> oraclecomwire_token?63 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!63 -> comwire_res?63 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!63 -> finwritewire_req?63 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!63 -> finwritewire_res?63 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!63 -> prvmsgwire_res?63 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!63 -> prvapiwire_res?63 -> oraclefinwritewire_token?10 -> (oraclefinwritewire_token!10 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token?10)*" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="24169" verifyTime="0.7600697" testport="//@interimmodels.15/@designmodel/@component.3/@port.0" traceExample="init -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!55 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!61 -> prvapiwire_req?61 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!61 -> admsgwire_pevt?61 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!61 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?61 -> admsgwire_bevt!61 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!61 -> prvmsgwire_req?61 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!61 -> comwire_req?61 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!61 -> oraclecomwire_token?61 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!61 -> comwire_res?61 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!61 -> finwritewire_req?61 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!61 -> finwritewire_res?61 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!61 -> prvmsgwire_res?61 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!61 -> prvapiwire_res?61 -> oraclefinwritewire_token?55 -> (FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> oraclefinwritewire_token!55 -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token?55 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored)*" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.15/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.15/@designmodel/@host.0/@node.0" namedport="//@interimmodels.15/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.15/@designmodel/@host.0/@node.0" namedport="//@interimmodels.15/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.15/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.15/@designmodel/@host.1/@node.0" namedport="//@interimmodels.15/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.15/@designmodel/@component.2 //@interimmodels.15/@designmodel/@component.3 //@interimmodels.15/@designmodel/@component.5 //@interimmodels.15/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.15/@designmodel/@host.2/@node.0" namedport="//@interimmodels.15/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.15/@designmodel/@host.2/@node.0" namedport="//@interimmodels.15/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.15/@designmodel/@host.2/@node.0" namedport="//@interimmodels.15/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.15/@designmodel/@component.10 //@interimmodels.15/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.15/@designmodel/@host.2/@node.1" namedport="//@interimmodels.15/@designmodel/@component.10/@port.0 //@interimmodels.15/@designmodel/@component.10/@port.1 //@interimmodels.15/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.15/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.15/@designmodel/@host.3/@node.0" namedport="//@interimmodels.15/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.15/@designmodel/@host.3/@node.0" namedport="//@interimmodels.15/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.15/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.15/@designmodel/@host.4/@node.0" namedport="//@interimmodels.15/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.15/@designmodel/@host.4/@node.0" namedport="//@interimmodels.15/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.15/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.15/@designmodel/@host.4/@node.1" namedport="//@interimmodels.15/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.15/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.15/@designmodel/@host.5/@node.0" namedport="//@interimmodels.15/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.15/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.15/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.15/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.15/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.15/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.15/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="22" description="network route for connector:finwritewire between: bcintegrator financetransoracle " nextModel="//@interimmodels.17" name="network-route">
    <designmodel name="inter22">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.16/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.16/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.16/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.16/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.16/@designmodel/@connector.1/@role.1 //@interimmodels.16/@designmodel/@connector.4/@role.0 //@interimmodels.16/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.16/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.16/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.16/@designmodel/@connector.2/@role.1 //@interimmodels.16/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.16/@designmodel/@connector.4/@role.1 //@interimmodels.16/@designmodel/@connector.8/@role.0 //@interimmodels.16/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.16/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.16/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.16/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.16/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.16/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.16/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.16/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.16/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.16/@designmodel/@connector.10/@role.0 //@interimmodels.16/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.16/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.16/@designmodel/@connector.12/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.16/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.16/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.16/@designmodel/@connector.8/@role.1 //@interimmodels.16/@designmodel/@connector.11/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.16/@designmodel/@connector.12/@role.1 //@interimmodels.16/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" role="//@interimmodels.16/@designmodel/@connector.11/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.16/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.5/@role.0" connector="//@interimmodels.16/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.4/@role.0" connector="//@interimmodels.16/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.16/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.8/@role.0" connector="//@interimmodels.16/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.4/@role.0" connector="//@interimmodels.16/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.16/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.12/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.10/@role.0" connector="//@interimmodels.16/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.6/@role.0" connector="//@interimmodels.16/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.11/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.16/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.16/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.16/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="oraclecomwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.16/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.16/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.16/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.16/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.16/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.16/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.16/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.16/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.16/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.16/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.16/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.16/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.16/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.16/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.16/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.16/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.16/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.16/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.16/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.16/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.16/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.16/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.16/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.16/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.16/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.16/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.16/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.16/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.16/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.16/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.16/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="2156" verifyTime="0.1311002" testport="//@interimmodels.16/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!62 -> prvapiwire_req?62 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!62 -> admsgwire_pevt?62 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!62 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?62 -> admsgwire_bevt!62 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!62 -> prvmsgwire_req?62 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!62 -> comwire_req?62 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!62 -> oraclecomwire_token?62 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!62 -> comwire_res?62 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!62 -> finwritewire_req?62 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!62 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!62 -> oraclefinwritewire_token?62 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?62 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!62 -> prvmsgwire_res?62 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!62 -> prvapiwire_res?62" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.16/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.16/@designmodel" counterExample="" visitedStates="16" verifyTime="0.0150972" testport="//@interimmodels.16/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!82 -> iotreqwire_req?82 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!82 -> prvmsgwire_req?82 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!82 -> comwire_req?82 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!82 -> oraclecomwire_token?82 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!82 -> comwire_res?82 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!82 -> finwritewire_req?82 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!82 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!82 -> oraclefinwritewire_token?82 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?82 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!82 -> prvmsgwire_res?82 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!82 -> iotreqwire_res?82" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.16/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.16/@designmodel" visitedStates="10" verifyTime="0.0201484" testport="//@interimmodels.16/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!29 -> ibankwire_req?29 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!29 -> ibankwire_res?29" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.16/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.16/@designmodel" valid="false" counterExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!56 -> prvapiwire_req?56 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!56 -> admsgwire_pevt?56 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!56 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?56 -> admsgwire_bevt!56 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!56 -> prvmsgwire_req?56 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!56 -> comwire_req?56 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!56 -> oraclecomwire_token?56 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!56 -> comwire_res?56 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!56 -> finwritewire_req?56 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!56 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!56 -> oraclefinwritewire_token?56 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?56 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!56 -> prvmsgwire_res?56 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!56 -> prvapiwire_res?56" visitedStates="2189" verifyTime="0.0671917" testport="//@interimmodels.16/@designmodel/@component.3/@port.0" traceExample="********Verification Result********&#xD;&#xA;The Assertion (inter22() |= ![](ProvenanceInt_prvpub_prvevntpublish->&lt;" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.16/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0129147" testport="//@interimmodels.16/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!35 -> finreadwire_req?35 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!35 -> rofinreadwire_uid?35 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!35 -> rofinreadwire_res?35 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!35 -> finreadwire_res?35" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclecomwire" visitedStates="2124" verifyTime="0.061640499999999994" testport="//@interimmodels.16/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!69 -> prvapiwire_req?69 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!69 -> admsgwire_pevt?69 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!69 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?69 -> admsgwire_bevt!69 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!69 -> prvmsgwire_req?69 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!69 -> comwire_req?69 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!69 -> oraclecomwire_token?69 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!69 -> comwire_res?69 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!69 -> finwritewire_req?69 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!69 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!69 -> oraclefinwritewire_token?69 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?69 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!69 -> prvmsgwire_res?69 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!69 -> prvapiwire_res?69" exprText="[] (CommodityOracle.supply.supplied-> &lt;> CommodityBlockchain.oraclecomwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" visitedStates="3001" verifyTime="0.0888461" testport="//@interimmodels.16/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!84 -> prvapiwire_req?84 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!84 -> admsgwire_pevt?84 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!84 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?84 -> admsgwire_bevt!84 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!84 -> prvmsgwire_req?84 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!84 -> comwire_req?84 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!84 -> oraclecomwire_token?84 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!84 -> comwire_res?84 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!84 -> finwritewire_req?84 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!84 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!84 -> oraclefinwritewire_token?84 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?84 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!84 -> prvmsgwire_res?84 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!84 -> prvapiwire_res?84" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="2124" verifyTime="0.0618255" testport="//@interimmodels.16/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!61 -> prvapiwire_req?61 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!61 -> admsgwire_pevt?61 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!61 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?61 -> admsgwire_bevt!61 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!61 -> prvmsgwire_req?61 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!61 -> comwire_req?61 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!61 -> oraclecomwire_token?61 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!61 -> comwire_res?61 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!61 -> finwritewire_req?61 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!61 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!61 -> oraclefinwritewire_token?61 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?61 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!61 -> prvmsgwire_res?61 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!61 -> prvapiwire_res?61" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.16/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.16/@designmodel/@host.0/@node.0" namedport="//@interimmodels.16/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.16/@designmodel/@host.0/@node.0" namedport="//@interimmodels.16/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.16/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.16/@designmodel/@host.1/@node.0" namedport="//@interimmodels.16/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.16/@designmodel/@component.2 //@interimmodels.16/@designmodel/@component.3 //@interimmodels.16/@designmodel/@component.5 //@interimmodels.16/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.16/@designmodel/@host.2/@node.0" namedport="//@interimmodels.16/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.16/@designmodel/@host.2/@node.0" namedport="//@interimmodels.16/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.16/@designmodel/@host.2/@node.0" namedport="//@interimmodels.16/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.16/@designmodel/@component.10 //@interimmodels.16/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.16/@designmodel/@host.2/@node.1" namedport="//@interimmodels.16/@designmodel/@component.10/@port.0 //@interimmodels.16/@designmodel/@component.10/@port.1 //@interimmodels.16/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.16/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.16/@designmodel/@host.3/@node.0" namedport="//@interimmodels.16/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.16/@designmodel/@host.3/@node.0" namedport="//@interimmodels.16/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.16/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.16/@designmodel/@host.4/@node.0" namedport="//@interimmodels.16/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.16/@designmodel/@host.4/@node.0" namedport="//@interimmodels.16/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.16/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.16/@designmodel/@host.4/@node.1" namedport="//@interimmodels.16/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.16/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.16/@designmodel/@host.5/@node.0" namedport="//@interimmodels.16/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.16/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.16/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.16/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.16/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.16/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.16/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="23" description="network route for connector:roctrlwire between: commodity commodityblockchain " nextModel="//@interimmodels.18" name="network-route">
    <designmodel name="inter23">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.17/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.17/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.17/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.17/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.17/@designmodel/@connector.1/@role.1 //@interimmodels.17/@designmodel/@connector.4/@role.0 //@interimmodels.17/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.17/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.17/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.17/@designmodel/@connector.2/@role.1 //@interimmodels.17/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.17/@designmodel/@connector.4/@role.1 //@interimmodels.17/@designmodel/@connector.8/@role.0 //@interimmodels.17/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.17/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.17/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.17/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.17/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.17/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.17/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.17/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.17/@designmodel/@connector.9/@role.1 //@interimmodels.17/@designmodel/@connector.13/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.17/@designmodel/@connector.10/@role.0 //@interimmodels.17/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.17/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.17/@designmodel/@connector.12/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.17/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.17/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.17/@designmodel/@connector.8/@role.1 //@interimmodels.17/@designmodel/@connector.11/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.17/@designmodel/@connector.12/@role.1 //@interimmodels.17/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" role="//@interimmodels.17/@designmodel/@connector.11/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.17/@designmodel/@connector.13/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.17/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.5/@role.0" connector="//@interimmodels.17/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.4/@role.0" connector="//@interimmodels.17/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.17/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.8/@role.0" connector="//@interimmodels.17/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.4/@role.0" connector="//@interimmodels.17/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.17/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.12/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.10/@role.0" connector="//@interimmodels.17/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.6/@role.0" connector="//@interimmodels.17/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.11/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.17/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.17/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.17/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="oraclecomwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.17/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.17/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.17/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.17/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.17/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.17/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.17/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.17/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.17/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.17/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.17/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.17/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.17/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.17/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.17/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.17/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.17/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.17/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.17/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.17/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.17/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.17/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.17/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.17/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.17/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.17/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.17/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.17/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.17/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.17/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.17/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.17/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.17/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="28553" verifyTime="0.8988929999999999" testport="//@interimmodels.17/@designmodel/@component.3/@port.0" traceExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!83 -> roctrlwire_uid?83 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!83 -> roctrlwire_res?83 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!46 -> admsgwire_pevt?46 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!46 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?46 -> admsgwire_bevt!46 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!46 -> comwire_req?46 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!46 -> oraclecomwire_token?46 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!46 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!46 -> oraclefinwritewire_token?46 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?46 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.17/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.17/@designmodel" counterExample="" visitedStates="295" verifyTime="0.029956899999999998" testport="//@interimmodels.17/@designmodel/@component.7/@port.0" traceExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!10 -> roctrlwire_uid?10 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!10 -> roctrlwire_res?10 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!80 -> iotreqwire_req?80 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!80 -> prvmsgwire_req?80 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!80 -> comwire_req?80 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!80 -> oraclecomwire_token?80 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!80 -> comwire_res?80 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!80 -> finwritewire_req?80 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!80 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!80 -> oraclefinwritewire_token?80 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?80 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!80 -> prvmsgwire_res?80 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!80 -> iotreqwire_res?80" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.17/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.17/@designmodel" visitedStates="181" verifyTime="0.0282472" testport="//@interimmodels.17/@designmodel/@component.8/@port.0" traceExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!63 -> roctrlwire_uid?63 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!63 -> roctrlwire_res?63 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!46 -> ibankwire_req?46 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!46 -> ibankwire_res?46" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.17/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.17/@designmodel" valid="false" counterExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!50 -> roctrlwire_uid?50 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!50 -> roctrlwire_res?50 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!71 -> prvapiwire_req?71 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!71 -> admsgwire_pevt?71 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!71 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?71 -> admsgwire_bevt!71 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!71 -> prvmsgwire_req?71 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!71 -> comwire_req?71 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!71 -> oraclecomwire_token?71 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!71 -> comwire_res?71 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!71 -> finwritewire_req?71 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!71 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!71 -> oraclefinwritewire_token?71 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?71 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!71 -> prvmsgwire_res?71 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!71 -> prvapiwire_res?71" visitedStates="2207" verifyTime="0.0783755" testport="//@interimmodels.17/@designmodel/@component.3/@port.0" traceExample="********Verification Result********&#xD;&#xA;The Assertion (inter23() |= ![](ProvenanceInt_prvpub_prvevntpublish->&lt;" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.17/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="409" verifyTime="0.031931799999999996" testport="//@interimmodels.17/@designmodel/@component.6/@port.0" traceExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!91 -> roctrlwire_uid?91 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!91 -> roctrlwire_res?91 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!73 -> finreadwire_req?73 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!73 -> rofinreadwire_uid?73 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!73 -> rofinreadwire_res?73 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!73 -> finreadwire_res?73" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclecomwire" visitedStates="28017" verifyTime="0.7959294" testport="//@interimmodels.17/@designmodel/@component.3/@port.0" traceExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!11 -> roctrlwire_uid?11 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!11 -> roctrlwire_res?11 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!78 -> prvapiwire_req?78 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!78 -> admsgwire_pevt?78 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!78 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?78 -> admsgwire_bevt!78 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!78 -> prvmsgwire_req?78 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!78 -> comwire_req?78 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!78 -> oraclecomwire_token?78 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!78 -> comwire_res?78 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!78 -> finwritewire_req?78 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!78 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!78 -> oraclefinwritewire_token?78 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?78 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!78 -> prvmsgwire_res?78 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!78 -> prvapiwire_res?78" exprText="[] (CommodityOracle.supply.supplied-> &lt;> CommodityBlockchain.oraclecomwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" visitedStates="40180" verifyTime="1.1246469" testport="//@interimmodels.17/@designmodel/@component.3/@port.0" traceExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!78 -> roctrlwire_uid?78 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!78 -> roctrlwire_res?78 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!19 -> prvapiwire_req?19 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!19 -> admsgwire_pevt?19 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!19 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?19 -> admsgwire_bevt!19 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!19 -> prvmsgwire_req?19 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!19 -> comwire_req?19 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!19 -> oraclecomwire_token?19 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!19 -> comwire_res?19 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!19 -> finwritewire_req?19 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!19 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!19 -> oraclefinwritewire_token?19 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?19 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!19 -> prvmsgwire_res?19 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!19 -> prvapiwire_res?19" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="28017" verifyTime="0.8321286" testport="//@interimmodels.17/@designmodel/@component.3/@port.0" traceExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!92 -> roctrlwire_uid?92 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!92 -> roctrlwire_res?92 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!45 -> prvapiwire_req?45 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!45 -> admsgwire_pevt?45 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!45 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?45 -> admsgwire_bevt!45 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!45 -> prvmsgwire_req?45 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!45 -> comwire_req?45 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!45 -> oraclecomwire_token?45 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!45 -> comwire_res?45 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!45 -> finwritewire_req?45 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!45 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!45 -> oraclefinwritewire_token?45 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?45 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!45 -> prvmsgwire_res?45 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!45 -> prvapiwire_res?45" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="88" verifyTime="0.0277415" testport="//@interimmodels.17/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_reader_process -> ctrlwire_req!23 -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!93 -> roctrlwire_uid?93 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!93 -> roctrlwire_res?93 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.17/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.17/@designmodel/@host.0/@node.0" namedport="//@interimmodels.17/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.17/@designmodel/@host.0/@node.0" namedport="//@interimmodels.17/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.17/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.17/@designmodel/@host.1/@node.0" namedport="//@interimmodels.17/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.17/@designmodel/@component.2 //@interimmodels.17/@designmodel/@component.3 //@interimmodels.17/@designmodel/@component.5 //@interimmodels.17/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.17/@designmodel/@host.2/@node.0" namedport="//@interimmodels.17/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.17/@designmodel/@host.2/@node.0" namedport="//@interimmodels.17/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.17/@designmodel/@host.2/@node.0" namedport="//@interimmodels.17/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.17/@designmodel/@component.10 //@interimmodels.17/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.17/@designmodel/@host.2/@node.1" namedport="//@interimmodels.17/@designmodel/@component.10/@port.0 //@interimmodels.17/@designmodel/@component.10/@port.1 //@interimmodels.17/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.17/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.17/@designmodel/@host.3/@node.0" namedport="//@interimmodels.17/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.17/@designmodel/@host.3/@node.0" namedport="//@interimmodels.17/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.17/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.17/@designmodel/@host.4/@node.0" namedport="//@interimmodels.17/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.17/@designmodel/@host.4/@node.0" namedport="//@interimmodels.17/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.17/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.17/@designmodel/@host.4/@node.1" namedport="//@interimmodels.17/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.17/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.17/@designmodel/@host.5/@node.0" namedport="//@interimmodels.17/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.17/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.17/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.17/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.17/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.17/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.17/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="24" description="network route for connector:ctrlwire between: controller commodity " nextModel="//@interimmodels.19" name="network-route">
    <designmodel name="inter24">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.18/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.18/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.18/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.18/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.18/@designmodel/@connector.1/@role.1 //@interimmodels.18/@designmodel/@connector.4/@role.0 //@interimmodels.18/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.18/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.18/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.18/@designmodel/@connector.2/@role.1 //@interimmodels.18/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.18/@designmodel/@connector.4/@role.1 //@interimmodels.18/@designmodel/@connector.8/@role.0 //@interimmodels.18/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.18/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.18/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.18/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.18/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.18/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.18/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.18/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.18/@designmodel/@connector.13/@role.0 //@interimmodels.18/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.18/@designmodel/@connector.10/@role.0 //@interimmodels.18/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.18/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.18/@designmodel/@connector.12/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.18/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.18/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.18/@designmodel/@connector.8/@role.1 //@interimmodels.18/@designmodel/@connector.11/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.18/@designmodel/@connector.12/@role.1 //@interimmodels.18/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" role="//@interimmodels.18/@designmodel/@connector.11/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.18/@designmodel/@connector.13/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.18/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.5/@role.0" connector="//@interimmodels.18/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.4/@role.0" connector="//@interimmodels.18/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.18/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.8/@role.0" connector="//@interimmodels.18/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.4/@role.0" connector="//@interimmodels.18/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.18/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.12/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.10/@role.0" connector="//@interimmodels.18/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.6/@role.0" connector="//@interimmodels.18/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.11/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.9"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.13/@role.0" connector="//@interimmodels.18/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.18/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.18/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="oraclecomwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.18/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.18/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.18/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.18/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.18/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.18/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.18/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.18/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.18/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.18/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.18/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.18/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.18/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.18/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.18/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.18/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.18/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.18/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.18/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.18/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.18/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.18/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.18/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.18/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.18/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.18/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.18/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.18/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.18/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.18/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.18/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.18/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.18/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="2156" verifyTime="0.0756361" testport="//@interimmodels.18/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!12 -> prvapiwire_req?12 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!12 -> admsgwire_pevt?12 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!12 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?12 -> admsgwire_bevt!12 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!12 -> prvmsgwire_req?12 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!12 -> comwire_req?12 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!12 -> oraclecomwire_token?12 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!12 -> comwire_res?12 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!12 -> finwritewire_req?12 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!12 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!12 -> oraclefinwritewire_token?12 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?12 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!12 -> prvmsgwire_res?12 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!12 -> prvapiwire_res?12" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.18/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.18/@designmodel" counterExample="" visitedStates="16" verifyTime="0.0231985" testport="//@interimmodels.18/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!34 -> iotreqwire_req?34 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!34 -> prvmsgwire_req?34 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!34 -> comwire_req?34 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!34 -> oraclecomwire_token?34 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!34 -> comwire_res?34 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!34 -> finwritewire_req?34 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!34 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!34 -> oraclefinwritewire_token?34 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?34 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!34 -> prvmsgwire_res?34 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!34 -> iotreqwire_res?34" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.18/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.18/@designmodel" visitedStates="10" verifyTime="0.023003199999999998" testport="//@interimmodels.18/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!94 -> ibankwire_req?94 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!94 -> ibankwire_res?94" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.18/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.18/@designmodel" valid="false" counterExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!32 -> prvapiwire_req?32 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!32 -> admsgwire_pevt?32 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!32 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?32 -> admsgwire_bevt!32 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!32 -> prvmsgwire_req?32 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!32 -> comwire_req?32 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!32 -> oraclecomwire_token?32 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!32 -> comwire_res?32 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!32 -> finwritewire_req?32 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!32 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!32 -> oraclefinwritewire_token?32 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?32 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!32 -> prvmsgwire_res?32 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!32 -> prvapiwire_res?32" visitedStates="2189" verifyTime="0.0818786" testport="//@interimmodels.18/@designmodel/@component.3/@port.0" traceExample="********Verification Result********&#xD;&#xA;The Assertion (inter24() |= ![](ProvenanceInt_prvpub_prvevntpublish->&lt;" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.18/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0649664" testport="//@interimmodels.18/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!98 -> finreadwire_req?98 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!98 -> rofinreadwire_uid?98 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!98 -> rofinreadwire_res?98 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!98 -> finreadwire_res?98" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclecomwire" visitedStates="2124" verifyTime="0.0955007" testport="//@interimmodels.18/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!82 -> prvapiwire_req?82 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!82 -> admsgwire_pevt?82 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!82 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?82 -> admsgwire_bevt!82 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!82 -> prvmsgwire_req?82 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!82 -> comwire_req?82 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!82 -> oraclecomwire_token?82 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!82 -> comwire_res?82 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!82 -> finwritewire_req?82 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!82 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!82 -> oraclefinwritewire_token?82 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?82 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!82 -> prvmsgwire_res?82 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!82 -> prvapiwire_res?82" exprText="[] (CommodityOracle.supply.supplied-> &lt;> CommodityBlockchain.oraclecomwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" visitedStates="3001" verifyTime="0.108331" testport="//@interimmodels.18/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!54 -> prvapiwire_req?54 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!54 -> admsgwire_pevt?54 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!54 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?54 -> admsgwire_bevt!54 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!54 -> prvmsgwire_req?54 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!54 -> comwire_req?54 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!54 -> oraclecomwire_token?54 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!54 -> comwire_res?54 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!54 -> finwritewire_req?54 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!54 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!54 -> oraclefinwritewire_token?54 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?54 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!54 -> prvmsgwire_res?54 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!54 -> prvapiwire_res?54" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="2124" verifyTime="0.0781598" testport="//@interimmodels.18/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!18 -> prvapiwire_req?18 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!18 -> admsgwire_pevt?18 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!18 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?18 -> admsgwire_bevt!18 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!18 -> comwire_req?18 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!18 -> oraclecomwire_token?18 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!18 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!18 -> oraclefinwritewire_token?18 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?18 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!18 -> prvapiwire_res?18" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="22" verifyTime="0.0235142" testport="//@interimmodels.18/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_requester_process -> ctrlwire_req!82 -> ctrlwire_req?82 -> Commodity_ctrlwire_responder_invoke -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!82 -> roctrlwire_uid?82 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!82 -> roctrlwire_res?82 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> Commodity_roctrlwire_extquerier_Skip -> Commodity_ctrlwire_responder_process -> ctrlwire_res!82 -> ctrlwire_res?82" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.18/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.18/@designmodel/@host.0/@node.0" namedport="//@interimmodels.18/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.18/@designmodel/@host.0/@node.0" namedport="//@interimmodels.18/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.18/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.18/@designmodel/@host.1/@node.0" namedport="//@interimmodels.18/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.18/@designmodel/@component.2 //@interimmodels.18/@designmodel/@component.3 //@interimmodels.18/@designmodel/@component.5 //@interimmodels.18/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.18/@designmodel/@host.2/@node.0" namedport="//@interimmodels.18/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.18/@designmodel/@host.2/@node.0" namedport="//@interimmodels.18/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.18/@designmodel/@host.2/@node.0" namedport="//@interimmodels.18/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.18/@designmodel/@component.10 //@interimmodels.18/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.18/@designmodel/@host.2/@node.1" namedport="//@interimmodels.18/@designmodel/@component.10/@port.0 //@interimmodels.18/@designmodel/@component.10/@port.1 //@interimmodels.18/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.18/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.18/@designmodel/@host.3/@node.0" namedport="//@interimmodels.18/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.18/@designmodel/@host.3/@node.0" namedport="//@interimmodels.18/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.18/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.18/@designmodel/@host.4/@node.0" namedport="//@interimmodels.18/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.18/@designmodel/@host.4/@node.0" namedport="//@interimmodels.18/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.18/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.18/@designmodel/@host.4/@node.1" namedport="//@interimmodels.18/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.18/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.18/@designmodel/@host.5/@node.0" namedport="//@interimmodels.18/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.18/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.18/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.18/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.18/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.18/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.18/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="25" description="network route for connector:admsgwire between: provenanceint adwebapp " isStable="true" name="network-route">
    <designmodel name="inter25">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.19/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.19/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.19/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.19/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.19/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.19/@designmodel/@connector.1/@role.1 //@interimmodels.19/@designmodel/@connector.4/@role.0 //@interimmodels.19/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.19/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.19/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.19/@designmodel/@connector.2/@role.1 //@interimmodels.19/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.19/@designmodel/@connector.4/@role.1 //@interimmodels.19/@designmodel/@connector.8/@role.0 //@interimmodels.19/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.19/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.19/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.19/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.19/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.19/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.19/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.19/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.19/@designmodel/@connector.13/@role.0 //@interimmodels.19/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.19/@designmodel/@connector.10/@role.0 //@interimmodels.19/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.19/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.19/@designmodel/@connector.12/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.19/@designmodel/@connector.10/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.19/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.19/@designmodel/@connector.8/@role.1 //@interimmodels.19/@designmodel/@connector.11/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.19/@designmodel/@connector.12/@role.1 //@interimmodels.19/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" role="//@interimmodels.19/@designmodel/@connector.11/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.19/@designmodel/@connector.13/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.19/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.5/@role.0" connector="//@interimmodels.19/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.4/@role.0" connector="//@interimmodels.19/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.19/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.8/@role.0" connector="//@interimmodels.19/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.4/@role.0" connector="//@interimmodels.19/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.19/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.12/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.10/@role.0" connector="//@interimmodels.19/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.6/@role.0" connector="//@interimmodels.19/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.11/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.9"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.13/@role.0" connector="//@interimmodels.19/@designmodel/@connector.9"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.19/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.19/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="oraclecomwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.19/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.19/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.19/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.19/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.19/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.19/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.19/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.19/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.19/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.19/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.19/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.19/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.19/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.19/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.19/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.19/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.19/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.19/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.19/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.19/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.19/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.19/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.19/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.19/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.19/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.19/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.19/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.19/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.19/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.19/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.19/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.19/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.19/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="10784" verifyTime="0.3907294" testport="//@interimmodels.19/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!99 -> prvapiwire_req?99 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!99 -> admsgwire_pevt?99 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!99 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?99 -> admsgwire_bevt!99 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!99 -> prvmsgwire_req?99 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!99 -> comwire_req?99 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!99 -> oraclecomwire_token?99 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!99 -> comwire_res?99 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!99 -> finwritewire_req?99 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!99 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!99 -> oraclefinwritewire_token?99 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?99 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!99 -> prvmsgwire_res?99 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!99 -> prvapiwire_res?99 -> admsgwire_bevt?99 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.19/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.19/@designmodel" counterExample="" visitedStates="16" verifyTime="0.0443801" testport="//@interimmodels.19/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!61 -> iotreqwire_req?61 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!61 -> prvmsgwire_req?61 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!61 -> comwire_req?61 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!61 -> oraclecomwire_token?61 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!61 -> comwire_res?61 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!61 -> finwritewire_req?61 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!61 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!61 -> oraclefinwritewire_token?61 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?61 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!61 -> prvmsgwire_res?61 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!61 -> iotreqwire_res?61" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.19/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.19/@designmodel" visitedStates="10" verifyTime="0.042728999999999996" testport="//@interimmodels.19/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!25 -> ibankwire_req?25 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!25 -> ibankwire_res?25" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.19/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.19/@designmodel" visitedStates="15614" verifyTime="0.5426662999999999" testport="//@interimmodels.19/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!63 -> prvapiwire_req?63 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!63 -> admsgwire_pevt?63 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!63 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?63 -> admsgwire_bevt!63 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!63 -> prvmsgwire_req?63 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!63 -> comwire_req?63 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!63 -> oraclecomwire_token?63 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!63 -> comwire_res?63 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!63 -> finwritewire_req?63 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!63 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!63 -> oraclefinwritewire_token?63 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?63 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!63 -> prvmsgwire_res?63 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!63 -> prvapiwire_res?63 -> admsgwire_bevt?63 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.19/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.050116999999999995" testport="//@interimmodels.19/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!43 -> finreadwire_req?43 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!43 -> rofinreadwire_uid?43 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!43 -> rofinreadwire_res?43 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!43 -> finreadwire_res?43" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclecomwire" visitedStates="10653" verifyTime="0.3479464" testport="//@interimmodels.19/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!18 -> prvapiwire_req?18 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!18 -> admsgwire_pevt?18 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!18 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?18 -> admsgwire_bevt!18 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!18 -> comwire_req?18 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!18 -> oraclecomwire_token?18 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!18 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!18 -> oraclefinwritewire_token?18 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?18 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!18 -> prvapiwire_res?18 -> admsgwire_bevt?18 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (CommodityOracle.supply.supplied-> &lt;> CommodityBlockchain.oraclecomwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" visitedStates="15241" verifyTime="0.45255429999999996" testport="//@interimmodels.19/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!45 -> prvapiwire_req?45 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!45 -> admsgwire_pevt?45 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!45 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?45 -> admsgwire_bevt!45 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!45 -> prvmsgwire_req?45 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!45 -> comwire_req?45 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!45 -> oraclecomwire_token?45 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!45 -> comwire_res?45 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!45 -> finwritewire_req?45 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!45 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!45 -> oraclefinwritewire_token?45 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?45 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!45 -> prvmsgwire_res?45 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!45 -> prvapiwire_res?45 -> admsgwire_bevt?45 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="10653" verifyTime="0.3861204" testport="//@interimmodels.19/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!34 -> prvapiwire_req?34 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!34 -> admsgwire_pevt?34 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!34 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?34 -> admsgwire_bevt!34 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!34 -> prvmsgwire_req?34 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!34 -> comwire_req?34 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!34 -> oraclecomwire_token?34 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> CommodityOracle_comwire_responder_process -> comwire_res!34 -> comwire_res?34 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!34 -> finwritewire_req?34 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!34 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!34 -> oraclefinwritewire_token?34 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?34 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!34 -> prvmsgwire_res?34 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!34 -> prvapiwire_res?34 -> admsgwire_bevt?34 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="22" verifyTime="0.0435157" testport="//@interimmodels.19/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_requester_process -> ctrlwire_req!44 -> ctrlwire_req?44 -> Commodity_ctrlwire_responder_invoke -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!44 -> roctrlwire_uid?44 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!44 -> roctrlwire_res?44 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> Commodity_roctrlwire_extquerier_Skip -> Commodity_ctrlwire_responder_process -> ctrlwire_res!44 -> ctrlwire_res?44" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.19/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.19/@designmodel/@host.0/@node.0" namedport="//@interimmodels.19/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.19/@designmodel/@host.0/@node.0" namedport="//@interimmodels.19/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.19/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.19/@designmodel/@host.1/@node.0" namedport="//@interimmodels.19/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.19/@designmodel/@component.2 //@interimmodels.19/@designmodel/@component.3 //@interimmodels.19/@designmodel/@component.5 //@interimmodels.19/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.19/@designmodel/@host.2/@node.0" namedport="//@interimmodels.19/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.19/@designmodel/@host.2/@node.0" namedport="//@interimmodels.19/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.19/@designmodel/@host.2/@node.0" namedport="//@interimmodels.19/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.19/@designmodel/@component.10 //@interimmodels.19/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.19/@designmodel/@host.2/@node.1" namedport="//@interimmodels.19/@designmodel/@component.10/@port.0 //@interimmodels.19/@designmodel/@component.10/@port.1 //@interimmodels.19/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.19/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.19/@designmodel/@host.3/@node.0" namedport="//@interimmodels.19/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.19/@designmodel/@host.3/@node.0" namedport="//@interimmodels.19/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.19/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.19/@designmodel/@host.4/@node.0" namedport="//@interimmodels.19/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.19/@designmodel/@host.4/@node.0" namedport="//@interimmodels.19/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.19/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.19/@designmodel/@host.4/@node.1" namedport="//@interimmodels.19/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.19/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.19/@designmodel/@host.5/@node.0" namedport="//@interimmodels.19/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.19/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.19/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.19/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.19/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.19/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.19/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
</arch:MigrationModel>
