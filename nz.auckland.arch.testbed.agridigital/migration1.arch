<?xml version="1.0" encoding="UTF-8"?>
<arch:MigrationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arch="http://www.example.org/arch">
  <source href="sample.arch#/"/>
  <target href="target.arch#/"/>
  <interimmodels step="1" description="deploy service: financetransoracle" nextModel="//@interimmodels.1" isStable="true" name="deploy-service">
    <designmodel name="inter1">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.0/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.0/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.0/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.0/@designmodel/@connector.1/@role.1 //@interimmodels.0/@designmodel/@connector.4/@role.0 //@interimmodels.0/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.0/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.0/@designmodel/@connector.2/@role.1 //@interimmodels.0/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.0/@designmodel/@connector.4/@role.1 //@interimmodels.0/@designmodel/@connector.6/@role.0 //@interimmodels.0/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.0/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.0/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.0/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.0/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.0/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.0/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.0/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.0/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.0/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.5/@role.0" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.4/@role.0" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.8/@role.0" connector="//@interimmodels.0/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.4/@role.0" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.6/@role.0" connector="//@interimmodels.0/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.9"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.0/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.0/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.012597599999999999" testport="//@interimmodels.0/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!74 -> prvapiwire_req?74 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!74 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!74 -> prvmsgwire_req?74 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!74 -> comwire_req?74 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!74 -> comwire_res?74 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!74 -> finwritewire_req?74 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!74 -> finwritewire_res?74 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!74 -> prvmsgwire_res?74 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!74 -> prvapiwire_res?74 -> admsgwire_pub?74 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="32" verifyTime="0.004213199999999999" testport="//@interimmodels.0/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!80 -> iotreqwire_req?80 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!80 -> prvmsgwire_req?80 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!80 -> comwire_req?80 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!80 -> comwire_res?80 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!80 -> finwritewire_req?80 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!80 -> finwritewire_res?80 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!80 -> prvmsgwire_res?80 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!80 -> iotreqwire_res?80" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.0/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.0/@designmodel" visitedStates="10" verifyTime="0.0039293" testport="//@interimmodels.0/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!39 -> ibankwire_req?39 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!39 -> ibankwire_res?39" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.0/@designmodel" visitedStates="346" verifyTime="0.0096647" testport="//@interimmodels.0/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!28 -> prvapiwire_req?28 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!28 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!28 -> prvmsgwire_req?28 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!28 -> comwire_req?28 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!28 -> comwire_res?28 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!28 -> finwritewire_req?28 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!28 -> finwritewire_res?28 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!28 -> prvmsgwire_res?28 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!28 -> prvapiwire_res?28 -> admsgwire_pub?28 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.0/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.0/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.0/@designmodel/@host.1/@node.0" namedport="//@interimmodels.0/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.0/@designmodel/@component.2 //@interimmodels.0/@designmodel/@component.3 //@interimmodels.0/@designmodel/@component.5 //@interimmodels.0/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.0/@designmodel/@component.10 //@interimmodels.0/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.0/@designmodel/@host.2/@node.1" namedport="//@interimmodels.0/@designmodel/@component.10/@port.0 //@interimmodels.0/@designmodel/@component.10/@port.1 //@interimmodels.0/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.0/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.0/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.0/@designmodel/@host.4/@node.0" namedport="//@interimmodels.0/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.0/@designmodel/@host.4/@node.0" namedport="//@interimmodels.0/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.0/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.0/@designmodel/@host.4/@node.1" namedport="//@interimmodels.0/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.0/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.0/@designmodel/@host.5/@node.0" namedport="//@interimmodels.0/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.0/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.0/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.0/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="setup database: commodityblockchain" nextModel="//@interimmodels.2" isStable="true" name="setup-database">
    <designmodel name="inter2">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.1/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.1/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.1/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.1/@designmodel/@connector.1/@role.1 //@interimmodels.1/@designmodel/@connector.4/@role.0 //@interimmodels.1/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.1/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.1/@designmodel/@connector.2/@role.1 //@interimmodels.1/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.1/@designmodel/@connector.4/@role.1 //@interimmodels.1/@designmodel/@connector.6/@role.0 //@interimmodels.1/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.1/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.1/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.1/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.1/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.1/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.1/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.1/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.1/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.1/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.5/@role.0" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.4/@role.0" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.8/@role.0" connector="//@interimmodels.1/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.4/@role.0" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.6/@role.0" connector="//@interimmodels.1/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.9"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.1/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.1/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0094942" testport="//@interimmodels.1/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!45 -> prvapiwire_req?45 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!45 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!45 -> prvmsgwire_req?45 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!45 -> comwire_req?45 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!45 -> comwire_res?45 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!45 -> finwritewire_req?45 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!45 -> finwritewire_res?45 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!45 -> prvmsgwire_res?45 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!45 -> prvapiwire_res?45 -> admsgwire_pub?45 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0042736" testport="//@interimmodels.1/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!61 -> iotreqwire_req?61 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!61 -> prvmsgwire_req?61 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!61 -> comwire_req?61 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!61 -> comwire_res?61 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!61 -> finwritewire_req?61 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!61 -> finwritewire_res?61 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!61 -> prvmsgwire_res?61 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!61 -> iotreqwire_res?61" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.1/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.1/@designmodel" visitedStates="10" verifyTime="0.0038219" testport="//@interimmodels.1/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!59 -> ibankwire_req?59 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!59 -> ibankwire_res?59" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.1/@designmodel" visitedStates="346" verifyTime="0.011890399999999999" testport="//@interimmodels.1/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!62 -> prvapiwire_req?62 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!62 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!62 -> prvmsgwire_req?62 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!62 -> comwire_req?62 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!62 -> comwire_res?62 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!62 -> finwritewire_req?62 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!62 -> finwritewire_res?62 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!62 -> prvmsgwire_res?62 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!62 -> prvapiwire_res?62 -> admsgwire_pub?62 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.1/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.1/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.1/@designmodel/@host.1/@node.0" namedport="//@interimmodels.1/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.1/@designmodel/@component.2 //@interimmodels.1/@designmodel/@component.3 //@interimmodels.1/@designmodel/@component.5 //@interimmodels.1/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.1/@designmodel/@component.10 //@interimmodels.1/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.1/@designmodel/@host.2/@node.1" namedport="//@interimmodels.1/@designmodel/@component.10/@port.0 //@interimmodels.1/@designmodel/@component.10/@port.1 //@interimmodels.1/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.1/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.1/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.1/@designmodel/@host.4/@node.0" namedport="//@interimmodels.1/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.1/@designmodel/@host.4/@node.0" namedport="//@interimmodels.1/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.1/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.1/@designmodel/@host.4/@node.1" namedport="//@interimmodels.1/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.1/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.1/@designmodel/@host.5/@node.0" namedport="//@interimmodels.1/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.1/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.1/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.1/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="setup database: admsgwirelog" nextModel="//@interimmodels.3" isStable="true" name="setup-database">
    <designmodel name="inter3">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.2/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.2/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.2/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.2/@designmodel/@connector.1/@role.1 //@interimmodels.2/@designmodel/@connector.4/@role.0 //@interimmodels.2/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.2/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.2/@designmodel/@connector.2/@role.1 //@interimmodels.2/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.2/@designmodel/@connector.4/@role.1 //@interimmodels.2/@designmodel/@connector.6/@role.0 //@interimmodels.2/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.2/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.2/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.2/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.2/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.2/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.2/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.2/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.2/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.2/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.5/@role.0" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.4/@role.0" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.8/@role.0" connector="//@interimmodels.2/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.4/@role.0" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.6/@role.0" connector="//@interimmodels.2/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.9"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.2/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.2/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.009157" testport="//@interimmodels.2/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!66 -> prvapiwire_req?66 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!66 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!66 -> prvmsgwire_req?66 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!66 -> comwire_req?66 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!66 -> comwire_res?66 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!66 -> finwritewire_req?66 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!66 -> finwritewire_res?66 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!66 -> prvmsgwire_res?66 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!66 -> prvapiwire_res?66 -> admsgwire_pub?66 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="32" verifyTime="0.004313099999999999" testport="//@interimmodels.2/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!35 -> iotreqwire_req?35 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!35 -> prvmsgwire_req?35 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!35 -> comwire_req?35 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!35 -> comwire_res?35 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!35 -> finwritewire_req?35 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!35 -> finwritewire_res?35 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!35 -> prvmsgwire_res?35 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!35 -> iotreqwire_res?35" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.2/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.2/@designmodel" visitedStates="10" verifyTime="0.0038134999999999996" testport="//@interimmodels.2/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!21 -> ibankwire_req?21 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!21 -> ibankwire_res?21" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.2/@designmodel" visitedStates="346" verifyTime="0.011949699999999999" testport="//@interimmodels.2/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.2/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.2/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.2/@designmodel/@host.1/@node.0" namedport="//@interimmodels.2/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.2/@designmodel/@component.2 //@interimmodels.2/@designmodel/@component.3 //@interimmodels.2/@designmodel/@component.5 //@interimmodels.2/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.2/@designmodel/@component.10 //@interimmodels.2/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.2/@designmodel/@host.2/@node.1" namedport="//@interimmodels.2/@designmodel/@component.10/@port.0 //@interimmodels.2/@designmodel/@component.10/@port.1 //@interimmodels.2/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.2/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.2/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.2/@designmodel/@host.4/@node.0" namedport="//@interimmodels.2/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.2/@designmodel/@host.4/@node.0" namedport="//@interimmodels.2/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.2/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.2/@designmodel/@host.4/@node.1" namedport="//@interimmodels.2/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.2/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.2/@designmodel/@host.5/@node.0" namedport="//@interimmodels.2/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.2/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.2/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.2/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="4" description="setup database: financetransblockchain" nextModel="//@interimmodels.4" isStable="true" name="setup-database">
    <designmodel name="inter4">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.3/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.3/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.3/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.3/@designmodel/@connector.1/@role.1 //@interimmodels.3/@designmodel/@connector.4/@role.0 //@interimmodels.3/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.3/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.3/@designmodel/@connector.2/@role.1 //@interimmodels.3/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.3/@designmodel/@connector.4/@role.1 //@interimmodels.3/@designmodel/@connector.6/@role.0 //@interimmodels.3/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.3/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.3/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.3/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.3/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.3/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.3/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.3/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.3/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.3/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.5/@role.0" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.4/@role.0" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.8/@role.0" connector="//@interimmodels.3/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.4/@role.0" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.6/@role.0" connector="//@interimmodels.3/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.9"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.3/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.3/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0092131" testport="//@interimmodels.3/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0040146999999999995" testport="//@interimmodels.3/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!74 -> iotreqwire_req?74 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!74 -> prvmsgwire_req?74 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!74 -> comwire_req?74 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!74 -> comwire_res?74 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!74 -> finwritewire_req?74 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!74 -> finwritewire_res?74 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!74 -> prvmsgwire_res?74 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!74 -> iotreqwire_res?74" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.3/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.3/@designmodel" visitedStates="10" verifyTime="0.0037378999999999997" testport="//@interimmodels.3/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!91 -> ibankwire_req?91 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!91 -> ibankwire_res?91" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.3/@designmodel" visitedStates="346" verifyTime="0.009507999999999999" testport="//@interimmodels.3/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!40 -> prvapiwire_req?40 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!40 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!40 -> prvmsgwire_req?40 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!40 -> comwire_req?40 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!40 -> comwire_res?40 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!40 -> finwritewire_req?40 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!40 -> finwritewire_res?40 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!40 -> prvmsgwire_res?40 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!40 -> prvapiwire_res?40 -> admsgwire_pub?40 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.3/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.3/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.3/@designmodel/@host.1/@node.0" namedport="//@interimmodels.3/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.3/@designmodel/@component.2 //@interimmodels.3/@designmodel/@component.3 //@interimmodels.3/@designmodel/@component.5 //@interimmodels.3/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.3/@designmodel/@component.10 //@interimmodels.3/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.3/@designmodel/@host.2/@node.1" namedport="//@interimmodels.3/@designmodel/@component.10/@port.0 //@interimmodels.3/@designmodel/@component.10/@port.1 //@interimmodels.3/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.3/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.3/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.3/@designmodel/@host.4/@node.0" namedport="//@interimmodels.3/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.3/@designmodel/@host.4/@node.0" namedport="//@interimmodels.3/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.3/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.3/@designmodel/@host.4/@node.1" namedport="//@interimmodels.3/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.3/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.3/@designmodel/@host.5/@node.0" namedport="//@interimmodels.3/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.3/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.3/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.3/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="5" description="network route for connector:oraclefinwritewire between: financetransoracle financetransblockchain " nextModel="//@interimmodels.5" name="network-route">
    <designmodel name="inter5">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.4/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.4/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.4/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.4/@designmodel/@connector.1/@role.1 //@interimmodels.4/@designmodel/@connector.4/@role.0 //@interimmodels.4/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.4/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.4/@designmodel/@connector.2/@role.1 //@interimmodels.4/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.4/@designmodel/@connector.4/@role.1 //@interimmodels.4/@designmodel/@connector.6/@role.0 //@interimmodels.4/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.4/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.4/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.4/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.4/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.4/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.4/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.4/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.4/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.4/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.4/@designmodel/@connector.10/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.4/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.5/@role.0" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.4/@role.0" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.8/@role.0" connector="//@interimmodels.4/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.4/@role.0" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.6/@role.0" connector="//@interimmodels.4/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.4/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.4/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.4/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.4/@designmodel" valid="false" counterExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!62 -> prvapiwire_req?62 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!62 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!62 -> prvmsgwire_req?62 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!62 -> comwire_req?62 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!62 -> comwire_res?62 -> admsgwire_pub?62 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!96 -> oraclefinwritewire_token?96 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="11894" verifyTime="0.3150484" testport="//@interimmodels.4/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!62 -> prvapiwire_req?62 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!62 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!62 -> prvmsgwire_req?62 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!62 -> comwire_req?62 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!62 -> comwire_res?62 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!62 -> finwritewire_req?62 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!62 -> finwritewire_res?62 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!62 -> prvmsgwire_res?62 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!62 -> prvapiwire_res?62 -> admsgwire_pub?62 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!96 -> oraclefinwritewire_token?96 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.4/@designmodel" valid="false" counterExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!98 -> iotreqwire_req?98 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!98 -> prvmsgwire_req?98 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!98 -> comwire_req?98 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!98 -> comwire_res?98 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!61 -> oraclefinwritewire_token?61 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="1194" verifyTime="0.032845599999999996" testport="//@interimmodels.4/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!98 -> iotreqwire_req?98 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!98 -> prvmsgwire_req?98 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!98 -> comwire_req?98 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!98 -> comwire_res?98 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!98 -> finwritewire_req?98 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!98 -> finwritewire_res?98 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!98 -> prvmsgwire_res?98 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!98 -> iotreqwire_res?98 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!61 -> oraclefinwritewire_token?61 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.4/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.4/@designmodel" visitedStates="627" verifyTime="0.0216501" testport="//@interimmodels.4/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!15 -> ibankwire_req?15 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!15 -> ibankwire_res?15 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!89 -> oraclefinwritewire_token?89 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.4/@designmodel" valid="false" counterExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!85 -> prvapiwire_req?85 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!85 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!85 -> prvmsgwire_req?85 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!85 -> comwire_req?85 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!85 -> comwire_res?85 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!85 -> finwritewire_req?85 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!85 -> finwritewire_res?85 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!85 -> prvmsgwire_res?85 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!85 -> prvapiwire_res?85 -> admsgwire_pub?85 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!57 -> oraclefinwritewire_token?57 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="12358" verifyTime="0.303485" testport="//@interimmodels.4/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!85 -> prvapiwire_req?85 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!85 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!85 -> prvmsgwire_req?85 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!85 -> comwire_req?85 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!85 -> comwire_res?85 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!85 -> finwritewire_req?85 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!85 -> finwritewire_res?85 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!85 -> prvmsgwire_res?85 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!85 -> prvapiwire_res?85 -> admsgwire_pub?85 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!57 -> oraclefinwritewire_token?57 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="11713" verifyTime="0.2877708" testport="//@interimmodels.4/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!51 -> prvapiwire_req?51 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!51 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!51 -> prvmsgwire_req?51 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!51 -> comwire_req?51 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!51 -> comwire_res?51 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!51 -> finwritewire_req?51 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!51 -> finwritewire_res?51 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!51 -> prvmsgwire_res?51 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!51 -> prvapiwire_res?51 -> admsgwire_pub?51 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!46 -> oraclefinwritewire_token?46 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!46 -> oraclefinwritewire_token?46 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored)*" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.4/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.4/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.4/@designmodel/@host.1/@node.0" namedport="//@interimmodels.4/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.4/@designmodel/@component.2 //@interimmodels.4/@designmodel/@component.3 //@interimmodels.4/@designmodel/@component.5 //@interimmodels.4/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.4/@designmodel/@component.10 //@interimmodels.4/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.4/@designmodel/@host.2/@node.1" namedport="//@interimmodels.4/@designmodel/@component.10/@port.0 //@interimmodels.4/@designmodel/@component.10/@port.1 //@interimmodels.4/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.4/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.4/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.4/@designmodel/@host.4/@node.0" namedport="//@interimmodels.4/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.4/@designmodel/@host.4/@node.0" namedport="//@interimmodels.4/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.4/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.4/@designmodel/@host.4/@node.1" namedport="//@interimmodels.4/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.4/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.4/@designmodel/@host.5/@node.0" namedport="//@interimmodels.4/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.4/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.4/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.4/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="8" description="deploy service: commodity" nextModel="//@interimmodels.6" name="deploy-service">
    <designmodel name="inter8">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.5/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.5/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.5/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.5/@designmodel/@connector.1/@role.1 //@interimmodels.5/@designmodel/@connector.4/@role.0 //@interimmodels.5/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.5/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.5/@designmodel/@connector.2/@role.1 //@interimmodels.5/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.5/@designmodel/@connector.4/@role.1 //@interimmodels.5/@designmodel/@connector.6/@role.0 //@interimmodels.5/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.5/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.5/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.5/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.5/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.5/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.5/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.5/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.5/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.5/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.5/@designmodel/@connector.10/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.5/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.5/@role.0" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.4/@role.0" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.8/@role.0" connector="//@interimmodels.5/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.4/@role.0" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.6/@role.0" connector="//@interimmodels.5/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.5/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.5/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.5/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.5/@designmodel" valid="false" counterExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!82 -> prvapiwire_req?82 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!82 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!82 -> prvmsgwire_req?82 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!82 -> comwire_req?82 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!82 -> comwire_res?82 -> admsgwire_pub?82 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!96 -> oraclefinwritewire_token?96 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="11894" verifyTime="0.2670277" testport="//@interimmodels.5/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!82 -> prvapiwire_req?82 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!82 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!82 -> prvmsgwire_req?82 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!82 -> comwire_req?82 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!82 -> comwire_res?82 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!82 -> finwritewire_req?82 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!82 -> finwritewire_res?82 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!82 -> prvmsgwire_res?82 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!82 -> prvapiwire_res?82 -> admsgwire_pub?82 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!96 -> oraclefinwritewire_token?96 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.5/@designmodel" valid="false" counterExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!84 -> iotreqwire_req?84 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!84 -> prvmsgwire_req?84 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!84 -> comwire_req?84 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!84 -> comwire_res?84 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!22 -> oraclefinwritewire_token?22 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="1194" verifyTime="0.0325158" testport="//@interimmodels.5/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!84 -> iotreqwire_req?84 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!84 -> prvmsgwire_req?84 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!84 -> comwire_req?84 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!84 -> comwire_res?84 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!84 -> finwritewire_req?84 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!84 -> finwritewire_res?84 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!84 -> prvmsgwire_res?84 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!84 -> iotreqwire_res?84 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!22 -> oraclefinwritewire_token?22 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.5/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.5/@designmodel" visitedStates="627" verifyTime="0.022838999999999998" testport="//@interimmodels.5/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!33 -> ibankwire_req?33 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!33 -> ibankwire_res?33 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!54 -> oraclefinwritewire_token?54 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.5/@designmodel" valid="false" counterExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!85 -> prvapiwire_req?85 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!85 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!85 -> prvmsgwire_req?85 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!85 -> comwire_req?85 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!85 -> comwire_res?85 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!85 -> finwritewire_req?85 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!85 -> finwritewire_res?85 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!85 -> prvmsgwire_res?85 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!85 -> prvapiwire_res?85 -> admsgwire_pub?85 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!91 -> oraclefinwritewire_token?91 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="12358" verifyTime="0.2972531" testport="//@interimmodels.5/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!85 -> prvapiwire_req?85 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!85 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!85 -> prvmsgwire_req?85 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!85 -> comwire_req?85 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!85 -> comwire_res?85 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!85 -> finwritewire_req?85 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!85 -> finwritewire_res?85 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!85 -> prvmsgwire_res?85 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!85 -> prvapiwire_res?85 -> admsgwire_pub?85 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!91 -> oraclefinwritewire_token?91 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="11713" verifyTime="0.3338819" testport="//@interimmodels.5/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!16 -> prvapiwire_req?16 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!16 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!16 -> prvmsgwire_req?16 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!16 -> comwire_req?16 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!16 -> comwire_res?16 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!16 -> finwritewire_req?16 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!16 -> finwritewire_res?16 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!16 -> prvmsgwire_res?16 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!16 -> prvapiwire_res?16 -> admsgwire_pub?16 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!66 -> oraclefinwritewire_token?66 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!66 -> oraclefinwritewire_token?66 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored)*" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.5/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.5/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.5/@designmodel/@host.1/@node.0" namedport="//@interimmodels.5/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.5/@designmodel/@component.2 //@interimmodels.5/@designmodel/@component.3 //@interimmodels.5/@designmodel/@component.5 //@interimmodels.5/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.5/@designmodel/@component.10 //@interimmodels.5/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.5/@designmodel/@host.2/@node.1" namedport="//@interimmodels.5/@designmodel/@component.10/@port.0 //@interimmodels.5/@designmodel/@component.10/@port.1 //@interimmodels.5/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.5/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.5/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.5/@designmodel/@host.4/@node.0" namedport="//@interimmodels.5/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.5/@designmodel/@host.4/@node.0" namedport="//@interimmodels.5/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.5/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.5/@designmodel/@host.4/@node.1" namedport="//@interimmodels.5/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.5/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.5/@designmodel/@host.5/@node.0" namedport="//@interimmodels.5/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.5/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.5/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.5/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="9" description="deploy service: bcintegrator" nextModel="//@interimmodels.7" name="deploy-service">
    <designmodel name="inter9">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.6/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.6/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.6/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.6/@designmodel/@connector.1/@role.1 //@interimmodels.6/@designmodel/@connector.4/@role.0 //@interimmodels.6/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.6/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.6/@designmodel/@connector.2/@role.1 //@interimmodels.6/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.6/@designmodel/@connector.4/@role.1 //@interimmodels.6/@designmodel/@connector.6/@role.0 //@interimmodels.6/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.6/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.6/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.6/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.6/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.6/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.6/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.6/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.6/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.6/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.6/@designmodel/@connector.10/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.6/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.5/@role.0" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.4/@role.0" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.8/@role.0" connector="//@interimmodels.6/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.4/@role.0" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.6/@role.0" connector="//@interimmodels.6/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.6/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.6/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.6/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.6/@designmodel" valid="false" counterExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!53 -> prvapiwire_req?53 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!53 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!53 -> prvmsgwire_req?53 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!53 -> comwire_req?53 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!53 -> comwire_res?53 -> admsgwire_pub?53 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!63 -> oraclefinwritewire_token?63 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="11894" verifyTime="0.2748811" testport="//@interimmodels.6/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!53 -> prvapiwire_req?53 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!53 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!53 -> prvmsgwire_req?53 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!53 -> comwire_req?53 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!53 -> comwire_res?53 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!53 -> finwritewire_req?53 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!53 -> finwritewire_res?53 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!53 -> prvmsgwire_res?53 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!53 -> prvapiwire_res?53 -> admsgwire_pub?53 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!63 -> oraclefinwritewire_token?63 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.6/@designmodel" valid="false" counterExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!66 -> iotreqwire_req?66 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!66 -> prvmsgwire_req?66 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!66 -> comwire_req?66 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!66 -> comwire_res?66 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!39 -> oraclefinwritewire_token?39 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="1194" verifyTime="0.0310819" testport="//@interimmodels.6/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!66 -> iotreqwire_req?66 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!66 -> prvmsgwire_req?66 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!66 -> comwire_req?66 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!66 -> comwire_res?66 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!66 -> finwritewire_req?66 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!66 -> finwritewire_res?66 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!66 -> prvmsgwire_res?66 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!66 -> iotreqwire_res?66 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!39 -> oraclefinwritewire_token?39 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.6/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.6/@designmodel" visitedStates="627" verifyTime="0.0219474" testport="//@interimmodels.6/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!56 -> ibankwire_req?56 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!56 -> ibankwire_res?56 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!87 -> oraclefinwritewire_token?87 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.6/@designmodel" valid="false" counterExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!90 -> oraclefinwritewire_token?90 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="12358" verifyTime="0.3090863" testport="//@interimmodels.6/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!90 -> oraclefinwritewire_token?90 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="11713" verifyTime="0.3016527" testport="//@interimmodels.6/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!88 -> prvapiwire_req?88 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!88 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!88 -> prvmsgwire_req?88 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!88 -> comwire_req?88 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!88 -> comwire_res?88 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!88 -> finwritewire_req?88 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!88 -> finwritewire_res?88 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!88 -> prvmsgwire_res?88 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!88 -> prvapiwire_res?88 -> admsgwire_pub?88 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!63 -> oraclefinwritewire_token?63 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!63 -> oraclefinwritewire_token?63 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored)*" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.6/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.6/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.6/@designmodel/@host.1/@node.0" namedport="//@interimmodels.6/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.6/@designmodel/@component.2 //@interimmodels.6/@designmodel/@component.3 //@interimmodels.6/@designmodel/@component.5 //@interimmodels.6/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.6/@designmodel/@component.10 //@interimmodels.6/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.6/@designmodel/@host.2/@node.1" namedport="//@interimmodels.6/@designmodel/@component.10/@port.0 //@interimmodels.6/@designmodel/@component.10/@port.1 //@interimmodels.6/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.6/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.6/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.6/@designmodel/@host.4/@node.0" namedport="//@interimmodels.6/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.6/@designmodel/@host.4/@node.0" namedport="//@interimmodels.6/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.6/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.6/@designmodel/@host.4/@node.1" namedport="//@interimmodels.6/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.6/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.6/@designmodel/@host.5/@node.0" namedport="//@interimmodels.6/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.6/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.6/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.6/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="10" description="deploy service: financetrans" nextModel="//@interimmodels.8" name="deploy-service">
    <designmodel name="inter10">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.7/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.7/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.7/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.7/@designmodel/@connector.1/@role.1 //@interimmodels.7/@designmodel/@connector.4/@role.0 //@interimmodels.7/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.7/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.7/@designmodel/@connector.2/@role.1 //@interimmodels.7/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.7/@designmodel/@connector.4/@role.1 //@interimmodels.7/@designmodel/@connector.6/@role.0 //@interimmodels.7/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.7/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.7/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.7/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.7/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.7/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.7/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.1">
        <port name="translog" role="//@interimmodels.7/@designmodel/@connector.6/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.7/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.7/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.7/@designmodel/@connector.10/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.7/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.5/@role.0" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.4/@role.0" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.8/@role.0" connector="//@interimmodels.7/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.4/@role.0" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="WRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.6"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.6"/>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.6/@role.0" connector="//@interimmodels.7/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.7/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.7/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.7/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.7/@designmodel" valid="false" counterExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!80 -> prvapiwire_req?80 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!80 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!80 -> prvmsgwire_req?80 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!80 -> comwire_req?80 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!80 -> comwire_res?80 -> admsgwire_pub?80 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!96 -> oraclefinwritewire_token?96 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="11894" verifyTime="0.2728787" testport="//@interimmodels.7/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!80 -> prvapiwire_req?80 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!80 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!80 -> prvmsgwire_req?80 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!80 -> comwire_req?80 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!80 -> comwire_res?80 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!80 -> finwritewire_req?80 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!80 -> finwritewire_res?80 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!80 -> prvmsgwire_res?80 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!80 -> prvapiwire_res?80 -> admsgwire_pub?80 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!96 -> oraclefinwritewire_token?96 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.7/@designmodel" valid="false" counterExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!11 -> iotreqwire_req?11 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!11 -> prvmsgwire_req?11 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!11 -> comwire_req?11 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!11 -> comwire_res?11 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!63 -> oraclefinwritewire_token?63 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="1194" verifyTime="0.0307955" testport="//@interimmodels.7/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!11 -> iotreqwire_req?11 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!11 -> prvmsgwire_req?11 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!11 -> comwire_req?11 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!11 -> comwire_res?11 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!11 -> finwritewire_req?11 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!11 -> finwritewire_res?11 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!11 -> prvmsgwire_res?11 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!11 -> iotreqwire_res?11 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!63 -> oraclefinwritewire_token?63 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.7/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.7/@designmodel" visitedStates="627" verifyTime="0.0226056" testport="//@interimmodels.7/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!82 -> ibankwire_req?82 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!82 -> ibankwire_res?82 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!69 -> oraclefinwritewire_token?69 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.7/@designmodel" valid="false" counterExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!43 -> prvapiwire_req?43 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!43 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!43 -> prvmsgwire_req?43 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!43 -> comwire_req?43 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!43 -> comwire_res?43 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!43 -> finwritewire_req?43 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!43 -> finwritewire_res?43 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!43 -> prvmsgwire_res?43 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!43 -> prvapiwire_res?43 -> admsgwire_pub?43 -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!89 -> oraclefinwritewire_token?89 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" visitedStates="12358" verifyTime="0.30162269999999997" testport="//@interimmodels.7/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!43 -> prvapiwire_req?43 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!43 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!43 -> prvmsgwire_req?43 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!43 -> comwire_req?43 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!43 -> comwire_res?43 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!43 -> finwritewire_req?43 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!43 -> finwritewire_res?43 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!43 -> prvmsgwire_res?43 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!43 -> prvapiwire_res?43 -> admsgwire_pub?43 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!89 -> oraclefinwritewire_token?89 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied)*" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="11713" verifyTime="0.2952337" testport="//@interimmodels.7/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!88 -> prvapiwire_req?88 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!88 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!88 -> prvmsgwire_req?88 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!88 -> comwire_req?88 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!88 -> comwire_res?88 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!88 -> finwritewire_req?88 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!88 -> finwritewire_res?88 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!88 -> prvmsgwire_res?88 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!88 -> prvapiwire_res?88 -> admsgwire_pub?88 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process -> FinanceTransOracle_financetranssupply_supplied -> (FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!93 -> oraclefinwritewire_token?93 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!93 -> oraclefinwritewire_token?93 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored)*" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.7/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.7/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.7/@designmodel/@host.1/@node.0" namedport="//@interimmodels.7/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.7/@designmodel/@component.2 //@interimmodels.7/@designmodel/@component.3 //@interimmodels.7/@designmodel/@component.5 //@interimmodels.7/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.7/@designmodel/@component.10 //@interimmodels.7/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.7/@designmodel/@host.2/@node.1" namedport="//@interimmodels.7/@designmodel/@component.10/@port.0 //@interimmodels.7/@designmodel/@component.10/@port.1 //@interimmodels.7/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.7/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.7/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.7/@designmodel/@host.4/@node.0" namedport="//@interimmodels.7/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.7/@designmodel/@host.4/@node.0" namedport="//@interimmodels.7/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.7/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.7/@designmodel/@host.4/@node.1" namedport="//@interimmodels.7/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.7/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.7/@designmodel/@host.5/@node.0" namedport="//@interimmodels.7/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.7/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.7/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.7/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="11" description="network route for connector:finwritewire between: bcintegrator financetransoracle " nextModel="//@interimmodels.9" isStable="true" name="network-route">
    <designmodel name="inter11">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.8/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.8/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.8/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.8/@designmodel/@connector.1/@role.1 //@interimmodels.8/@designmodel/@connector.4/@role.0 //@interimmodels.8/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.8/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.8/@designmodel/@connector.2/@role.1 //@interimmodels.8/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.8/@designmodel/@connector.4/@role.1 //@interimmodels.8/@designmodel/@connector.8/@role.0 //@interimmodels.8/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.8/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.8/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.8/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.8/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.8/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.8/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.8/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.8/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.8/@designmodel/@connector.10/@role.1 //@interimmodels.8/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.8/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.5/@role.0" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.4/@role.0" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.8/@role.0" connector="//@interimmodels.8/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.4/@role.0" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="REConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.7"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.6/@role.0" connector="//@interimmodels.8/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.8/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.8/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.8/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.8/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="859" verifyTime="0.021349999999999997" testport="//@interimmodels.8/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!91 -> prvapiwire_req?91 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!91 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!91 -> prvmsgwire_req?91 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!91 -> comwire_req?91 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!91 -> comwire_res?91 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!91 -> finwritewire_req?91 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!91 -> oraclefinwritewire_token?91 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!91 -> finwritewire_res?91 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!91 -> prvmsgwire_res?91 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!91 -> prvapiwire_res?91 -> admsgwire_pub?91 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0053184" testport="//@interimmodels.8/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!34 -> iotreqwire_req?34 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!34 -> prvmsgwire_req?34 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!34 -> comwire_req?34 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!34 -> comwire_res?34 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!34 -> finwritewire_req?34 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!34 -> oraclefinwritewire_token?34 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!34 -> finwritewire_res?34 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!34 -> prvmsgwire_res?34 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!34 -> iotreqwire_res?34" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.8/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.8/@designmodel" visitedStates="10" verifyTime="0.0051329999999999995" testport="//@interimmodels.8/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!30 -> ibankwire_req?30 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!30 -> ibankwire_res?30" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.8/@designmodel" visitedStates="1100" verifyTime="0.0428381" testport="//@interimmodels.8/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!80 -> prvapiwire_req?80 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!80 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!80 -> prvmsgwire_req?80 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!80 -> comwire_req?80 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!80 -> comwire_res?80 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!80 -> finwritewire_req?80 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!80 -> oraclefinwritewire_token?80 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!80 -> finwritewire_res?80 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!80 -> prvmsgwire_res?80 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!80 -> prvapiwire_res?80 -> admsgwire_pub?80 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="762" verifyTime="0.08673059999999999" testport="//@interimmodels.8/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!71 -> prvapiwire_req?71 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!71 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!71 -> prvmsgwire_req?71 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!71 -> comwire_req?71 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!71 -> comwire_res?71 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!71 -> finwritewire_req?71 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!71 -> oraclefinwritewire_token?71 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!71 -> finwritewire_res?71 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!71 -> prvmsgwire_res?71 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!71 -> prvapiwire_res?71 -> admsgwire_pub?71 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.8/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.8/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.8/@designmodel/@host.1/@node.0" namedport="//@interimmodels.8/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.8/@designmodel/@component.2 //@interimmodels.8/@designmodel/@component.3 //@interimmodels.8/@designmodel/@component.5 //@interimmodels.8/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.8/@designmodel/@component.10 //@interimmodels.8/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.8/@designmodel/@host.2/@node.1" namedport="//@interimmodels.8/@designmodel/@component.10/@port.0 //@interimmodels.8/@designmodel/@component.10/@port.1 //@interimmodels.8/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.8/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.8/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.8/@designmodel/@host.4/@node.0" namedport="//@interimmodels.8/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.8/@designmodel/@host.4/@node.0" namedport="//@interimmodels.8/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.8/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.8/@designmodel/@host.4/@node.1" namedport="//@interimmodels.8/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.8/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.8/@designmodel/@host.5/@node.0" namedport="//@interimmodels.8/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.8/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.8/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.8/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="12" description="network route for connector:finreadwire between: digitalwallet financetrans " nextModel="//@interimmodels.10" isStable="true" name="network-route">
    <designmodel name="inter12">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.9/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.9/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.9/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.9/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.9/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.9/@designmodel/@connector.1/@role.1 //@interimmodels.9/@designmodel/@connector.4/@role.0 //@interimmodels.9/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.9/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.9/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.9/@designmodel/@connector.2/@role.1 //@interimmodels.9/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.9/@designmodel/@connector.4/@role.1 //@interimmodels.9/@designmodel/@connector.8/@role.0 //@interimmodels.9/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.9/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.9/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.9/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.9/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.9/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.9/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.9/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.9/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.9/@designmodel/@connector.7/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.9/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.9/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.9/@designmodel/@connector.10/@role.1 //@interimmodels.9/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.9/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.5/@role.0" connector="//@interimmodels.9/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.4/@role.0" connector="//@interimmodels.9/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.8/@role.0" connector="//@interimmodels.9/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.4/@role.0" connector="//@interimmodels.9/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.9/@designmodel/@connector.6/@role.0" connector="//@interimmodels.9/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.9/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.9/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.9/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.9/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.9/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.9/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.9/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.9/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.9/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.9/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.9/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.9/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.9/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.9/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.9/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.9/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.9/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.9/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.9/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.9/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.9/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.9/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="859" verifyTime="0.0291183" testport="//@interimmodels.9/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!81 -> prvapiwire_req?81 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!81 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!81 -> prvmsgwire_req?81 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!81 -> comwire_req?81 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!81 -> comwire_res?81 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!81 -> finwritewire_req?81 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!81 -> oraclefinwritewire_token?81 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!81 -> finwritewire_res?81 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!81 -> prvmsgwire_res?81 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!81 -> prvapiwire_res?81 -> admsgwire_pub?81 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.9/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0061344" testport="//@interimmodels.9/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!15 -> iotreqwire_req?15 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!15 -> prvmsgwire_req?15 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!15 -> comwire_req?15 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!15 -> comwire_res?15 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!15 -> finwritewire_req?15 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!15 -> oraclefinwritewire_token?15 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!15 -> finwritewire_res?15 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!15 -> prvmsgwire_res?15 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!15 -> iotreqwire_res?15" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.9/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.9/@designmodel" visitedStates="10" verifyTime="0.007029499999999999" testport="//@interimmodels.9/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!13 -> ibankwire_req?13 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!13 -> ibankwire_res?13" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.9/@designmodel" visitedStates="1100" verifyTime="0.0319452" testport="//@interimmodels.9/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!90 -> prvapiwire_req?90 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!90 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!90 -> prvmsgwire_req?90 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!90 -> comwire_req?90 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!90 -> comwire_res?90 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!90 -> finwritewire_req?90 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!90 -> oraclefinwritewire_token?90 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!90 -> finwritewire_res?90 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!90 -> prvmsgwire_res?90 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!90 -> prvapiwire_res?90 -> admsgwire_pub?90 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.9/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.9/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.9/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="762" verifyTime="0.022327" testport="//@interimmodels.9/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!48 -> prvapiwire_req?48 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!48 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!48 -> prvmsgwire_req?48 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!48 -> comwire_req?48 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!48 -> comwire_res?48 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!48 -> finwritewire_req?48 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!48 -> oraclefinwritewire_token?48 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!48 -> finwritewire_res?48 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!48 -> prvmsgwire_res?48 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!48 -> prvapiwire_res?48 -> admsgwire_pub?48 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.9/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.9/@designmodel/@host.0/@node.0" namedport="//@interimmodels.9/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.9/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.9/@designmodel/@host.1/@node.0" namedport="//@interimmodels.9/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.9/@designmodel/@component.2 //@interimmodels.9/@designmodel/@component.3 //@interimmodels.9/@designmodel/@component.5 //@interimmodels.9/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.9/@designmodel/@host.2/@node.0" namedport="//@interimmodels.9/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.9/@designmodel/@component.10 //@interimmodels.9/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.9/@designmodel/@host.2/@node.1" namedport="//@interimmodels.9/@designmodel/@component.10/@port.0 //@interimmodels.9/@designmodel/@component.10/@port.1 //@interimmodels.9/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.9/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.9/@designmodel/@host.3/@node.0" namedport="//@interimmodels.9/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.9/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.9/@designmodel/@host.4/@node.0" namedport="//@interimmodels.9/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.9/@designmodel/@host.4/@node.0" namedport="//@interimmodels.9/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.9/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.9/@designmodel/@host.4/@node.1" namedport="//@interimmodels.9/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.9/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.9/@designmodel/@host.5/@node.0" namedport="//@interimmodels.9/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.9/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.9/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.9/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.9/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.9/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.9/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.9/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="13" description="network route for connector:rofinreadwire between: financetrans financetransblockchain " nextModel="//@interimmodels.11" isStable="true" name="network-route">
    <designmodel name="inter13">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.10/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.10/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.10/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.10/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.10/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.10/@designmodel/@connector.1/@role.1 //@interimmodels.10/@designmodel/@connector.4/@role.0 //@interimmodels.10/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.10/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.10/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.10/@designmodel/@connector.2/@role.1 //@interimmodels.10/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.10/@designmodel/@connector.4/@role.1 //@interimmodels.10/@designmodel/@connector.8/@role.0 //@interimmodels.10/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.10/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.10/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.10/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.10/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.10/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.10/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.10/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.10/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.10/@designmodel/@connector.7/@role.1 //@interimmodels.10/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.10/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.10/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.10/@designmodel/@connector.10/@role.1 //@interimmodels.10/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.10/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.10/@designmodel/@connector.11/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.5/@role.0" connector="//@interimmodels.10/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.4/@role.0" connector="//@interimmodels.10/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.8/@role.0" connector="//@interimmodels.10/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.4/@role.0" connector="//@interimmodels.10/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.11/@role.0" connector="//@interimmodels.10/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.10/@designmodel/@connector.6/@role.0" connector="//@interimmodels.10/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.10/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.10/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.10/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.10/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.10/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.10/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.10/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.10/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.10/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.10/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.10/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.10/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.10/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.10/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.10/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.10/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.10/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.10/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.10/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.10/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.10/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.10/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.10/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.10/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="859" verifyTime="0.026705899999999998" testport="//@interimmodels.10/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!34 -> prvapiwire_req?34 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!34 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!34 -> prvmsgwire_req?34 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!34 -> comwire_req?34 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!34 -> comwire_res?34 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!34 -> finwritewire_req?34 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!34 -> oraclefinwritewire_token?34 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!34 -> finwritewire_res?34 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!34 -> prvmsgwire_res?34 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!34 -> prvapiwire_res?34 -> admsgwire_pub?34 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.10/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0103286" testport="//@interimmodels.10/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!22 -> iotreqwire_req?22 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!22 -> prvmsgwire_req?22 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!22 -> comwire_req?22 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!22 -> comwire_res?22 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!22 -> finwritewire_req?22 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!22 -> oraclefinwritewire_token?22 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!22 -> finwritewire_res?22 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!22 -> prvmsgwire_res?22 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!22 -> iotreqwire_res?22" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.10/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.10/@designmodel" visitedStates="10" verifyTime="0.0077748999999999995" testport="//@interimmodels.10/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!69 -> ibankwire_req?69 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!69 -> ibankwire_res?69" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.10/@designmodel" visitedStates="1100" verifyTime="0.0338933" testport="//@interimmodels.10/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!47 -> prvapiwire_req?47 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!47 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!47 -> prvmsgwire_req?47 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!47 -> comwire_req?47 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!47 -> comwire_res?47 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!47 -> finwritewire_req?47 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!47 -> oraclefinwritewire_token?47 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!47 -> finwritewire_res?47 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!47 -> prvmsgwire_res?47 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!47 -> prvapiwire_res?47 -> admsgwire_pub?47 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.10/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.10/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.10/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="762" verifyTime="0.0334106" testport="//@interimmodels.10/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!96 -> prvapiwire_req?96 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!96 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!96 -> prvmsgwire_req?96 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!96 -> comwire_req?96 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!96 -> comwire_res?96 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!96 -> finwritewire_req?96 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!96 -> oraclefinwritewire_token?96 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!96 -> finwritewire_res?96 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!96 -> prvmsgwire_res?96 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!96 -> prvapiwire_res?96 -> admsgwire_pub?96 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.008615" testport="//@interimmodels.10/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!42 -> finreadwire_req?42 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!42 -> rofinreadwire_uid?42 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!42 -> rofinreadwire_res?42 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!42 -> finreadwire_res?42" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.10/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.10/@designmodel/@host.0/@node.0" namedport="//@interimmodels.10/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.10/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.10/@designmodel/@host.1/@node.0" namedport="//@interimmodels.10/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.10/@designmodel/@component.2 //@interimmodels.10/@designmodel/@component.3 //@interimmodels.10/@designmodel/@component.5 //@interimmodels.10/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.10/@designmodel/@host.2/@node.0" namedport="//@interimmodels.10/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.10/@designmodel/@component.10 //@interimmodels.10/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.10/@designmodel/@host.2/@node.1" namedport="//@interimmodels.10/@designmodel/@component.10/@port.0 //@interimmodels.10/@designmodel/@component.10/@port.1 //@interimmodels.10/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.10/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.10/@designmodel/@host.3/@node.0" namedport="//@interimmodels.10/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.10/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.10/@designmodel/@host.4/@node.0" namedport="//@interimmodels.10/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.10/@designmodel/@host.4/@node.0" namedport="//@interimmodels.10/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.10/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.10/@designmodel/@host.4/@node.1" namedport="//@interimmodels.10/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.10/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.10/@designmodel/@host.5/@node.0" namedport="//@interimmodels.10/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.10/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.10/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.10/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.10/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.10/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.10/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.10/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="14" description="network route for connector:roctrlwire between: commodity commodityblockchain " nextModel="//@interimmodels.12" isStable="true" name="network-route">
    <designmodel name="inter14">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.11/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.11/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.11/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.11/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.11/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.11/@designmodel/@connector.1/@role.1 //@interimmodels.11/@designmodel/@connector.4/@role.0 //@interimmodels.11/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.11/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.11/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.11/@designmodel/@connector.2/@role.1 //@interimmodels.11/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.11/@designmodel/@connector.4/@role.1 //@interimmodels.11/@designmodel/@connector.8/@role.0 //@interimmodels.11/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.11/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.11/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.11/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.11/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.11/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.11/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.11/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.11/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.11/@designmodel/@connector.9/@role.1 //@interimmodels.11/@designmodel/@connector.12/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.11/@designmodel/@connector.7/@role.1 //@interimmodels.11/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.11/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.11/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.11/@designmodel/@connector.10/@role.1 //@interimmodels.11/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.11/@designmodel/@connector.12/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.11/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.11/@designmodel/@connector.11/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.5/@role.0" connector="//@interimmodels.11/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.4/@role.0" connector="//@interimmodels.11/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.8/@role.0" connector="//@interimmodels.11/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.4/@role.0" connector="//@interimmodels.11/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.11/@role.0" connector="//@interimmodels.11/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.11/@designmodel/@connector.6/@role.0" connector="//@interimmodels.11/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.11/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.11/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.11/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.11/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.11/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.11/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.11/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.11/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.11/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.11/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.11/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.11/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.11/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.11/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.11/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.11/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.11/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.11/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.11/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.11/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.11/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.11/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.11/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.11/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.11/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.11/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.11/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.11/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.11/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.11/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.11/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.11/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.11/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.11/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.11/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.11/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.11/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.11/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="859" verifyTime="0.0446682" testport="//@interimmodels.11/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!27 -> prvapiwire_req?27 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!27 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!27 -> prvmsgwire_req?27 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!27 -> comwire_req?27 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!27 -> comwire_res?27 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!27 -> finwritewire_req?27 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!27 -> oraclefinwritewire_token?27 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!27 -> finwritewire_res?27 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!27 -> prvmsgwire_res?27 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!27 -> prvapiwire_res?27 -> admsgwire_pub?27 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.11/@designmodel" counterExample="" visitedStates="32" verifyTime="0.016218299999999998" testport="//@interimmodels.11/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!21 -> iotreqwire_req?21 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!21 -> prvmsgwire_req?21 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!21 -> comwire_req?21 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!21 -> comwire_res?21 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!21 -> finwritewire_req?21 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!21 -> oraclefinwritewire_token?21 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!21 -> finwritewire_res?21 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!21 -> prvmsgwire_res?21 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!21 -> iotreqwire_res?21" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.11/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.11/@designmodel" visitedStates="10" verifyTime="0.0124906" testport="//@interimmodels.11/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!30 -> ibankwire_req?30 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!30 -> ibankwire_res?30" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.11/@designmodel" visitedStates="1100" verifyTime="0.039444099999999996" testport="//@interimmodels.11/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!26 -> prvapiwire_req?26 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!26 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!26 -> prvmsgwire_req?26 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!26 -> comwire_req?26 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!26 -> comwire_res?26 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!26 -> finwritewire_req?26 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!26 -> oraclefinwritewire_token?26 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!26 -> finwritewire_res?26 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!26 -> prvmsgwire_res?26 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!26 -> prvapiwire_res?26 -> admsgwire_pub?26 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.11/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.11/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.11/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="762" verifyTime="0.0322097" testport="//@interimmodels.11/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!63 -> prvapiwire_req?63 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!63 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!63 -> prvmsgwire_req?63 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!63 -> comwire_req?63 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!63 -> comwire_res?63 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!63 -> finwritewire_req?63 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!63 -> oraclefinwritewire_token?63 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!63 -> finwritewire_res?63 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!63 -> prvmsgwire_res?63 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!63 -> prvapiwire_res?63 -> admsgwire_pub?63 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0128688" testport="//@interimmodels.11/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!66 -> finreadwire_req?66 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!66 -> rofinreadwire_uid?66 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!66 -> rofinreadwire_res?66 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!66 -> finreadwire_res?66" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="10" verifyTime="0.0125425" testport="//@interimmodels.11/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_reader_process -> ctrlwire_req!20 -> ctrlwire_req?20 -> Commodity_ctrlwire_readstorage_invoke -> Commodity_liststate_listed -> Commodity_ctrlwire_readstorage_process -> ctrlwire_res!20 -> ctrlwire_res?20" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.11/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.11/@designmodel/@host.0/@node.0" namedport="//@interimmodels.11/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.11/@designmodel/@host.0/@node.0" namedport="//@interimmodels.11/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.11/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.11/@designmodel/@host.1/@node.0" namedport="//@interimmodels.11/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.11/@designmodel/@component.2 //@interimmodels.11/@designmodel/@component.3 //@interimmodels.11/@designmodel/@component.5 //@interimmodels.11/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.11/@designmodel/@host.2/@node.0" namedport="//@interimmodels.11/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.11/@designmodel/@host.2/@node.0" namedport="//@interimmodels.11/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.11/@designmodel/@host.2/@node.0" namedport="//@interimmodels.11/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.11/@designmodel/@component.10 //@interimmodels.11/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.11/@designmodel/@host.2/@node.1" namedport="//@interimmodels.11/@designmodel/@component.10/@port.0 //@interimmodels.11/@designmodel/@component.10/@port.1 //@interimmodels.11/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.11/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.11/@designmodel/@host.3/@node.0" namedport="//@interimmodels.11/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.11/@designmodel/@host.3/@node.0" namedport="//@interimmodels.11/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.11/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.11/@designmodel/@host.4/@node.0" namedport="//@interimmodels.11/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.11/@designmodel/@host.4/@node.0" namedport="//@interimmodels.11/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.11/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.11/@designmodel/@host.4/@node.1" namedport="//@interimmodels.11/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.11/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.11/@designmodel/@host.5/@node.0" namedport="//@interimmodels.11/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.11/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.11/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.11/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.11/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.11/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.11/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.11/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.11/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="16" description="deploy service: provenanceint" nextModel="//@interimmodels.13" isStable="true" name="deploy-service">
    <designmodel name="inter16">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.12/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.12/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.12/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.12/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.12/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.12/@designmodel/@connector.1/@role.1 //@interimmodels.12/@designmodel/@connector.4/@role.0 //@interimmodels.12/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.12/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.12/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.12/@designmodel/@connector.2/@role.1 //@interimmodels.12/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.12/@designmodel/@connector.4/@role.1 //@interimmodels.12/@designmodel/@connector.8/@role.0 //@interimmodels.12/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.12/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.12/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.12/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.12/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.12/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.12/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.12/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.12/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.12/@designmodel/@connector.9/@role.1 //@interimmodels.12/@designmodel/@connector.12/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.12/@designmodel/@connector.7/@role.1 //@interimmodels.12/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.12/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.12/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.12/@designmodel/@connector.10/@role.1 //@interimmodels.12/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.12/@designmodel/@connector.12/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.12/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.12/@designmodel/@connector.11/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.12/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.5/@role.0" connector="//@interimmodels.12/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.4/@role.0" connector="//@interimmodels.12/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.12/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.8/@role.0" connector="//@interimmodels.12/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="PSConnector,RuleEventCentre" connectortype="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0">
        <role name="publisher" roletype="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.4/@role.0" connector="//@interimmodels.12/@designmodel/@connector.5"/>
        <role name="subscriber" roletype="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.12/@designmodel/@connector.5"/>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.11/@role.0" connector="//@interimmodels.12/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.12/@designmodel/@connector.6/@role.0" connector="//@interimmodels.12/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.12/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.12/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.12/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.12/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.12/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.12/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.12/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.12/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.12/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.12/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.12/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.12/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.12/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.12/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.12/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.12/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.12/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.12/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.12/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.12/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.12/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.12/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.12/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.12/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.12/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.12/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.12/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.12/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.12/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.12/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.12/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.12/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.12/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.12/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.12/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.12/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.12/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.12/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.12/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.12/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.12/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="859" verifyTime="0.0323993" testport="//@interimmodels.12/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!72 -> prvapiwire_req?72 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!72 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!72 -> prvmsgwire_req?72 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!72 -> comwire_req?72 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!72 -> comwire_res?72 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!72 -> finwritewire_req?72 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!72 -> oraclefinwritewire_token?72 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!72 -> finwritewire_res?72 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!72 -> prvmsgwire_res?72 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!72 -> prvapiwire_res?72 -> admsgwire_pub?72 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.12/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.12/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0141357" testport="//@interimmodels.12/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!87 -> iotreqwire_req?87 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!87 -> prvmsgwire_req?87 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!87 -> comwire_req?87 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!87 -> comwire_res?87 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!87 -> finwritewire_req?87 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!87 -> oraclefinwritewire_token?87 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!87 -> finwritewire_res?87 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!87 -> prvmsgwire_res?87 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!87 -> iotreqwire_res?87" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.12/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.12/@designmodel" visitedStates="10" verifyTime="0.012426" testport="//@interimmodels.12/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!24 -> ibankwire_req?24 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!24 -> ibankwire_res?24" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.12/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.12/@designmodel" visitedStates="1100" verifyTime="0.11441849999999999" testport="//@interimmodels.12/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!79 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!79 -> oraclefinwritewire_token?79 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_pub?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.12/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.12/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.12/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="762" verifyTime="0.0398978" testport="//@interimmodels.12/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!41 -> prvapiwire_req?41 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!41 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!41 -> prvmsgwire_req?41 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!41 -> comwire_req?41 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!41 -> comwire_res?41 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!41 -> finwritewire_req?41 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!41 -> oraclefinwritewire_token?41 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!41 -> finwritewire_res?41 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!41 -> prvmsgwire_res?41 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!41 -> prvapiwire_res?41 -> admsgwire_pub?41 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.018619399999999998" testport="//@interimmodels.12/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!25 -> finreadwire_req?25 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!25 -> rofinreadwire_uid?25 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!25 -> rofinreadwire_res?25 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!25 -> finreadwire_res?25" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="10" verifyTime="0.0181565" testport="//@interimmodels.12/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_reader_process -> ctrlwire_req!10 -> ctrlwire_req?10 -> Commodity_ctrlwire_readstorage_invoke -> Commodity_liststate_listed -> Commodity_ctrlwire_readstorage_process -> ctrlwire_res!10 -> ctrlwire_res?10" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.12/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.12/@designmodel/@host.0/@node.0" namedport="//@interimmodels.12/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.12/@designmodel/@host.0/@node.0" namedport="//@interimmodels.12/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.12/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.12/@designmodel/@host.1/@node.0" namedport="//@interimmodels.12/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.12/@designmodel/@component.2 //@interimmodels.12/@designmodel/@component.3 //@interimmodels.12/@designmodel/@component.5 //@interimmodels.12/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.12/@designmodel/@host.2/@node.0" namedport="//@interimmodels.12/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.12/@designmodel/@host.2/@node.0" namedport="//@interimmodels.12/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.12/@designmodel/@host.2/@node.0" namedport="//@interimmodels.12/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.12/@designmodel/@component.10 //@interimmodels.12/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.12/@designmodel/@host.2/@node.1" namedport="//@interimmodels.12/@designmodel/@component.10/@port.0 //@interimmodels.12/@designmodel/@component.10/@port.1 //@interimmodels.12/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.12/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.12/@designmodel/@host.3/@node.0" namedport="//@interimmodels.12/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.12/@designmodel/@host.3/@node.0" namedport="//@interimmodels.12/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.12/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.12/@designmodel/@host.4/@node.0" namedport="//@interimmodels.12/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.12/@designmodel/@host.4/@node.0" namedport="//@interimmodels.12/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.12/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.12/@designmodel/@host.4/@node.1" namedport="//@interimmodels.12/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.12/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.12/@designmodel/@host.5/@node.0" namedport="//@interimmodels.12/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.12/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.12/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.12/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.12/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.12/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.12/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.12/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.12/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="17" description="network route for connector:admsgwire between: provenanceint adwebapp " nextModel="//@interimmodels.14" name="network-route">
    <designmodel name="inter17">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.13/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.13/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.13/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.13/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.13/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.13/@designmodel/@connector.1/@role.1 //@interimmodels.13/@designmodel/@connector.4/@role.0 //@interimmodels.13/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.13/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.13/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.13/@designmodel/@connector.2/@role.1 //@interimmodels.13/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.13/@designmodel/@connector.4/@role.1 //@interimmodels.13/@designmodel/@connector.8/@role.0 //@interimmodels.13/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.13/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.13/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.13/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.13/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.13/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.13/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.13/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.13/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.13/@designmodel/@connector.9/@role.1 //@interimmodels.13/@designmodel/@connector.12/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.13/@designmodel/@connector.7/@role.1 //@interimmodels.13/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.13/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.13/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.13/@designmodel/@connector.10/@role.1 //@interimmodels.13/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.13/@designmodel/@connector.12/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.13/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.13/@designmodel/@connector.11/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.13/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.5/@role.0" connector="//@interimmodels.13/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.4/@role.0" connector="//@interimmodels.13/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.13/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.8/@role.0" connector="//@interimmodels.13/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.4/@role.0" connector="//@interimmodels.13/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.13/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.11/@role.0" connector="//@interimmodels.13/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.13/@designmodel/@connector.6/@role.0" connector="//@interimmodels.13/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.13/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.13/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.13/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.13/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.13/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.13/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.13/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.13/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.13/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.13/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.13/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.13/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.13/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.13/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.13/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.13/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.13/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.13/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.13/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.13/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.13/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.13/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.13/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.13/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.13/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.13/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.13/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.13/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.13/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.13/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.13/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.13/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.13/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.13/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.13/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.13/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.13/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.13/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.13/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.13/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.13/@designmodel" valid="false" counterExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!96 -> roctrlwire_uid?96 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!96 -> roctrlwire_res?96 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!27 -> prvapiwire_req?27 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!27" visitedStates="30" verifyTime="0.0188359" testport="//@interimmodels.13/@designmodel/@component.3/@port.0" traceExample="********Verification Result********&#xD;&#xA;The Assertion (inter17() |= ![](ProvenanceInt_prvpub_prvevntpublish->&lt;" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.13/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.13/@designmodel" counterExample="" visitedStates="599" verifyTime="0.028706199999999998" testport="//@interimmodels.13/@designmodel/@component.7/@port.0" traceExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!61 -> roctrlwire_uid?61 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!61 -> roctrlwire_res?61 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!44 -> iotreqwire_req?44 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!44 -> prvmsgwire_req?44 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!44 -> comwire_req?44 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!44 -> comwire_res?44 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!44 -> finwritewire_req?44 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!44 -> oraclefinwritewire_token?44 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!44 -> finwritewire_res?44 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!44 -> prvmsgwire_res?44 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!44 -> iotreqwire_res?44" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.13/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.13/@designmodel" visitedStates="181" verifyTime="0.0179637" testport="//@interimmodels.13/@designmodel/@component.8/@port.0" traceExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!19 -> roctrlwire_uid?19 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!19 -> roctrlwire_res?19 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!61 -> ibankwire_req?61 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!61 -> ibankwire_res?61" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.13/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.13/@designmodel" valid="false" counterExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!12 -> roctrlwire_uid?12 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!12 -> roctrlwire_res?12 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!67 -> prvapiwire_req?67 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!67" visitedStates="30" verifyTime="0.016311199999999998" testport="//@interimmodels.13/@designmodel/@component.3/@port.0" traceExample="********Verification Result********&#xD;&#xA;The Assertion (inter17() |= ![](ProvenanceInt_prvpub_prvevntpublish->&lt;" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.13/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.13/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.13/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="162" verifyTime="0.0169733" testport="//@interimmodels.13/@designmodel/@component.3/@port.0" traceExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!83 -> roctrlwire_uid?83 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!83 -> roctrlwire_res?83 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!70 -> prvapiwire_req?70 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!70" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="409" verifyTime="0.021466199999999998" testport="//@interimmodels.13/@designmodel/@component.6/@port.0" traceExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!97 -> roctrlwire_uid?97 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!97 -> roctrlwire_res?97 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!11 -> finreadwire_req?11 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!11 -> rofinreadwire_uid?11 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!11 -> rofinreadwire_res?11 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!11 -> finreadwire_res?11" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="88" verifyTime="0.0172621" testport="//@interimmodels.13/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_reader_process -> ctrlwire_req!50 -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!19 -> roctrlwire_uid?19 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!19 -> roctrlwire_res?19 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" valid="false" counterExample="init -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!54 -> roctrlwire_uid?54 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!54 -> roctrlwire_res?54 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!29 -> prvapiwire_req?29 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!29" visitedStates="30" verifyTime="0.0172596" testport="//@interimmodels.13/@designmodel/@component.3/@port.0" traceExample="********Verification Result********&#xD;&#xA;The Assertion (inter17() |= ![](ProvenanceInt_prvpub_prvevntpublish->&lt;" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.13/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.13/@designmodel/@host.0/@node.0" namedport="//@interimmodels.13/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.13/@designmodel/@host.0/@node.0" namedport="//@interimmodels.13/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.13/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.13/@designmodel/@host.1/@node.0" namedport="//@interimmodels.13/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.13/@designmodel/@component.2 //@interimmodels.13/@designmodel/@component.3 //@interimmodels.13/@designmodel/@component.5 //@interimmodels.13/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.13/@designmodel/@host.2/@node.0" namedport="//@interimmodels.13/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.13/@designmodel/@host.2/@node.0" namedport="//@interimmodels.13/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.13/@designmodel/@host.2/@node.0" namedport="//@interimmodels.13/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.13/@designmodel/@component.10 //@interimmodels.13/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.13/@designmodel/@host.2/@node.1" namedport="//@interimmodels.13/@designmodel/@component.10/@port.0 //@interimmodels.13/@designmodel/@component.10/@port.1 //@interimmodels.13/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.13/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.13/@designmodel/@host.3/@node.0" namedport="//@interimmodels.13/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.13/@designmodel/@host.3/@node.0" namedport="//@interimmodels.13/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.13/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.13/@designmodel/@host.4/@node.0" namedport="//@interimmodels.13/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.13/@designmodel/@host.4/@node.0" namedport="//@interimmodels.13/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.13/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.13/@designmodel/@host.4/@node.1" namedport="//@interimmodels.13/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.13/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.13/@designmodel/@host.5/@node.0" namedport="//@interimmodels.13/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.13/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.13/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.13/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.13/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.13/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.13/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.13/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.13/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="18" description="network route for connector:admsgwire between: provenanceint admsgwirelog " nextModel="//@interimmodels.15" isStable="true" name="network-route">
    <designmodel name="inter18">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.14/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.14/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.14/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.14/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.14/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.14/@designmodel/@connector.1/@role.1 //@interimmodels.14/@designmodel/@connector.4/@role.0 //@interimmodels.14/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.14/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.14/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.14/@designmodel/@connector.2/@role.1 //@interimmodels.14/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.14/@designmodel/@connector.4/@role.1 //@interimmodels.14/@designmodel/@connector.8/@role.0 //@interimmodels.14/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.14/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.14/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.14/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.14/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.14/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.14/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.14/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.14/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.14/@designmodel/@connector.9/@role.1 //@interimmodels.14/@designmodel/@connector.12/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.14/@designmodel/@connector.7/@role.1 //@interimmodels.14/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.14/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.14/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.14/@designmodel/@connector.10/@role.1 //@interimmodels.14/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.14/@designmodel/@connector.12/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.14/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.14/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.14/@designmodel/@connector.11/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.14/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.5/@role.0" connector="//@interimmodels.14/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.4/@role.0" connector="//@interimmodels.14/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.14/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.8/@role.0" connector="//@interimmodels.14/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.4/@role.0" connector="//@interimmodels.14/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.14/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.11/@role.0" connector="//@interimmodels.14/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.14/@designmodel/@connector.6/@role.0" connector="//@interimmodels.14/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.14/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.14/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.14/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.14/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.14/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.14/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.14/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.14/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.14/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.14/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.14/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.14/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.14/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.14/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.14/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.14/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.14/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.14/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.14/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.14/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.14/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.14/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.14/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.14/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.14/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.14/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.14/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.14/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.14/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.14/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.14/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.14/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.14/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.14/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.14/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.14/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.14/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.14/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.14/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.14/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.14/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="2150" verifyTime="0.0745666" testport="//@interimmodels.14/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!37 -> prvapiwire_req?37 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!37 -> admsgwire_pevt?37 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!37 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?37 -> admsgwire_bevt!37 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!37 -> prvmsgwire_req?37 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!37 -> comwire_req?37 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!37 -> comwire_res?37 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!37 -> finwritewire_req?37 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!37 -> oraclefinwritewire_token?37 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!37 -> finwritewire_res?37 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!37 -> prvmsgwire_res?37 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!37 -> prvapiwire_res?37 -> admsgwire_bevt?37 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.14/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.14/@designmodel" counterExample="" visitedStates="32" verifyTime="0.026404999999999998" testport="//@interimmodels.14/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!61 -> iotreqwire_req?61 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!61 -> prvmsgwire_req?61 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!61 -> comwire_req?61 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!61 -> comwire_res?61 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!61 -> finwritewire_req?61 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!61 -> oraclefinwritewire_token?61 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!61 -> finwritewire_res?61 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!61 -> prvmsgwire_res?61 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!61 -> iotreqwire_res?61" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.14/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.14/@designmodel" visitedStates="10" verifyTime="0.026324499999999997" testport="//@interimmodels.14/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!67 -> ibankwire_req?67 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!67 -> ibankwire_res?67" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.14/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.14/@designmodel" visitedStates="2732" verifyTime="0.08859539999999999" testport="//@interimmodels.14/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!76 -> prvapiwire_req?76 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!76 -> admsgwire_pevt?76 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!76 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?76 -> admsgwire_bevt!76 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!76 -> prvmsgwire_req?76 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!76 -> comwire_req?76 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!76 -> comwire_res?76 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!76 -> finwritewire_req?76 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!76 -> oraclefinwritewire_token?76 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!76 -> finwritewire_res?76 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!76 -> prvmsgwire_res?76 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!76 -> prvapiwire_res?76 -> admsgwire_bevt?76 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.14/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.14/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.14/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="1875" verifyTime="0.0680388" testport="//@interimmodels.14/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!65 -> prvapiwire_req?65 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!65 -> admsgwire_pevt?65 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!65 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?65 -> admsgwire_bevt!65 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!65 -> prvmsgwire_req?65 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!65 -> comwire_req?65 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!65 -> comwire_res?65 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!65 -> finwritewire_req?65 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!65 -> oraclefinwritewire_token?65 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!65 -> finwritewire_res?65 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!65 -> prvmsgwire_res?65 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!65 -> prvapiwire_res?65 -> admsgwire_bevt?65 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0239121" testport="//@interimmodels.14/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!87 -> finreadwire_req?87 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!87 -> rofinreadwire_uid?87 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!87 -> rofinreadwire_res?87 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!87 -> finreadwire_res?87" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="10" verifyTime="0.026199499999999997" testport="//@interimmodels.14/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_reader_process -> ctrlwire_req!75 -> ctrlwire_req?75 -> Commodity_ctrlwire_readstorage_invoke -> Commodity_liststate_listed -> Commodity_ctrlwire_readstorage_process -> ctrlwire_res!75 -> ctrlwire_res?75" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" visitedStates="2644" verifyTime="0.0844471" testport="//@interimmodels.14/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!75 -> admsgwire_pevt?75 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!75 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?75 -> admsgwire_bevt!75 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!75 -> oraclefinwritewire_token?75 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_bevt?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.14/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.14/@designmodel/@host.0/@node.0" namedport="//@interimmodels.14/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.14/@designmodel/@host.0/@node.0" namedport="//@interimmodels.14/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.14/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.14/@designmodel/@host.1/@node.0" namedport="//@interimmodels.14/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.14/@designmodel/@component.2 //@interimmodels.14/@designmodel/@component.3 //@interimmodels.14/@designmodel/@component.5 //@interimmodels.14/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.14/@designmodel/@host.2/@node.0" namedport="//@interimmodels.14/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.14/@designmodel/@host.2/@node.0" namedport="//@interimmodels.14/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.14/@designmodel/@host.2/@node.0" namedport="//@interimmodels.14/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.14/@designmodel/@component.10 //@interimmodels.14/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.14/@designmodel/@host.2/@node.1" namedport="//@interimmodels.14/@designmodel/@component.10/@port.0 //@interimmodels.14/@designmodel/@component.10/@port.1 //@interimmodels.14/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.14/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.14/@designmodel/@host.3/@node.0" namedport="//@interimmodels.14/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.14/@designmodel/@host.3/@node.0" namedport="//@interimmodels.14/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.14/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.14/@designmodel/@host.4/@node.0" namedport="//@interimmodels.14/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.14/@designmodel/@host.4/@node.0" namedport="//@interimmodels.14/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.14/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.14/@designmodel/@host.4/@node.1" namedport="//@interimmodels.14/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.14/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.14/@designmodel/@host.5/@node.0" namedport="//@interimmodels.14/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.14/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.14/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.14/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.14/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.14/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.14/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.14/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.14/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="20" description="deploy service: commodityoracle" nextModel="//@interimmodels.16" isStable="true" name="deploy-service">
    <designmodel name="inter20">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.15/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.15/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.15/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.15/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.15/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.15/@designmodel/@connector.1/@role.1 //@interimmodels.15/@designmodel/@connector.4/@role.0 //@interimmodels.15/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.15/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.15/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.15/@designmodel/@connector.2/@role.1 //@interimmodels.15/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.15/@designmodel/@connector.4/@role.1 //@interimmodels.15/@designmodel/@connector.8/@role.0 //@interimmodels.15/@designmodel/@connector.6/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.15/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.15/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.15/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.15/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.15/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.15/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.15/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.1">
        <port name="logstate" role="//@interimmodels.15/@designmodel/@connector.8/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.15/@designmodel/@connector.9/@role.1 //@interimmodels.15/@designmodel/@connector.12/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.15/@designmodel/@connector.7/@role.1 //@interimmodels.15/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.15/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.15/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.15/@designmodel/@connector.10/@role.1 //@interimmodels.15/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.15/@designmodel/@connector.12/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.15/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.15/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.15/@designmodel/@connector.11/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.15/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.5/@role.0" connector="//@interimmodels.15/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.4/@role.0" connector="//@interimmodels.15/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.15/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.8/@role.0" connector="//@interimmodels.15/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.4/@role.0" connector="//@interimmodels.15/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.15/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.11/@role.0" connector="//@interimmodels.15/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="WRConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.15/@designmodel/@connector.6/@role.0" connector="//@interimmodels.15/@designmodel/@connector.8"/>
        <role name="writestorage" roletype="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.15/@designmodel/@connector.8"/>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.15/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.15/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.15/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.15/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.15/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.15/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.15/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.15/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.15/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.15/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.15/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.15/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.15/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.15/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.15/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.15/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.15/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.15/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.15/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.15/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.15/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.15/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.15/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.15/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.15/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.15/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.15/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.15/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.15/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.15/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.15/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.15/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.15/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.15/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.15/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.15/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.15/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.15/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.15/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.15/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="2150" verifyTime="0.0726005" testport="//@interimmodels.15/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!18 -> prvapiwire_req?18 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!18 -> admsgwire_pevt?18 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!18 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?18 -> admsgwire_bevt!18 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!18 -> prvmsgwire_req?18 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!18 -> comwire_req?18 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!18 -> comwire_res?18 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!18 -> finwritewire_req?18 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!18 -> oraclefinwritewire_token?18 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!18 -> finwritewire_res?18 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!18 -> prvmsgwire_res?18 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!18 -> prvapiwire_res?18 -> admsgwire_bevt?18 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.15/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.15/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0837091" testport="//@interimmodels.15/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!60 -> iotreqwire_req?60 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!60 -> prvmsgwire_req?60 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!60 -> comwire_req?60 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!60 -> comwire_res?60 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!60 -> finwritewire_req?60 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!60 -> oraclefinwritewire_token?60 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!60 -> finwritewire_res?60 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!60 -> prvmsgwire_res?60 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!60 -> iotreqwire_res?60" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.15/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.15/@designmodel" visitedStates="10" verifyTime="0.0321617" testport="//@interimmodels.15/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!23 -> ibankwire_req?23 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!23 -> ibankwire_res?23" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.15/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.15/@designmodel" visitedStates="2732" verifyTime="0.1102307" testport="//@interimmodels.15/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!48 -> prvapiwire_req?48 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!48 -> admsgwire_pevt?48 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!48 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?48 -> admsgwire_bevt!48 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!48 -> prvmsgwire_req?48 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!48 -> comwire_req?48 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!48 -> comwire_res?48 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!48 -> finwritewire_req?48 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!48 -> oraclefinwritewire_token?48 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!48 -> finwritewire_res?48 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!48 -> prvmsgwire_res?48 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!48 -> prvapiwire_res?48 -> admsgwire_bevt?48 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.15/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.15/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.15/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="1875" verifyTime="0.0738067" testport="//@interimmodels.15/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!79 -> prvapiwire_req?79 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!79 -> admsgwire_pevt?79 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!79 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?79 -> admsgwire_bevt!79 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!79 -> prvmsgwire_req?79 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!79 -> comwire_req?79 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!79 -> comwire_res?79 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!79 -> finwritewire_req?79 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!79 -> oraclefinwritewire_token?79 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!79 -> finwritewire_res?79 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!79 -> prvmsgwire_res?79 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!79 -> prvapiwire_res?79 -> admsgwire_bevt?79 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.027339" testport="//@interimmodels.15/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!43 -> finreadwire_req?43 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!43 -> rofinreadwire_uid?43 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!43 -> rofinreadwire_res?43 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!43 -> finreadwire_res?43" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="10" verifyTime="0.0240025" testport="//@interimmodels.15/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_reader_process -> ctrlwire_req!96 -> ctrlwire_req?96 -> Commodity_ctrlwire_readstorage_invoke -> Commodity_liststate_listed -> Commodity_ctrlwire_readstorage_process -> ctrlwire_res!96 -> ctrlwire_res?96" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" visitedStates="2644" verifyTime="0.09016099999999999" testport="//@interimmodels.15/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!43 -> prvapiwire_req?43 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!43 -> admsgwire_pevt?43 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!43 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?43 -> admsgwire_bevt!43 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!43 -> prvmsgwire_req?43 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!43 -> comwire_req?43 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!43 -> comwire_res?43 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!43 -> finwritewire_req?43 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!43 -> oraclefinwritewire_token?43 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!43 -> finwritewire_res?43 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!43 -> prvmsgwire_res?43 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!43 -> prvapiwire_res?43 -> admsgwire_bevt?43 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.15/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.15/@designmodel/@host.0/@node.0" namedport="//@interimmodels.15/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.15/@designmodel/@host.0/@node.0" namedport="//@interimmodels.15/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.15/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.15/@designmodel/@host.1/@node.0" namedport="//@interimmodels.15/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.15/@designmodel/@component.2 //@interimmodels.15/@designmodel/@component.3 //@interimmodels.15/@designmodel/@component.5 //@interimmodels.15/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.15/@designmodel/@host.2/@node.0" namedport="//@interimmodels.15/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.15/@designmodel/@host.2/@node.0" namedport="//@interimmodels.15/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.15/@designmodel/@host.2/@node.0" namedport="//@interimmodels.15/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.15/@designmodel/@component.10 //@interimmodels.15/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.15/@designmodel/@host.2/@node.1" namedport="//@interimmodels.15/@designmodel/@component.10/@port.0 //@interimmodels.15/@designmodel/@component.10/@port.1 //@interimmodels.15/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.15/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.15/@designmodel/@host.3/@node.0" namedport="//@interimmodels.15/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.15/@designmodel/@host.3/@node.0" namedport="//@interimmodels.15/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.15/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.15/@designmodel/@host.4/@node.0" namedport="//@interimmodels.15/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.15/@designmodel/@host.4/@node.0" namedport="//@interimmodels.15/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.15/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.15/@designmodel/@host.4/@node.1" namedport="//@interimmodels.15/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.15/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.15/@designmodel/@host.5/@node.0" namedport="//@interimmodels.15/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.15/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.15/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.15/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.15/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.15/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.15/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.15/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.15/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="21" description="network route for connector:comwire between: bcintegrator commodityoracle " nextModel="//@interimmodels.17" isStable="true" name="network-route">
    <designmodel name="inter21">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.16/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.16/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.16/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.16/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.16/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.16/@designmodel/@connector.1/@role.1 //@interimmodels.16/@designmodel/@connector.4/@role.0 //@interimmodels.16/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.16/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.16/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.16/@designmodel/@connector.2/@role.1 //@interimmodels.16/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.16/@designmodel/@connector.4/@role.1 //@interimmodels.16/@designmodel/@connector.6/@role.0 //@interimmodels.16/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.16/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.16/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.16/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.16/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.16/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.16/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.16/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.16/@designmodel/@connector.9/@role.1 //@interimmodels.16/@designmodel/@connector.12/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.16/@designmodel/@connector.7/@role.1 //@interimmodels.16/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.16/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.16/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.16/@designmodel/@connector.10/@role.1 //@interimmodels.16/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.16/@designmodel/@connector.12/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.16/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.16/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.16/@designmodel/@connector.11/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.16/@designmodel/@connector.8/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.16/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.5/@role.0" connector="//@interimmodels.16/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.4/@role.0" connector="//@interimmodels.16/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.16/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.8/@role.0" connector="//@interimmodels.16/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.4/@role.0" connector="//@interimmodels.16/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.16/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.11/@role.0" connector="//@interimmodels.16/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.16/@designmodel/@connector.6/@role.0" connector="//@interimmodels.16/@designmodel/@connector.8"/>
        <role name="responder" type="in">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <nextRoleExpr href="target.arch#//@connector.10/@role.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.16/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.16/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.16/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.16/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.16/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.16/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.16/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.16/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.16/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.16/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.16/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.16/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.16/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.16/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.16/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.16/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.16/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.16/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.16/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.16/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.16/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.16/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.16/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.16/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.16/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.16/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.16/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.16/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.16/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.16/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.16/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.16/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.16/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.16/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.16/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.16/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.16/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.16/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.16/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.16/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="340" verifyTime="0.0096983" testport="//@interimmodels.16/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!60 -> prvapiwire_req?60 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!60 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!60 -> prvmsgwire_req?60 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!60 -> comwire_req?60 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!60 -> comwire_res?60 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!60 -> finwritewire_req?60 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!60 -> finwritewire_res?60 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!60 -> prvmsgwire_res?60 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!60 -> prvapiwire_res?60 -> admsgwire_pub?60 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.16/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.16/@designmodel" counterExample="" visitedStates="32" verifyTime="0.0070144" testport="//@interimmodels.16/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!10 -> iotreqwire_req?10 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!10 -> prvmsgwire_req?10 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!10 -> comwire_req?10 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!10 -> comwire_res?10 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!10 -> finwritewire_req?10 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!10 -> finwritewire_res?10 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!10 -> prvmsgwire_res?10 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!10 -> iotreqwire_res?10" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.16/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.16/@designmodel" visitedStates="10" verifyTime="0.0040143999999999996" testport="//@interimmodels.16/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!22 -> ibankwire_req?22 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!22 -> ibankwire_res?22" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.16/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.16/@designmodel" visitedStates="346" verifyTime="0.011949699999999999" testport="//@interimmodels.16/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!75 -> prvapiwire_req?75 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!75 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!75 -> prvmsgwire_req?75 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!75 -> comwire_req?75 -> Commodity_comwire_writestorage_invoke -> Commodity_logstate_statelogged -> Commodity_comwire_writestorage_process -> comwire_res!75 -> comwire_res?75 -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!75 -> finwritewire_req?75 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_translog_translogged -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!75 -> finwritewire_res?75 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!75 -> prvmsgwire_res?75 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!75 -> prvapiwire_res?75 -> admsgwire_pub?75 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.16/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.16/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.16/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="10653" verifyTime="0.3573336" testport="//@interimmodels.16/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!56 -> prvapiwire_req?56 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!56 -> admsgwire_pevt?56 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!56 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?56 -> admsgwire_bevt!56 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!56 -> prvmsgwire_req?56 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!56 -> comwire_req?56 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!56 -> CommodityOracle_comwire_responder_process -> comwire_res!56 -> oraclecomwire_token?56 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?56 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!56 -> finwritewire_req?56 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!56 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!56 -> oraclefinwritewire_token?56 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?56 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!56 -> prvmsgwire_res?56 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!56 -> prvapiwire_res?56 -> admsgwire_bevt?56 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.044183799999999995" testport="//@interimmodels.16/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!53 -> finreadwire_req?53 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!53 -> rofinreadwire_uid?53 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!53 -> rofinreadwire_res?53 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!53 -> finreadwire_res?53" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="22" verifyTime="0.0443173" testport="//@interimmodels.16/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_requester_process -> ctrlwire_req!40 -> ctrlwire_req?40 -> Commodity_ctrlwire_responder_invoke -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!40 -> roctrlwire_uid?40 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!40 -> roctrlwire_res?40 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> Commodity_roctrlwire_extquerier_Skip -> Commodity_ctrlwire_responder_process -> ctrlwire_res!40 -> ctrlwire_res?40" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" visitedStates="15241" verifyTime="0.47214839999999997" testport="//@interimmodels.16/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!11 -> prvapiwire_req?11 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!11 -> admsgwire_pevt?11 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!11 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?11 -> admsgwire_bevt!11 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!11 -> prvmsgwire_req?11 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!11 -> comwire_req?11 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!11 -> CommodityOracle_comwire_responder_process -> comwire_res!11 -> oraclecomwire_token?11 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?11 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!11 -> finwritewire_req?11 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!11 -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!11 -> oraclefinwritewire_token?11 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> finwritewire_res?11 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!11 -> prvmsgwire_res?11 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!11 -> prvapiwire_res?11 -> admsgwire_bevt?11 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.16/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.16/@designmodel/@host.0/@node.0" namedport="//@interimmodels.16/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.16/@designmodel/@host.0/@node.0" namedport="//@interimmodels.16/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.16/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.16/@designmodel/@host.1/@node.0" namedport="//@interimmodels.16/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.16/@designmodel/@component.2 //@interimmodels.16/@designmodel/@component.3 //@interimmodels.16/@designmodel/@component.5 //@interimmodels.16/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.16/@designmodel/@host.2/@node.0" namedport="//@interimmodels.16/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.16/@designmodel/@host.2/@node.0" namedport="//@interimmodels.16/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.16/@designmodel/@host.2/@node.0" namedport="//@interimmodels.16/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.16/@designmodel/@component.10 //@interimmodels.16/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.16/@designmodel/@host.2/@node.1" namedport="//@interimmodels.16/@designmodel/@component.10/@port.0 //@interimmodels.16/@designmodel/@component.10/@port.1 //@interimmodels.16/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.16/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.16/@designmodel/@host.3/@node.0" namedport="//@interimmodels.16/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.16/@designmodel/@host.3/@node.0" namedport="//@interimmodels.16/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.16/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.16/@designmodel/@host.4/@node.0" namedport="//@interimmodels.16/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.16/@designmodel/@host.4/@node.0" namedport="//@interimmodels.16/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.16/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.16/@designmodel/@host.4/@node.1" namedport="//@interimmodels.16/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.16/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.16/@designmodel/@host.5/@node.0" namedport="//@interimmodels.16/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.16/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.16/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.16/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.16/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.16/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.16/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.16/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.16/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="22" description="network route for connector:oraclecomwire between: commodityoracle commodityblockchain " nextModel="//@interimmodels.18" isStable="true" name="network-route">
    <designmodel name="inter22">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.17/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.17/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.17/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.17/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.17/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.17/@designmodel/@connector.1/@role.1 //@interimmodels.17/@designmodel/@connector.4/@role.0 //@interimmodels.17/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.17/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.17/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.17/@designmodel/@connector.2/@role.1 //@interimmodels.17/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.17/@designmodel/@connector.4/@role.1 //@interimmodels.17/@designmodel/@connector.6/@role.0 //@interimmodels.17/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.17/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.17/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.17/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.17/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.17/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.17/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.17/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.17/@designmodel/@connector.9/@role.1 //@interimmodels.17/@designmodel/@connector.12/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.17/@designmodel/@connector.7/@role.1 //@interimmodels.17/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.17/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.17/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.17/@designmodel/@connector.10/@role.1 //@interimmodels.17/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" role="//@interimmodels.17/@designmodel/@connector.13/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.17/@designmodel/@connector.12/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.17/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.17/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.17/@designmodel/@connector.11/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.17/@designmodel/@connector.8/@role.1 //@interimmodels.17/@designmodel/@connector.13/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.17/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.5/@role.0" connector="//@interimmodels.17/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.4/@role.0" connector="//@interimmodels.17/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.17/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.8/@role.0" connector="//@interimmodels.17/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.4/@role.0" connector="//@interimmodels.17/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.17/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.11/@role.0" connector="//@interimmodels.17/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.6/@role.0" connector="//@interimmodels.17/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.17/@designmodel/@connector.13/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.17/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.17/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.17/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.17/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.17/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.17/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.17/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.17/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="oraclecomwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.17/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.17/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.17/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.17/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.17/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.17/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.17/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.17/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.17/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.17/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.17/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.17/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.17/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.17/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.17/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.17/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.17/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.17/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.17/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.17/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.17/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.17/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.17/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.17/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.17/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.17/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.17/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.17/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.17/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.17/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.17/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.17/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.17/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.17/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="10784" verifyTime="0.37664519999999996" testport="//@interimmodels.17/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!96 -> prvapiwire_req?96 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!96 -> admsgwire_pevt?96 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!96 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?96 -> admsgwire_bevt!96 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!96 -> prvmsgwire_req?96 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!96 -> comwire_req?96 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!96 -> CommodityOracle_comwire_responder_process -> comwire_res!96 -> oraclecomwire_token?96 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?96 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!96 -> finwritewire_req?96 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!96 -> oraclefinwritewire_token?96 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!96 -> finwritewire_res?96 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!96 -> prvmsgwire_res?96 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!96 -> prvapiwire_res?96 -> admsgwire_bevt?96 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.17/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.17/@designmodel" counterExample="" visitedStates="16" verifyTime="0.0442092" testport="//@interimmodels.17/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!58 -> iotreqwire_req?58 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!58 -> prvmsgwire_req?58 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!58 -> comwire_req?58 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!58 -> CommodityOracle_comwire_responder_process -> comwire_res!58 -> oraclecomwire_token?58 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?58 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!58 -> finwritewire_req?58 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!58 -> oraclefinwritewire_token?58 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!58 -> finwritewire_res?58 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!58 -> prvmsgwire_res?58 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!58 -> iotreqwire_res?58" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.17/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.17/@designmodel" visitedStates="10" verifyTime="0.0464489" testport="//@interimmodels.17/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!85 -> ibankwire_req?85 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!85 -> ibankwire_res?85" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.17/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.17/@designmodel" visitedStates="15614" verifyTime="0.46972539999999996" testport="//@interimmodels.17/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!48 -> prvapiwire_req?48 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!48 -> admsgwire_pevt?48 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!48 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?48 -> admsgwire_bevt!48 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!48 -> prvmsgwire_req?48 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!48 -> comwire_req?48 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!48 -> CommodityOracle_comwire_responder_process -> comwire_res!48 -> oraclecomwire_token?48 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?48 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!48 -> finwritewire_req?48 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!48 -> oraclefinwritewire_token?48 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!48 -> finwritewire_res?48 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!48 -> prvmsgwire_res?48 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!48 -> prvapiwire_res?48 -> admsgwire_bevt?48 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.17/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.17/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.17/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="10653" verifyTime="0.3532125" testport="//@interimmodels.17/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!77 -> prvapiwire_req?77 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!77 -> admsgwire_pevt?77 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!77 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?77 -> admsgwire_bevt!77 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!77 -> prvmsgwire_req?77 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!77 -> comwire_req?77 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!77 -> CommodityOracle_comwire_responder_process -> comwire_res!77 -> oraclecomwire_token?77 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?77 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!77 -> finwritewire_req?77 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!77 -> oraclefinwritewire_token?77 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!77 -> finwritewire_res?77 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!77 -> prvmsgwire_res?77 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!77 -> prvapiwire_res?77 -> admsgwire_bevt?77 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0993502" testport="//@interimmodels.17/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!98 -> finreadwire_req?98 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!98 -> rofinreadwire_uid?98 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!98 -> rofinreadwire_res?98 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!98 -> finreadwire_res?98" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="10" verifyTime="0.052124" testport="//@interimmodels.17/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_reader_process -> ctrlwire_req!80 -> ctrlwire_req?80 -> Commodity_ctrlwire_readstorage_invoke -> Commodity_liststate_listed -> Commodity_ctrlwire_readstorage_process -> ctrlwire_res!80 -> ctrlwire_res?80" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" visitedStates="15241" verifyTime="0.5483001" testport="//@interimmodels.17/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!76 -> prvapiwire_req?76 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!76 -> admsgwire_pevt?76 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!76 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?76 -> admsgwire_bevt!76 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!76 -> prvmsgwire_req?76 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!76 -> comwire_req?76 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!76 -> CommodityOracle_comwire_responder_process -> comwire_res!76 -> oraclecomwire_token?76 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?76 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!76 -> finwritewire_req?76 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!76 -> oraclefinwritewire_token?76 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!76 -> finwritewire_res?76 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!76 -> prvmsgwire_res?76 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!76 -> prvapiwire_res?76 -> admsgwire_bevt?76 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclecomwire" visitedStates="10653" verifyTime="0.3615581" testport="//@interimmodels.17/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!72 -> prvapiwire_req?72 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!72 -> admsgwire_pevt?72 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!72 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?72 -> admsgwire_bevt!72 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!72 -> prvmsgwire_req?72 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!72 -> comwire_req?72 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!72 -> CommodityOracle_comwire_responder_process -> comwire_res!72 -> oraclecomwire_token?72 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?72 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!72 -> finwritewire_req?72 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!72 -> oraclefinwritewire_token?72 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!72 -> finwritewire_res?72 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!72 -> prvmsgwire_res?72 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!72 -> prvapiwire_res?72 -> admsgwire_bevt?72 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (CommodityOracle.supply.supplied-> &lt;> CommodityBlockchain.oraclecomwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.17/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.17/@designmodel/@host.0/@node.0" namedport="//@interimmodels.17/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.17/@designmodel/@host.0/@node.0" namedport="//@interimmodels.17/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.17/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.17/@designmodel/@host.1/@node.0" namedport="//@interimmodels.17/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.17/@designmodel/@component.2 //@interimmodels.17/@designmodel/@component.3 //@interimmodels.17/@designmodel/@component.5 //@interimmodels.17/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.17/@designmodel/@host.2/@node.0" namedport="//@interimmodels.17/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.17/@designmodel/@host.2/@node.0" namedport="//@interimmodels.17/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.17/@designmodel/@host.2/@node.0" namedport="//@interimmodels.17/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.17/@designmodel/@component.10 //@interimmodels.17/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.17/@designmodel/@host.2/@node.1" namedport="//@interimmodels.17/@designmodel/@component.10/@port.0 //@interimmodels.17/@designmodel/@component.10/@port.1 //@interimmodels.17/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.17/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.17/@designmodel/@host.3/@node.0" namedport="//@interimmodels.17/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.17/@designmodel/@host.3/@node.0" namedport="//@interimmodels.17/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.17/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.17/@designmodel/@host.4/@node.0" namedport="//@interimmodels.17/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.17/@designmodel/@host.4/@node.0" namedport="//@interimmodels.17/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.17/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.17/@designmodel/@host.4/@node.1" namedport="//@interimmodels.17/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.17/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.17/@designmodel/@host.5/@node.0" namedport="//@interimmodels.17/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.17/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.17/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.17/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.17/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.17/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.17/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.17/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.17/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="24" description="setup application: controller" nextModel="//@interimmodels.19" isStable="true" name="setup-application">
    <designmodel name="inter24">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.18/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.18/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.18/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.18/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.18/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.18/@designmodel/@connector.1/@role.1 //@interimmodels.18/@designmodel/@connector.4/@role.0 //@interimmodels.18/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.18/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.18/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.18/@designmodel/@connector.2/@role.1 //@interimmodels.18/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.18/@designmodel/@connector.4/@role.1 //@interimmodels.18/@designmodel/@connector.6/@role.0 //@interimmodels.18/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.18/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.18/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.18/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.18/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.18/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.18/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.18/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.18/@designmodel/@connector.9/@role.1 //@interimmodels.18/@designmodel/@connector.12/@role.0" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.18/@designmodel/@connector.7/@role.1 //@interimmodels.18/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.18/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.18/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.18/@designmodel/@connector.10/@role.1 //@interimmodels.18/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" role="//@interimmodels.18/@designmodel/@connector.13/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.18/@designmodel/@connector.12/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.18/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.18/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.18/@designmodel/@connector.11/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.18/@designmodel/@connector.8/@role.1 //@interimmodels.18/@designmodel/@connector.13/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.18/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.5/@role.0" connector="//@interimmodels.18/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.4/@role.0" connector="//@interimmodels.18/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.18/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.8/@role.0" connector="//@interimmodels.18/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.4/@role.0" connector="//@interimmodels.18/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.18/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.11/@role.0" connector="//@interimmodels.18/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.6/@role.0" connector="//@interimmodels.18/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.18/@designmodel/@connector.13/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="REConnector" connectortype="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.18/@designmodel/@connector.9"/>
        <role name="readstorage" roletype="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.18/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.18/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.18/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.18/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.18/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.18/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.18/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="oraclecomwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.18/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.18/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.18/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.18/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.18/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.18/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.18/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.18/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.18/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.18/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.18/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.18/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.18/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.18/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.18/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.18/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.18/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.18/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.18/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.18/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.18/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.18/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.18/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.18/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.18/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.18/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.18/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.18/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.18/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.18/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.18/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.18/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.18/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.18/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="10784" verifyTime="0.36685789999999996" testport="//@interimmodels.18/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!43 -> prvapiwire_req?43 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!43 -> admsgwire_pevt?43 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!43 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?43 -> admsgwire_bevt!43 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!43 -> prvmsgwire_req?43 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!43 -> comwire_req?43 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!43 -> CommodityOracle_comwire_responder_process -> comwire_res!43 -> oraclecomwire_token?43 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?43 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!43 -> finwritewire_req?43 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!43 -> oraclefinwritewire_token?43 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!43 -> finwritewire_res?43 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!43 -> prvmsgwire_res?43 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!43 -> prvapiwire_res?43 -> admsgwire_bevt?43 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.18/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.18/@designmodel" counterExample="" visitedStates="16" verifyTime="0.044823299999999996" testport="//@interimmodels.18/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!55 -> iotreqwire_req?55 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!55 -> prvmsgwire_req?55 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!55 -> comwire_req?55 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!55 -> CommodityOracle_comwire_responder_process -> comwire_res!55 -> oraclecomwire_token?55 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?55 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!55 -> finwritewire_req?55 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!55 -> oraclefinwritewire_token?55 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!55 -> finwritewire_res?55 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!55 -> prvmsgwire_res?55 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!55 -> iotreqwire_res?55" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.18/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.18/@designmodel" visitedStates="10" verifyTime="0.0466262" testport="//@interimmodels.18/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!31 -> ibankwire_req?31 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!31 -> ibankwire_res?31" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.18/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.18/@designmodel" visitedStates="15614" verifyTime="0.48859769999999997" testport="//@interimmodels.18/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!24 -> prvapiwire_req?24 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!24 -> admsgwire_pevt?24 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!24 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?24 -> admsgwire_bevt!24 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!24 -> prvmsgwire_req?24 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!24 -> comwire_req?24 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!24 -> CommodityOracle_comwire_responder_process -> comwire_res!24 -> oraclecomwire_token?24 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?24 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!24 -> finwritewire_req?24 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!24 -> oraclefinwritewire_token?24 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!24 -> finwritewire_res?24 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!24 -> prvmsgwire_res?24 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!24 -> prvapiwire_res?24 -> admsgwire_bevt?24 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.18/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.18/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.18/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="10653" verifyTime="0.3684768" testport="//@interimmodels.18/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!17 -> prvapiwire_req?17 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!17 -> admsgwire_pevt?17 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!17 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?17 -> admsgwire_bevt!17 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!17 -> prvmsgwire_req?17 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!17 -> comwire_req?17 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!17 -> CommodityOracle_comwire_responder_process -> comwire_res!17 -> oraclecomwire_token?17 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?17 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!17 -> finwritewire_req?17 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!17 -> oraclefinwritewire_token?17 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!17 -> finwritewire_res?17 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!17 -> prvmsgwire_res?17 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!17 -> prvapiwire_res?17 -> admsgwire_bevt?17 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.044840899999999996" testport="//@interimmodels.18/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!56 -> finreadwire_req?56 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!56 -> rofinreadwire_uid?56 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!56 -> rofinreadwire_res?56 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!56 -> finreadwire_res?56" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="10" verifyTime="0.0442145" testport="//@interimmodels.18/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_reader_process -> ctrlwire_req!96 -> ctrlwire_req?96 -> Commodity_ctrlwire_readstorage_invoke -> Commodity_liststate_listed -> Commodity_ctrlwire_readstorage_process -> ctrlwire_res!96 -> ctrlwire_res?96" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" visitedStates="15241" verifyTime="0.4819382" testport="//@interimmodels.18/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!64 -> prvapiwire_req?64 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!64 -> admsgwire_pevt?64 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!64 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?64 -> admsgwire_bevt!64 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!64 -> prvmsgwire_req?64 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!64 -> comwire_req?64 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!64 -> CommodityOracle_comwire_responder_process -> comwire_res!64 -> oraclecomwire_token?64 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?64 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!64 -> finwritewire_req?64 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!64 -> oraclefinwritewire_token?64 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!64 -> finwritewire_res?64 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!64 -> prvmsgwire_res?64 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!64 -> prvapiwire_res?64 -> admsgwire_bevt?64 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclecomwire" visitedStates="10653" verifyTime="0.3545992" testport="//@interimmodels.18/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!58 -> prvapiwire_req?58 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!58 -> admsgwire_pevt?58 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!58 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?58 -> admsgwire_bevt!58 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!58 -> prvmsgwire_req?58 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!58 -> comwire_req?58 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!58 -> CommodityOracle_comwire_responder_process -> comwire_res!58 -> oraclecomwire_token?58 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?58 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!58 -> finwritewire_req?58 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!58 -> oraclefinwritewire_token?58 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!58 -> finwritewire_res?58 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!58 -> prvmsgwire_res?58 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!58 -> prvapiwire_res?58 -> admsgwire_bevt?58 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (CommodityOracle.supply.supplied-> &lt;> CommodityBlockchain.oraclecomwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.18/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.18/@designmodel/@host.0/@node.0" namedport="//@interimmodels.18/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.18/@designmodel/@host.0/@node.0" namedport="//@interimmodels.18/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.18/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.18/@designmodel/@host.1/@node.0" namedport="//@interimmodels.18/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.18/@designmodel/@component.2 //@interimmodels.18/@designmodel/@component.3 //@interimmodels.18/@designmodel/@component.5 //@interimmodels.18/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.18/@designmodel/@host.2/@node.0" namedport="//@interimmodels.18/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.18/@designmodel/@host.2/@node.0" namedport="//@interimmodels.18/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.18/@designmodel/@host.2/@node.0" namedport="//@interimmodels.18/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.18/@designmodel/@component.10 //@interimmodels.18/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.18/@designmodel/@host.2/@node.1" namedport="//@interimmodels.18/@designmodel/@component.10/@port.0 //@interimmodels.18/@designmodel/@component.10/@port.1 //@interimmodels.18/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.18/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.18/@designmodel/@host.3/@node.0" namedport="//@interimmodels.18/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.18/@designmodel/@host.3/@node.0" namedport="//@interimmodels.18/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.18/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.18/@designmodel/@host.4/@node.0" namedport="//@interimmodels.18/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.18/@designmodel/@host.4/@node.0" namedport="//@interimmodels.18/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.18/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.18/@designmodel/@host.4/@node.1" namedport="//@interimmodels.18/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.18/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.18/@designmodel/@host.5/@node.0" namedport="//@interimmodels.18/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.18/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.18/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.18/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.18/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.18/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.18/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.18/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.18/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="25" description="network route for connector:ctrlwire between: controller commodity " isStable="true" name="network-route">
    <designmodel name="inter25">
      <component name="ADWebApp" type="client,listener,eventconsumer" deploymentnode="//@interimmodels.19/@designmodel/@host.0/@node.0">
        <port name="adconsume" role="//@interimmodels.19/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="adapirequest"/>
        </port>
        <port name="adnotify" role="//@interimmodels.19/@designmodel/@connector.5/@role.1" type="listen,InboundPort,EventProcessorPort">
          <events name="notified"/>
        </port>
      </component>
      <component name="ADWebAPI" type="server" deploymentnode="//@interimmodels.19/@designmodel/@host.1/@node.0">
        <port name="adprovide" role="//@interimmodels.19/@designmodel/@connector.0/@role.1" type="response,InboundPort">
          <events name="invoke"/>
        </port>
      </component>
      <component name="ProvenanceInt" type="client,server,broadcaster" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,DataTampering">
        <port name="prvpub" role="//@interimmodels.19/@designmodel/@connector.1/@role.1 //@interimmodels.19/@designmodel/@connector.4/@role.0 //@interimmodels.19/@designmodel/@connector.5/@role.0" type="request,response,broadcast,OutboundPort,InboundPort,EventProcessorPort">
          <events name="prvevntpublish"/>
        </port>
      </component>
      <component name="ProvenanceWebApp" type="client" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface">
        <port name="prvconsume" role="//@interimmodels.19/@designmodel/@connector.1/@role.0" type="request,OutboundPort">
          <events name="provenancerequest"/>
        </port>
      </component>
      <component name="IOTWebAPI" type="client,server" deploymentnode="//@interimmodels.19/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="iotpub" role="//@interimmodels.19/@designmodel/@connector.2/@role.1 //@interimmodels.19/@designmodel/@connector.4/@role.0" type="request,response,OutboundPort,InboundPort">
          <events name="updatestatus"/>
        </port>
      </component>
      <component name="BCIntegrator" type="server,datawriter" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,LeastPriviledge,DenialOfService">
        <port name="bcint" role="//@interimmodels.19/@designmodel/@connector.4/@role.1 //@interimmodels.19/@designmodel/@connector.6/@role.0 //@interimmodels.19/@designmodel/@connector.8/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="ackstate"/>
        </port>
      </component>
      <component name="DigitalWallet" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.19/@designmodel/@host.4/@node.0" securityCharacters="LeastPriviledge,Compartmentalization">
        <port name="pay" role="//@interimmodels.19/@designmodel/@connector.7/@role.0" type="read,OutboundPort">
          <events name="commit"/>
        </port>
        <port name="access" role="//@interimmodels.19/@designmodel/@connector.3/@role.1" type="response,InboundPort">
          <events name="accessed"/>
        </port>
      </component>
      <component name="IOTSensor" type="client" deploymentnode="//@interimmodels.19/@designmodel/@host.5/@node.0">
        <port name="sense" role="//@interimmodels.19/@designmodel/@connector.2/@role.0" type="request,OutboundPort">
          <events name="send"/>
        </port>
      </component>
      <component name="InternetBanking" type="client" deploymentnode="//@interimmodels.19/@designmodel/@host.4/@node.1">
        <port name="listaccount" role="//@interimmodels.19/@designmodel/@connector.3/@role.0" type="request,OutboundPort">
          <events name="renderlist"/>
        </port>
      </component>
      <component name="Commodity" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.1">
        <port name="logstate" type="store,InboundPort,TamperingProofPort">
          <events name="statelogged"/>
        </port>
        <port name="liststate" role="//@interimmodels.19/@designmodel/@connector.12/@role.0 //@interimmodels.19/@designmodel/@connector.9/@role.1" type="access,InboundPort,TamperingProofPort" attributes="">
          <events name="listed"/>
        </port>
      </component>
      <component name="FinanceTrans" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.1">
        <port name="translog" type="store,InboundPort,TamperingProofPort">
          <events name="translogged"/>
        </port>
        <port name="transquery" role="//@interimmodels.19/@designmodel/@connector.7/@role.1 //@interimmodels.19/@designmodel/@connector.11/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="queried"/>
        </port>
      </component>
      <component name="Controller" type="datareader,readendpoint" deploymentnode="//@interimmodels.19/@designmodel/@host.2/@node.0">
        <port name="monitor" role="//@interimmodels.19/@designmodel/@connector.9/@role.0" type="read,OutboundPort">
          <events name="listcommodity"/>
        </port>
      </component>
      <component name="FinanceTransOracle" type="server,oracle">
        <port name="financetranssupply" role="//@interimmodels.19/@designmodel/@connector.10/@role.1 //@interimmodels.19/@designmodel/@connector.6/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.6"/>
      </component>
      <component name="CommodityBlockchain" type="blockchain,datastore">
        <port name="comappend" role="//@interimmodels.19/@designmodel/@connector.13/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="comaccess" role="//@interimmodels.19/@designmodel/@connector.12/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.7/@node.0"/>
      </component>
      <component name="AdmsgwireLog" type="eventlogger,datastore">
        <port name="logadmsgwire" role="//@interimmodels.19/@designmodel/@connector.5/@role.2" type="log,InboundPort">
          <events name="logged"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.5"/>
      </component>
      <component name="FinanceTransBlockchain" type="blockchain,datastore">
        <port name="finappend" role="//@interimmodels.19/@designmodel/@connector.10/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="finaccess" role="//@interimmodels.19/@designmodel/@connector.11/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.6/@node.0"/>
      </component>
      <component name="CommodityOracle" type="server,oracle">
        <port name="commoditysupply" role="//@interimmodels.19/@designmodel/@connector.8/@role.1 //@interimmodels.19/@designmodel/@connector.13/@role.1" type="response,orafeed,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.2/@node.7"/>
      </component>
      <connector name="adapiwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.19/@designmodel/@connector.0"/>
        <communicationlink href="data.json#//@link.0"/>
      </connector>
      <connector name="prvapiwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DataTamperingConnector">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.1"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.5/@role.0" connector="//@interimmodels.19/@designmodel/@connector.1"/>
        <communicationlink href="data.json#//@link.1"/>
      </connector>
      <connector name="iotreqwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0" securityCharacters="ManInMiddleConnector,DenialOfServiceConnector">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.4/@role.0" connector="//@interimmodels.19/@designmodel/@connector.2"/>
        <communicationlink href="data.json#//@link.8"/>
      </connector>
      <connector name="ibankwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.3"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.19/@designmodel/@connector.3"/>
        <communicationlink href="data.json#//@link.10"/>
      </connector>
      <connector name="prvmsgwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.8/@role.0" connector="//@interimmodels.19/@designmodel/@connector.4"/>
      </connector>
      <connector name="admsgwire" type="ESConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0">
        <role name="eventpublisher" roletype="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.4/@role.0" connector="//@interimmodels.19/@designmodel/@connector.5"/>
        <role name="eventsubscriber" roletype="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.19/@designmodel/@connector.5"/>
        <role name="eventstore" type="in">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.2"/>
          <connector href="target.arch#//@connector.5"/>
        </role>
      </connector>
      <connector name="finwritewire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.6"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.10/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.6"/>
        </role>
      </connector>
      <connector name="finreadwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.7"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.11/@role.0" connector="//@interimmodels.19/@designmodel/@connector.7"/>
      </connector>
      <connector name="comwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.6/@role.0" connector="//@interimmodels.19/@designmodel/@connector.8"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.13/@role.1">
          <roletype href="target.arch#//@archstyle.0/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.8"/>
        </role>
      </connector>
      <connector name="ctrlwire" type="CSConnector" connectortype="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.19/@designmodel/@connector.9"/>
        <role name="responder" roletype="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.19/@designmodel/@connector.12/@role.0" connector="//@interimmodels.19/@designmodel/@connector.9"/>
      </connector>
      <connector name="oraclefinwritewire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.19/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.19/@designmodel/@connector.10">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <connector name="rofinreadwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.19/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.19/@designmodel/@connector.11">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="roctrlwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.19/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.19/@designmodel/@connector.12">
          <roletype href="target.arch#//@archstyle.4/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.4/@connectortype.0"/>
      </connector>
      <connector name="oraclecomwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.19/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.19/@designmodel/@connector.13">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.19/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.19/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector" eaConnector="//@interimmodels.19/@designmodel/@archstyle.0/@connectortype.0">
          <roletype name="publisher" porttype="//@interimmodels.19/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.19/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.19/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.19/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.19/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.2"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.19/@designmodel/@archstyle.2/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.19/@designmodel/@archstyle.2/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.19/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.19/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.19/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.19/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.19/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.19/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
            <event name="calculate" next="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.19/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.19/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.0"/>
            <event name="calculate" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.3" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.19/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.19/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.19/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.19/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.19/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.19/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.19/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.19/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.19/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.19/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.19/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.19/@designmodel/@archstyle.11/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.19/@designmodel/@archstyle.11/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.19/@designmodel" counterExample="init -> IOTWebAPI_prvmsgwire_requester_request -> prvmsgwire_req!73 -> prvmsgwire_req?73 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!73 -> comwire_req?73 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!73 -> comwire_res?73 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!73 -> finwritewire_req?73 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!73 -> finwritewire_res?73 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!73 -> prvmsgwire_res?73 -> IOTWebAPI_iotpub_published -> IOTWebAPI_prvmsgwire_requester_process -> ProvenanceWebApp_prvapiwire_requester_request -> prvapiwire_req!46 -> prvapiwire_req?46 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_publisher_process -> admsgwire_pub!46 -> ProvenanceInt_admsgwire_publisher_Skip -> ProvenanceInt_prvmsgwire_requester_request -> prvmsgwire_req!46 -> prvmsgwire_req?46 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_comwire_writer_request -> comwire_req!46 -> comwire_req?46 -> Commodity_comwire_writestorage_invoke -> Commodity_comwire_writestorage_process -> comwire_res!46 -> comwire_res?46 -> BCIntegrator_bcint_sendtobc -> BCIntegrator_comwire_writer_process -> BCIntegrator_comwire_writer_Skip -> BCIntegrator_finwritewire_writer_request -> finwritewire_req!46 -> finwritewire_req?46 -> FinanceTrans_finwritewire_writestorage_invoke -> FinanceTrans_finwritewire_writestorage_process -> finwritewire_res!46 -> finwritewire_res?46 -> BCIntegrator_finwritewire_writer_process -> BCIntegrator_finwritewire_writer_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!46 -> prvmsgwire_res?46 -> ProvenanceInt_prvmsgwire_requester_process -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!46 -> prvapiwire_res?46 -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> admsgwire_pub?46 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_subscriber_process" visitedStates="10784" verifyTime="0.34947419999999996" testport="//@interimmodels.19/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!93 -> prvapiwire_req?93 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!93 -> admsgwire_pevt?93 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!93 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?93 -> admsgwire_bevt!93 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!93 -> prvmsgwire_req?93 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!93 -> comwire_req?93 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!93 -> CommodityOracle_comwire_responder_process -> comwire_res!93 -> oraclecomwire_token?93 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?93 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!93 -> finwritewire_req?93 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!93 -> oraclefinwritewire_token?93 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!93 -> finwritewire_res?93 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!93 -> prvmsgwire_res?93 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!93 -> prvapiwire_res?93 -> admsgwire_bevt?93 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.19/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.19/@designmodel" counterExample="" visitedStates="16" verifyTime="0.043100099999999995" testport="//@interimmodels.19/@designmodel/@component.7/@port.0" traceExample="init -> IOTSensor_sense_send -> IOTSensor_iotreqwire_requester_process -> iotreqwire_req!43 -> iotreqwire_req?43 -> IOTWebAPI_iotreqwire_responder_invoke -> IOTWebAPI_iotpub_updatestatus -> IOTWebAPI_prvmsgwire_requester_process -> prvmsgwire_req!43 -> prvmsgwire_req?43 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!43 -> comwire_req?43 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!43 -> CommodityOracle_comwire_responder_process -> comwire_res!43 -> oraclecomwire_token?43 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?43 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!43 -> finwritewire_req?43 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!43 -> oraclefinwritewire_token?43 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!43 -> finwritewire_res?43 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!43 -> prvmsgwire_res?43 -> IOTWebAPI_prvmsgwire_requester_Skip -> IOTWebAPI_iotreqwire_responder_process -> iotreqwire_res!43 -> iotreqwire_res?43" exprText=" (&lt;> IOTWebAPI.iotpub.updatestatus -> &lt;> BCIntegrator.bcint.ackstate)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.19/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.5/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.19/@designmodel" visitedStates="10" verifyTime="0.0461054" testport="//@interimmodels.19/@designmodel/@component.8/@port.0" traceExample="init -> InternetBanking_listaccount_renderlist -> InternetBanking_ibankwire_requester_process -> ibankwire_req!37 -> ibankwire_req?37 -> DigitalWallet_ibankwire_responder_invoke -> DigitalWallet_access_accessed -> DigitalWallet_ibankwire_responder_process -> ibankwire_res!37 -> ibankwire_res?37" exprText="[]  (FinanceTrans.transquery.queried -> &lt;> InternetBanking.listaccount.renderlist)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.19/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.10/@port.1/@events.0" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.8/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.19/@designmodel" visitedStates="15614" verifyTime="0.4941679" testport="//@interimmodels.19/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!49 -> prvapiwire_req?49 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!49 -> admsgwire_pevt?49 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!49 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?49 -> admsgwire_bevt!49 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!49 -> prvmsgwire_req?49 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!49 -> comwire_req?49 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!49 -> CommodityOracle_comwire_responder_process -> comwire_res!49 -> oraclecomwire_token?49 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?49 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!49 -> finwritewire_req?49 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!49 -> oraclefinwritewire_token?49 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!49 -> finwritewire_res?49 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!49 -> prvmsgwire_res?49 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!49 -> prvapiwire_res?49 -> admsgwire_bevt?49 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[]  (ProvenanceInt.prvpub.prvevntpublish -> &lt;> ADWebApp.adnotify.notified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.19/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.0/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.19/@designmodel/@component.2/@port.0/@events.0" nextExpr="//@interimmodels.19/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclefinwritewire" visitedStates="10653" verifyTime="0.3529558" testport="//@interimmodels.19/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!83 -> prvapiwire_req?83 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!83 -> admsgwire_pevt?83 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!83 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?83 -> admsgwire_bevt!83 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!83 -> prvmsgwire_req?83 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!83 -> comwire_req?83 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!83 -> CommodityOracle_comwire_responder_process -> comwire_res!83 -> oraclecomwire_token?83 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?83 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!83 -> finwritewire_req?83 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!83 -> oraclefinwritewire_token?83 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!83 -> finwritewire_res?83 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!83 -> prvmsgwire_res?83 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!83 -> prvapiwire_res?83 -> admsgwire_bevt?83 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (FinanceTransOracle.supply.supplied-> &lt;> FinanceTransBlockchain.oraclefinwritewire.blockstorage.stored)">
        <connector href="target.arch#//@connector.11"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrofinreadwire" visitedStates="22" verifyTime="0.0438837" testport="//@interimmodels.19/@designmodel/@component.6/@port.0" traceExample="init -> DigitalWallet_pay_commit -> DigitalWallet_finreadwire_requester_process -> finreadwire_req!90 -> finreadwire_req?90 -> FinanceTrans_finreadwire_responder_invoke -> FinanceTrans_rofinreadwire_extquerier_request -> rofinreadwire_uid!90 -> rofinreadwire_uid?90 -> FinanceTransBlockchain_finaccess_accessed -> FinanceTransBlockchain_rofinreadwire_blocksupplier_process -> rofinreadwire_res!90 -> rofinreadwire_res?90 -> FinanceTrans_transquery_queried -> FinanceTrans_rofinreadwire_extquerier_process -> FinanceTrans_rofinreadwire_extquerier_Skip -> FinanceTrans_finreadwire_responder_process -> finreadwire_res!90 -> finreadwire_res?90" exprText="[] (FinanceTransBlockchain.rofinreadwire.blocksupplier.process-> &lt;> FinanceTrans.transquery.queried)">
        <connector href="target.arch#//@connector.13"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readroctrlwire" visitedStates="22" verifyTime="0.044573999999999996" testport="//@interimmodels.19/@designmodel/@component.11/@port.0" traceExample="init -> Controller_monitor_listcommodity -> Controller_ctrlwire_requester_process -> ctrlwire_req!57 -> ctrlwire_req?57 -> Commodity_ctrlwire_responder_invoke -> Commodity_roctrlwire_extquerier_request -> roctrlwire_uid!57 -> roctrlwire_uid?57 -> CommodityBlockchain_comaccess_accessed -> CommodityBlockchain_roctrlwire_blocksupplier_process -> roctrlwire_res!57 -> roctrlwire_res?57 -> Commodity_liststate_listed -> Commodity_roctrlwire_extquerier_process -> Commodity_roctrlwire_extquerier_Skip -> Commodity_ctrlwire_responder_process -> ctrlwire_res!57 -> ctrlwire_res?57" exprText="[] (CommodityBlockchain.roctrlwire.blocksupplier.process-> &lt;> Commodity.liststate.listed)">
        <connector href="target.arch#//@connector.12"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="event-centre-admsgwire" visitedStates="15241" verifyTime="0.4621142" testport="//@interimmodels.19/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!65 -> prvapiwire_req?65 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!65 -> admsgwire_pevt?65 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!65 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?65 -> admsgwire_bevt!65 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!65 -> prvmsgwire_req?65 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!65 -> comwire_req?65 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!65 -> CommodityOracle_comwire_responder_process -> comwire_res!65 -> oraclecomwire_token?65 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?65 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!65 -> finwritewire_req?65 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!65 -> oraclefinwritewire_token?65 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!65 -> finwritewire_res?65 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!65 -> prvmsgwire_res?65 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!65 -> prvapiwire_res?65 -> admsgwire_bevt?65 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (ProvenanceInt.prvpub.prvevntpublish-> &lt;> AdmsgwireLog.admsgwire.eventstore.persist)">
        <connector href="target.arch#//@connector.5"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoraclecomwire" visitedStates="10653" verifyTime="0.46742459999999997" testport="//@interimmodels.19/@designmodel/@component.3/@port.0" traceExample="init -> ProvenanceWebApp_prvconsume_provenancerequest -> ProvenanceWebApp_prvapiwire_requester_process -> prvapiwire_req!33 -> prvapiwire_req?33 -> ProvenanceInt_prvapiwire_responder_invoke -> ProvenanceInt_prvpub_prvevntpublish -> ProvenanceInt_admsgwire_eventpublisher_process -> admsgwire_pevt!33 -> admsgwire_pevt?33 -> AdmsgwireLog_logadmsgwire_logged -> AdmsgwireLog_admsgwire_eventstore_process -> admsgwire_sevt!33 -> AdmsgwireLog_admsgwire_eventstore_persist -> admsgwire_sevt?33 -> admsgwire_bevt!33 -> ProvenanceInt_admsgwire_eventpublisher_broadcast -> ProvenanceInt_admsgwire_eventpublisher_Skip -> ProvenanceInt_prvmsgwire_requester_process -> prvmsgwire_req!33 -> prvmsgwire_req?33 -> BCIntegrator_prvmsgwire_responder_invoke -> BCIntegrator_bcint_ackstate -> BCIntegrator_comwire_requester_process -> comwire_req!33 -> comwire_req?33 -> CommodityOracle_comwire_responder_invoke -> CommodityOracle_commoditysupply_supplied -> CommodityOracle_oraclecomwire_extsupplier_process -> oraclecomwire_token!33 -> CommodityOracle_comwire_responder_process -> comwire_res!33 -> oraclecomwire_token?33 -> CommodityBlockchain_comappend_appended -> CommodityBlockchain_oraclecomwire_blockstorage_process -> CommodityBlockchain_oraclecomwire_blockstorage_stored -> comwire_res?33 -> BCIntegrator_comwire_requester_Skip -> BCIntegrator_finwritewire_requester_process -> finwritewire_req!33 -> finwritewire_req?33 -> FinanceTransOracle_finwritewire_responder_invoke -> FinanceTransOracle_financetranssupply_supplied -> FinanceTransOracle_oraclefinwritewire_extsupplier_process -> oraclefinwritewire_token!33 -> oraclefinwritewire_token?33 -> FinanceTransBlockchain_finappend_appended -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_process -> FinanceTransBlockchain_oraclefinwritewire_blockstorage_stored -> FinanceTransOracle_finwritewire_responder_process -> finwritewire_res!33 -> finwritewire_res?33 -> BCIntegrator_finwritewire_requester_Skip -> BCIntegrator_prvmsgwire_responder_process -> prvmsgwire_res!33 -> prvmsgwire_res?33 -> ProvenanceInt_prvmsgwire_requester_Skip -> ProvenanceInt_prvapiwire_responder_process -> prvapiwire_res!33 -> prvapiwire_res?33 -> admsgwire_bevt?33 -> ADWebApp_adnotify_notified -> ADWebApp_admsgwire_eventsubscriber_process" exprText="[] (CommodityOracle.supply.supplied-> &lt;> CommodityBlockchain.oraclecomwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.10"/>
      </verifyProperty>
      <host name="ADWebServer">
        <node type="APPLICATION_CONTAINER" name="ApacheTomcat" component="//@interimmodels.19/@designmodel/@component.0">
          <port name="port" portNumber="12030" node="//@interimmodels.19/@designmodel/@host.0/@node.0" namedport="//@interimmodels.19/@designmodel/@component.0/@port.0"/>
          <port name="port" portNumber="13243" node="//@interimmodels.19/@designmodel/@host.0/@node.0" namedport="//@interimmodels.19/@designmodel/@component.0/@port.1"/>
        </node>
      </host>
      <host name="ADAppServer">
        <node type="APPLICATION_CONTAINER" name="JBoss" component="//@interimmodels.19/@designmodel/@component.1">
          <port name="port" portNumber="8080" node="//@interimmodels.19/@designmodel/@host.1/@node.0" namedport="//@interimmodels.19/@designmodel/@component.1/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="AWSECS">
        <node type="APPLICATION_CONTAINER" name="AppConontainer" component="//@interimmodels.19/@designmodel/@component.2 //@interimmodels.19/@designmodel/@component.3 //@interimmodels.19/@designmodel/@component.5 //@interimmodels.19/@designmodel/@component.11">
          <port name="port" portNumber="12033" node="//@interimmodels.19/@designmodel/@host.2/@node.0" namedport="//@interimmodels.19/@designmodel/@component.2/@port.0"/>
          <port name="port" portNumber="8089" node="//@interimmodels.19/@designmodel/@host.2/@node.0" namedport="//@interimmodels.19/@designmodel/@component.5/@port.0"/>
          <port name="port" portNumber="13423" node="//@interimmodels.19/@designmodel/@host.2/@node.0" namedport="//@interimmodels.19/@designmodel/@component.5/@port.0"/>
        </node>
        <node type="APPLICATION_CONTAINER" name="MySQL" component="//@interimmodels.19/@designmodel/@component.10 //@interimmodels.19/@designmodel/@component.9">
          <port name="port" portNumber="3306" node="//@interimmodels.19/@designmodel/@host.2/@node.1" namedport="//@interimmodels.19/@designmodel/@component.10/@port.0 //@interimmodels.19/@designmodel/@component.10/@port.1 //@interimmodels.19/@designmodel/@component.9/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="IOTWebApp">
        <node type="APPLICATION_CONTAINER" name="IOWebHub" component="//@interimmodels.19/@designmodel/@component.4">
          <port name="port" portNumber="12035" node="//@interimmodels.19/@designmodel/@host.3/@node.0" namedport="//@interimmodels.19/@designmodel/@component.4/@port.0"/>
          <port name="port" portNumber="8087" node="//@interimmodels.19/@designmodel/@host.3/@node.0" namedport="//@interimmodels.19/@designmodel/@component.4/@port.0" hasAuthentication="true" hasAuthorization="true"/>
        </node>
      </host>
      <host name="BankNet">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.19/@designmodel/@component.6">
          <port name="port" portNumber="12038" node="//@interimmodels.19/@designmodel/@host.4/@node.0" namedport="//@interimmodels.19/@designmodel/@component.6/@port.0"/>
          <port name="port" portNumber="8882" node="//@interimmodels.19/@designmodel/@host.4/@node.0" namedport="//@interimmodels.19/@designmodel/@component.6/@port.1" hasFirewall="true" hasAuthentication="true" hasAuthorization="true" hasInputSanitization="true"/>
        </node>
        <node name="AppServer2" component="//@interimmodels.19/@designmodel/@component.8">
          <port name="port" portNumber="12039" node="//@interimmodels.19/@designmodel/@host.4/@node.1" namedport="//@interimmodels.19/@designmodel/@component.8/@port.0"/>
        </node>
      </host>
      <host name="IOTDevice" hostType="DEDICATED_SERVER">
        <node type="APPLICATION_CONTAINER" name="EmbededApp" component="//@interimmodels.19/@designmodel/@component.7">
          <port name="port" portNumber="19802" node="//@interimmodels.19/@designmodel/@host.5/@node.0" namedport="//@interimmodels.19/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <link name="link1" source="//@interimmodels.19/@designmodel/@host.0/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link4"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.5/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.3/@node.0/@port.1"/>
      <link name="link10"/>
      <link name="link11" linkType="HTTPS" source="//@interimmodels.19/@designmodel/@host.4/@node.1/@port.0" target="//@interimmodels.19/@designmodel/@host.4/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.2/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.0/@node.0/@port.1"/>
      <link name="link12" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link13" source="//@interimmodels.19/@designmodel/@host.3/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.2/@node.0/@port.1"/>
      <link name="link14" source="//@interimmodels.19/@designmodel/@host.2/@node.0/@port.2" target="//@interimmodels.19/@designmodel/@host.2/@node.1/@port.0"/>
      <link name="link15" networkType="INTERNET" source="//@interimmodels.19/@designmodel/@host.4/@node.0/@port.0" target="//@interimmodels.19/@designmodel/@host.2/@node.1/@port.0"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
    </designmodel>
  </interimmodels>
</arch:MigrationModel>
