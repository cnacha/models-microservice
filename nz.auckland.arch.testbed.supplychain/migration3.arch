<?xml version="1.0" encoding="UTF-8"?>
<arch:MigrationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arch="http://www.example.org/arch">
  <source href="sample.arch#/"/>
  <target href="target.arch#/"/>
  <interimmodels description="setup database: ordertransactionblockchain" nextModel="//@interimmodels.1" isStable="true" name="setup-database">
    <designmodel name="inter0">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.0/@designmodel/@connector.4/@role.1 //@interimmodels.0/@designmodel/@connector.3/@role.0 //@interimmodels.0/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.0/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.0/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.0/@designmodel/@connector.2/@role.0 //@interimmodels.0/@designmodel/@connector.5/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.0/@designmodel/@connector.0/@role.1 //@interimmodels.0/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.0/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.0/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.0/@designmodel/@connector.2/@role.0 //@interimmodels.0/@designmodel/@connector.6/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" role="//@interimmodels.0/@designmodel/@connector.1/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.0/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.0/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.1/@role.0" connector="//@interimmodels.0/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="WRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.1"/>
      </connector>
      <connector name="transcheckwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.2/@role.0" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.3/@role.0" connector="//@interimmodels.0/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.2/@role.0" connector="//@interimmodels.0/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.2/@role.0" connector="//@interimmodels.0/@designmodel/@connector.6"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.0/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0026111999999999997" testport="//@interimmodels.0/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!61 -> orderwire_req?61 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!61 -> transinwire_req?61 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!61 -> transinwire_res?61 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!61 -> orderwire_res?61" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0027231" testport="//@interimmodels.0/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!78 -> mfprocwire_req?78 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!78 -> mfreadwire_req?78 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!78 -> mfreadwire_res?78 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!78 -> transcheckwire_req?78 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!78 -> transcheckwire_res?78 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!78 -> mfprocwire_res?78" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="11" verifyTime="0.0024963999999999997" testport="//@interimmodels.0/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!69 -> mmprocwire_req?69 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_reader_process -> transcheckwire_req!69 -> transcheckwire_req?69 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!69 -> transcheckwire_res?69 -> MiddlemanServe_transcheckwire_reader_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!69 -> mmprocwire_res?69" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.0/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0062125" testport="//@interimmodels.0/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!97 -> crprocwire_req?97 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_reader_process -> transcheckwire_req!97 -> transcheckwire_req?97 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!97 -> transcheckwire_res?97 -> CarrierServe_transcheckwire_reader_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!97 -> crprocwire_res?97" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="34" verifyTime="0.0028407" testport="//@interimmodels.0/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!39 -> mfprocwire_req?39 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!39 -> mfreadwire_req?39 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!39 -> mfreadwire_res?39 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!39 -> transcheckwire_req?39 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!39 -> transcheckwire_res?39 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!39 -> mfprocwire_res?39" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.0/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.0/@designmodel/@component.5 //@interimmodels.0/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.0/@designmodel/@component.0 //@interimmodels.0/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.0/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.0/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.0/@designmodel/@component.3 //@interimmodels.0/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.0/@designmodel/@component.7 //@interimmodels.0/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.0/@designmodel/@component.8 //@interimmodels.0/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.0/@designmodel/@host.4/@node.0" namedport="//@interimmodels.0/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.0/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="deploy service: ordertransactionoracle" nextModel="//@interimmodels.2" isStable="true" name="deploy-service">
    <designmodel name="inter2">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.1/@designmodel/@connector.4/@role.1 //@interimmodels.1/@designmodel/@connector.3/@role.0 //@interimmodels.1/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.1/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.1/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.1/@designmodel/@connector.2/@role.0 //@interimmodels.1/@designmodel/@connector.5/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.1/@designmodel/@connector.0/@role.1 //@interimmodels.1/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.1/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.1/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.1/@designmodel/@connector.2/@role.0 //@interimmodels.1/@designmodel/@connector.6/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" role="//@interimmodels.1/@designmodel/@connector.1/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.1/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.1/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.1/@role.0" connector="//@interimmodels.1/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="WRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.1"/>
      </connector>
      <connector name="transcheckwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.2/@role.0" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.3/@role.0" connector="//@interimmodels.1/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.2/@role.0" connector="//@interimmodels.1/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.2/@role.0" connector="//@interimmodels.1/@designmodel/@connector.6"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.1/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0057965" testport="//@interimmodels.1/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!28 -> orderwire_req?28 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!28 -> transinwire_req?28 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!28 -> transinwire_res?28 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!28 -> orderwire_res?28" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0026885" testport="//@interimmodels.1/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!22 -> mfprocwire_req?22 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!22 -> mfreadwire_req?22 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!22 -> mfreadwire_res?22 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!22 -> transcheckwire_req?22 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!22 -> transcheckwire_res?22 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!22 -> mfprocwire_res?22" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="11" verifyTime="0.0054007" testport="//@interimmodels.1/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!44 -> mmprocwire_req?44 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_reader_process -> transcheckwire_req!44 -> transcheckwire_req?44 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!44 -> transcheckwire_res?44 -> MiddlemanServe_transcheckwire_reader_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!44 -> mmprocwire_res?44" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.1/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0027393" testport="//@interimmodels.1/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!77 -> crprocwire_req?77 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_reader_process -> transcheckwire_req!77 -> transcheckwire_req?77 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!77 -> transcheckwire_res?77 -> CarrierServe_transcheckwire_reader_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!77 -> crprocwire_res?77" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="34" verifyTime="0.0027792" testport="//@interimmodels.1/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!57 -> mfprocwire_req?57 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!57 -> mfreadwire_req?57 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!57 -> mfreadwire_res?57 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!57 -> transcheckwire_req?57 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!57 -> transcheckwire_res?57 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!57 -> mfprocwire_res?57" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.1/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.1/@designmodel/@component.5 //@interimmodels.1/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.1/@designmodel/@component.0 //@interimmodels.1/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.1/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.1/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.1/@designmodel/@component.3 //@interimmodels.1/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.1/@designmodel/@component.7 //@interimmodels.1/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.1/@designmodel/@component.8 //@interimmodels.1/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.1/@designmodel/@host.4/@node.0" namedport="//@interimmodels.1/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.1/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="network route for connector:transinwire between: buyerserve ordertransactionoracle " nextModel="//@interimmodels.3" isStable="true" name="network-route">
    <designmodel name="inter3">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.2/@designmodel/@connector.4/@role.1 //@interimmodels.2/@designmodel/@connector.3/@role.0 //@interimmodels.2/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.2/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.2/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.2/@designmodel/@connector.2/@role.0 //@interimmodels.2/@designmodel/@connector.5/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.2/@designmodel/@connector.0/@role.1 //@interimmodels.2/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.2/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.2/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.2/@designmodel/@connector.2/@role.0 //@interimmodels.2/@designmodel/@connector.6/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.2/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.2/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.2/@designmodel/@connector.1/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.1/@role.0" connector="//@interimmodels.2/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <role name="responder" type="in">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
          <nextRoleExpr href="target.arch#//@connector.7/@role.1"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
      </connector>
      <connector name="transcheckwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.2/@role.0" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.3/@role.0" connector="//@interimmodels.2/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.2/@role.0" connector="//@interimmodels.2/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.2/@role.0" connector="//@interimmodels.2/@designmodel/@connector.6"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.2/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0028742" testport="//@interimmodels.2/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!76 -> orderwire_req?76 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!76 -> transinwire_req?76 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!76 -> transinwire_res?76 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!76 -> orderwire_res?76" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0030903" testport="//@interimmodels.2/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!77 -> mfprocwire_req?77 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!77 -> mfreadwire_req?77 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!77 -> mfreadwire_res?77 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!77 -> transcheckwire_req?77 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!77 -> transcheckwire_res?77 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!77 -> mfprocwire_res?77" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="11" verifyTime="0.0027876999999999997" testport="//@interimmodels.2/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!74 -> mmprocwire_req?74 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_reader_process -> transcheckwire_req!74 -> transcheckwire_req?74 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!74 -> transcheckwire_res?74 -> MiddlemanServe_transcheckwire_reader_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!74 -> mmprocwire_res?74" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.2/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0028068" testport="//@interimmodels.2/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!67 -> crprocwire_req?67 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_reader_process -> transcheckwire_req!67 -> transcheckwire_req?67 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!67 -> transcheckwire_res?67 -> CarrierServe_transcheckwire_reader_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!67 -> crprocwire_res?67" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.2/@designmodel" counterExample="" visitedStates="34" verifyTime="0.0029544" testport="//@interimmodels.2/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!45 -> mfprocwire_req?45 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!45 -> mfreadwire_req?45 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!45 -> mfreadwire_res?45 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!45 -> transcheckwire_req?45 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!45 -> transcheckwire_res?45 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!45 -> mfprocwire_res?45" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.2/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.2/@designmodel/@component.5 //@interimmodels.2/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.2/@designmodel/@component.0 //@interimmodels.2/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.2/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.2/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.2/@designmodel/@component.3 //@interimmodels.2/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.2/@designmodel/@component.7 //@interimmodels.2/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.2/@designmodel/@component.8 //@interimmodels.2/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.2/@designmodel/@host.4/@node.0" namedport="//@interimmodels.2/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.2/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="5" description="network route for connector:oracletransinwire between: ordertransactionoracle ordertransactionblockchain " nextModel="//@interimmodels.4" isStable="true" name="network-route">
    <designmodel name="inter5">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.3/@designmodel/@connector.4/@role.1 //@interimmodels.3/@designmodel/@connector.3/@role.0 //@interimmodels.3/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.3/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.3/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.3/@designmodel/@connector.2/@role.0 //@interimmodels.3/@designmodel/@connector.5/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.3/@designmodel/@connector.0/@role.1 //@interimmodels.3/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.3/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.3/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.3/@designmodel/@connector.2/@role.0 //@interimmodels.3/@designmodel/@connector.6/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.3/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.3/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.3/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.3/@designmodel/@connector.1/@role.1 //@interimmodels.3/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.1/@role.0" connector="//@interimmodels.3/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.7/@role.1">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
      </connector>
      <connector name="transcheckwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.2/@role.0" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.3/@role.0" connector="//@interimmodels.3/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.2/@role.0" connector="//@interimmodels.3/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.2/@role.0" connector="//@interimmodels.3/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.3/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.3/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.3/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="86" verifyTime="0.0043018" testport="//@interimmodels.3/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!11 -> orderwire_req?11 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!11 -> transinwire_req?11 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!11 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!11 -> oracletransinwire_token?11 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?11 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!11 -> orderwire_res?11" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0032489" testport="//@interimmodels.3/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!29 -> mfprocwire_req?29 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!29 -> mfreadwire_req?29 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!29 -> mfreadwire_res?29 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!29 -> transcheckwire_req?29 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!29 -> transcheckwire_res?29 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!29 -> mfprocwire_res?29" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="11" verifyTime="0.0059815" testport="//@interimmodels.3/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!56 -> mmprocwire_req?56 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_reader_process -> transcheckwire_req!56 -> transcheckwire_req?56 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!56 -> transcheckwire_res?56 -> MiddlemanServe_transcheckwire_reader_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!56 -> mmprocwire_res?56" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.3/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0029295999999999997" testport="//@interimmodels.3/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!53 -> crprocwire_req?53 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_reader_process -> transcheckwire_req!53 -> transcheckwire_req?53 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!53 -> transcheckwire_res?53 -> CarrierServe_transcheckwire_reader_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!53 -> crprocwire_res?53" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="34" verifyTime="0.0059466" testport="//@interimmodels.3/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!99 -> mfprocwire_req?99 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!99 -> mfreadwire_req?99 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!99 -> mfreadwire_res?99 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!99 -> transcheckwire_req?99 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!99 -> transcheckwire_res?99 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!99 -> mfprocwire_res?99" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.3/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="136" verifyTime="0.0052361" testport="//@interimmodels.3/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!26 -> orderwire_req?26 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!26 -> transinwire_req?26 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!26 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!26 -> oracletransinwire_token?26 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?26 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!26 -> orderwire_res?26" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.3/@designmodel/@component.5 //@interimmodels.3/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.3/@designmodel/@component.0 //@interimmodels.3/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.3/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.3/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.3/@designmodel/@component.3 //@interimmodels.3/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.3/@designmodel/@component.7 //@interimmodels.3/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.3/@designmodel/@component.8 //@interimmodels.3/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.3/@designmodel/@host.4/@node.0" namedport="//@interimmodels.3/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.3/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="6" description="deploy service: ordertransaction" nextModel="//@interimmodels.5" isStable="true" name="deploy-service">
    <designmodel name="inter6">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.4/@designmodel/@connector.4/@role.1 //@interimmodels.4/@designmodel/@connector.3/@role.0 //@interimmodels.4/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.4/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.4/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.4/@designmodel/@connector.2/@role.0 //@interimmodels.4/@designmodel/@connector.5/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.4/@designmodel/@connector.0/@role.1 //@interimmodels.4/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.4/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.4/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.4/@designmodel/@connector.2/@role.0 //@interimmodels.4/@designmodel/@connector.6/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.4/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.4/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.4/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.4/@designmodel/@connector.1/@role.1 //@interimmodels.4/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.1/@role.0" connector="//@interimmodels.4/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.7/@role.1">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
      </connector>
      <connector name="transcheckwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.2/@role.0" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.3/@role.0" connector="//@interimmodels.4/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.2/@role.0" connector="//@interimmodels.4/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.2/@role.0" connector="//@interimmodels.4/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.4/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.4/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.4/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="86" verifyTime="0.0037576999999999997" testport="//@interimmodels.4/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!35 -> orderwire_req?35 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!35 -> transinwire_req?35 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!35 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!35 -> oracletransinwire_token?35 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?35 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!35 -> orderwire_res?35" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0031241999999999997" testport="//@interimmodels.4/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!74 -> mfprocwire_req?74 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!74 -> mfreadwire_req?74 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!74 -> mfreadwire_res?74 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!74 -> transcheckwire_req?74 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!74 -> transcheckwire_res?74 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!74 -> mfprocwire_res?74" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="11" verifyTime="0.002639" testport="//@interimmodels.4/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!30 -> mmprocwire_req?30 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_reader_process -> transcheckwire_req!30 -> transcheckwire_req?30 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!30 -> transcheckwire_res?30 -> MiddlemanServe_transcheckwire_reader_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!30 -> mmprocwire_res?30" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.4/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0028714" testport="//@interimmodels.4/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!29 -> crprocwire_req?29 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_reader_process -> transcheckwire_req!29 -> transcheckwire_req?29 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!29 -> transcheckwire_res?29 -> CarrierServe_transcheckwire_reader_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!29 -> crprocwire_res?29" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.4/@designmodel" counterExample="" visitedStates="34" verifyTime="0.0029597" testport="//@interimmodels.4/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!19 -> mfprocwire_req?19 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!19 -> mfreadwire_req?19 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!19 -> mfreadwire_res?19 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!19 -> transcheckwire_req?19 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!19 -> transcheckwire_res?19 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!19 -> mfprocwire_res?19" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.4/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="136" verifyTime="0.0048064" testport="//@interimmodels.4/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!11 -> orderwire_req?11 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!11 -> transinwire_req?11 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!11 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!11 -> oracletransinwire_token?11 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?11 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!11 -> orderwire_res?11" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.4/@designmodel/@component.5 //@interimmodels.4/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.4/@designmodel/@component.0 //@interimmodels.4/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.4/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.4/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.4/@designmodel/@component.3 //@interimmodels.4/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.4/@designmodel/@component.7 //@interimmodels.4/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.4/@designmodel/@component.8 //@interimmodels.4/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.4/@designmodel/@host.4/@node.0" namedport="//@interimmodels.4/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.4/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="7" description="network route for connector:transcheckwire between: middlemanserve ordertransaction " nextModel="//@interimmodels.6" isStable="true" name="network-route">
    <designmodel name="inter7">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.5/@designmodel/@connector.4/@role.1 //@interimmodels.5/@designmodel/@connector.3/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.5/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.5/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.5/@designmodel/@connector.5/@role.1 //@interimmodels.5/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.5/@designmodel/@connector.0/@role.1 //@interimmodels.5/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.5/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.5/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.5/@designmodel/@connector.6/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.5/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.5/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.5/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.5/@designmodel/@connector.1/@role.1 //@interimmodels.5/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.1/@role.0" connector="//@interimmodels.5/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.7/@role.1">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
      </connector>
      <connector name="transcheckwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.2/@role.0" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.3/@role.0" connector="//@interimmodels.5/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.2/@role.0" connector="//@interimmodels.5/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.2/@role.0" connector="//@interimmodels.5/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.5/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.5/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.5/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="86" verifyTime="0.0041655" testport="//@interimmodels.5/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!14 -> orderwire_req?14 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!14 -> transinwire_req?14 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!14 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!14 -> oracletransinwire_token?14 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?14 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!14 -> orderwire_res?14" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0029885999999999997" testport="//@interimmodels.5/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!70 -> mfprocwire_req?70 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!70 -> mfreadwire_req?70 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!70 -> mfreadwire_res?70 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!70 -> transcheckwire_req?70 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!70 -> transcheckwire_res?70 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!70 -> mfprocwire_res?70" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="11" verifyTime="0.0026912999999999998" testport="//@interimmodels.5/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!60 -> mmprocwire_req?60 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_requester_process -> transcheckwire_req!60 -> transcheckwire_req?60 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!60 -> transcheckwire_res?60 -> MiddlemanServe_transcheckwire_requester_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!60 -> mmprocwire_res?60" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.5/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0028063999999999997" testport="//@interimmodels.5/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!50 -> crprocwire_req?50 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_requester_process -> transcheckwire_req!50 -> transcheckwire_req?50 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!50 -> transcheckwire_res?50 -> CarrierServe_transcheckwire_requester_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!50 -> crprocwire_res?50" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.5/@designmodel" counterExample="" visitedStates="34" verifyTime="0.0029906999999999998" testport="//@interimmodels.5/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!57 -> mfprocwire_req?57 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!57 -> mfreadwire_req?57 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!57 -> mfreadwire_res?57 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!57 -> transcheckwire_req?57 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!57 -> transcheckwire_res?57 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!57 -> mfprocwire_res?57" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.5/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="136" verifyTime="0.007422499999999999" testport="//@interimmodels.5/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!76 -> orderwire_req?76 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!76 -> transinwire_req?76 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!76 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!76 -> oracletransinwire_token?76 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?76 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!76 -> orderwire_res?76" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.5/@designmodel/@component.5 //@interimmodels.5/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.5/@designmodel/@component.0 //@interimmodels.5/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.5/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.5/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.5/@designmodel/@component.3 //@interimmodels.5/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.5/@designmodel/@component.7 //@interimmodels.5/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.5/@designmodel/@component.8 //@interimmodels.5/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.5/@designmodel/@host.4/@node.0" namedport="//@interimmodels.5/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.5/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="8" description="network route for connector:transcheckwire between: carrierserve ordertransaction " nextModel="//@interimmodels.7" isStable="true" name="network-route">
    <designmodel name="inter8">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.6/@designmodel/@connector.4/@role.1 //@interimmodels.6/@designmodel/@connector.3/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.6/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.6/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.6/@designmodel/@connector.5/@role.1 //@interimmodels.6/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.6/@designmodel/@connector.0/@role.1 //@interimmodels.6/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.6/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.6/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.6/@designmodel/@connector.6/@role.1 //@interimmodels.6/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.6/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.6/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.6/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.6/@designmodel/@connector.1/@role.1 //@interimmodels.6/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.1/@role.0" connector="//@interimmodels.6/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.7/@role.1">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
      </connector>
      <connector name="transcheckwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.2/@role.0" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.3/@role.0" connector="//@interimmodels.6/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.2/@role.0" connector="//@interimmodels.6/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.2/@role.0" connector="//@interimmodels.6/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.6/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.6/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.6/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="86" verifyTime="0.0060649" testport="//@interimmodels.6/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!91 -> orderwire_req?91 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!91 -> transinwire_req?91 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!91 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!91 -> oracletransinwire_token?91 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?91 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!91 -> orderwire_res?91" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0029568" testport="//@interimmodels.6/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!73 -> mfprocwire_req?73 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!73 -> mfreadwire_req?73 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!73 -> mfreadwire_res?73 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!73 -> transcheckwire_req?73 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!73 -> transcheckwire_res?73 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!73 -> mfprocwire_res?73" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="11" verifyTime="0.0026934" testport="//@interimmodels.6/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!75 -> mmprocwire_req?75 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_requester_process -> transcheckwire_req!75 -> transcheckwire_req?75 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!75 -> transcheckwire_res?75 -> MiddlemanServe_transcheckwire_requester_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!75 -> mmprocwire_res?75" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.6/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0028905" testport="//@interimmodels.6/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!17 -> crprocwire_req?17 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_requester_process -> transcheckwire_req!17 -> transcheckwire_req?17 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!17 -> transcheckwire_res?17 -> CarrierServe_transcheckwire_requester_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!17 -> crprocwire_res?17" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.6/@designmodel" counterExample="" visitedStates="34" verifyTime="0.0069613999999999995" testport="//@interimmodels.6/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!97 -> mfprocwire_req?97 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!97 -> mfreadwire_req?97 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!97 -> mfreadwire_res?97 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!97 -> transcheckwire_req?97 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!97 -> transcheckwire_res?97 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!97 -> mfprocwire_res?97" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.6/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="136" verifyTime="0.0055822" testport="//@interimmodels.6/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!64 -> orderwire_req?64 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!64 -> transinwire_req?64 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!64 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!64 -> oracletransinwire_token?64 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?64 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!64 -> orderwire_res?64" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.6/@designmodel/@component.5 //@interimmodels.6/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.6/@designmodel/@component.0 //@interimmodels.6/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.6/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.6/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.6/@designmodel/@component.3 //@interimmodels.6/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.6/@designmodel/@component.7 //@interimmodels.6/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.6/@designmodel/@component.8 //@interimmodels.6/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.6/@designmodel/@host.4/@node.0" namedport="//@interimmodels.6/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.6/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="9" description="network route for connector:transcheckwire between: manufacturerserve ordertransaction " nextModel="//@interimmodels.8" isStable="true" name="network-route">
    <designmodel name="inter9">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.7/@designmodel/@connector.4/@role.1 //@interimmodels.7/@designmodel/@connector.3/@role.0 //@interimmodels.7/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.7/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.7/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.7/@designmodel/@connector.5/@role.1 //@interimmodels.7/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.7/@designmodel/@connector.0/@role.1 //@interimmodels.7/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.7/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.7/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.7/@designmodel/@connector.6/@role.1 //@interimmodels.7/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.7/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.7/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.7/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.7/@designmodel/@connector.1/@role.1 //@interimmodels.7/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.1/@role.0" connector="//@interimmodels.7/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.7/@role.1">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
      </connector>
      <connector name="transcheckwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.2/@role.0" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.3/@role.0" connector="//@interimmodels.7/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.2/@role.0" connector="//@interimmodels.7/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.2/@role.0" connector="//@interimmodels.7/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.7/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.7/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.7/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="86" verifyTime="0.0039152" testport="//@interimmodels.7/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!14 -> orderwire_req?14 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!14 -> transinwire_req?14 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!14 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!14 -> oracletransinwire_token?14 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?14 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!14 -> orderwire_res?14" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0034191" testport="//@interimmodels.7/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!68 -> mfprocwire_req?68 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!68 -> mfreadwire_req?68 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!68 -> mfreadwire_res?68 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!68 -> transcheckwire_req?68 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!68 -> transcheckwire_res?68 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!68 -> mfprocwire_res?68" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="11" verifyTime="0.0034747999999999997" testport="//@interimmodels.7/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!46 -> mmprocwire_req?46 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_requester_process -> transcheckwire_req!46 -> transcheckwire_req?46 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!46 -> transcheckwire_res?46 -> MiddlemanServe_transcheckwire_requester_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!46 -> mmprocwire_res?46" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.7/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0028587" testport="//@interimmodels.7/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!59 -> crprocwire_req?59 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_requester_process -> transcheckwire_req!59 -> transcheckwire_req?59 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!59 -> transcheckwire_res?59 -> CarrierServe_transcheckwire_requester_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!59 -> crprocwire_res?59" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.7/@designmodel" counterExample="" visitedStates="34" verifyTime="0.0034191" testport="//@interimmodels.7/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!19 -> mfprocwire_req?19 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!19 -> mfreadwire_req?19 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!19 -> mfreadwire_res?19 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!19 -> transcheckwire_req?19 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!19 -> transcheckwire_res?19 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!19 -> mfprocwire_res?19" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.7/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="136" verifyTime="0.0044957" testport="//@interimmodels.7/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!16 -> orderwire_req?16 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!16 -> transinwire_req?16 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!16 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!16 -> oracletransinwire_token?16 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?16 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!16 -> orderwire_res?16" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.7/@designmodel/@component.5 //@interimmodels.7/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.7/@designmodel/@component.0 //@interimmodels.7/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.7/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.7/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.7/@designmodel/@component.3 //@interimmodels.7/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.7/@designmodel/@component.7 //@interimmodels.7/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.7/@designmodel/@component.8 //@interimmodels.7/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.7/@designmodel/@host.4/@node.0" namedport="//@interimmodels.7/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.7/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="10" description="network route for connector:rotranscheckwire between: ordertransaction ordertransactionblockchain " isStable="true" name="network-route">
    <designmodel name="inter10">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.8/@designmodel/@connector.4/@role.1 //@interimmodels.8/@designmodel/@connector.3/@role.0 //@interimmodels.8/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.8/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.8/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.8/@designmodel/@connector.5/@role.1 //@interimmodels.8/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.8/@designmodel/@connector.0/@role.1 //@interimmodels.8/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.8/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.8/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.8/@designmodel/@connector.6/@role.1 //@interimmodels.8/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.8/@designmodel/@connector.2/@role.1 //@interimmodels.8/@designmodel/@connector.8/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.8/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.8/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" role="//@interimmodels.8/@designmodel/@connector.8/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.8/@designmodel/@connector.1/@role.1 //@interimmodels.8/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.1/@role.0" connector="//@interimmodels.8/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.7/@role.1">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
      </connector>
      <connector name="transcheckwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.8/@role.0" connector="//@interimmodels.8/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.2/@role.0" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.3/@role.0" connector="//@interimmodels.8/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.2/@role.0" connector="//@interimmodels.8/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.2/@role.0" connector="//@interimmodels.8/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.8/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.8/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <connector name="rotranscheckwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.8/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.8/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.8/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="86" verifyTime="0.0043279" testport="//@interimmodels.8/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!60 -> orderwire_req?60 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!60 -> transinwire_req?60 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!60 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!60 -> oracletransinwire_token?60 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?60 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!60 -> orderwire_res?60" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="42" verifyTime="0.0041408" testport="//@interimmodels.8/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!61 -> mfprocwire_req?61 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!61 -> mfreadwire_req?61 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!61 -> mfreadwire_res?61 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!61 -> transcheckwire_req?61 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!61 -> rotranscheckwire_uid?61 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!61 -> rotranscheckwire_res?61 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!61 -> transcheckwire_res?61 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!61 -> mfprocwire_res?61" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="11" verifyTime="0.0030288999999999997" testport="//@interimmodels.8/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!87 -> mmprocwire_req?87 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_requester_process -> transcheckwire_req!87 -> transcheckwire_req?87 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!87 -> rotranscheckwire_uid?87 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!87 -> rotranscheckwire_res?87 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!87 -> transcheckwire_res?87 -> MiddlemanServe_transcheckwire_requester_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!87 -> mmprocwire_res?87" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.8/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0033445" testport="//@interimmodels.8/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!53 -> crprocwire_req?53 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_requester_process -> transcheckwire_req!53 -> transcheckwire_req?53 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!53 -> rotranscheckwire_uid?53 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!53 -> rotranscheckwire_res?53 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!53 -> transcheckwire_res?53 -> CarrierServe_transcheckwire_requester_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!53 -> crprocwire_res?53" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="48" verifyTime="0.0035818" testport="//@interimmodels.8/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!55 -> mfprocwire_req?55 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!55 -> mfreadwire_req?55 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!55 -> mfreadwire_res?55 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!55 -> transcheckwire_req?55 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!55 -> rotranscheckwire_uid?55 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!55 -> rotranscheckwire_res?55 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!55 -> transcheckwire_res?55 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!55 -> mfprocwire_res?55" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.8/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="136" verifyTime="0.0055366" testport="//@interimmodels.8/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!90 -> orderwire_req?90 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!90 -> transinwire_req?90 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!90 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!90 -> oracletransinwire_token?90 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?90 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!90 -> orderwire_res?90" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrotranscheckwire" visitedStates="40" verifyTime="0.0034865" testport="//@interimmodels.8/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!99 -> mfprocwire_req?99 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!99 -> mfreadwire_req?99 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!99 -> mfreadwire_res?99 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!99 -> transcheckwire_req?99 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!99 -> rotranscheckwire_uid?99 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!99 -> rotranscheckwire_res?99 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!99 -> transcheckwire_res?99 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!99 -> mfprocwire_res?99" exprText="[] (OrderTransactionBlockchain.rotranscheckwire.blocksupplier.process-> &lt;> OrderTransaction.check.verified)">
        <connector href="target.arch#//@connector.8"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.8/@designmodel/@component.5 //@interimmodels.8/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.8/@designmodel/@component.0 //@interimmodels.8/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.8/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.8/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.8/@designmodel/@component.3 //@interimmodels.8/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.8/@designmodel/@component.7 //@interimmodels.8/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.8/@designmodel/@component.8 //@interimmodels.8/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.8/@designmodel/@host.4/@node.0" namedport="//@interimmodels.8/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.8/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
</arch:MigrationModel>
