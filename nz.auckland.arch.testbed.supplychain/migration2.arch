<?xml version="1.0" encoding="UTF-8"?>
<arch:MigrationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arch="http://www.example.org/arch">
  <source href="sample.arch#/"/>
  <target href="target.arch#/"/>
  <interimmodels description="setup database: ordertransactionblockchain" nextModel="//@interimmodels.1" isStable="true" name="setup-database">
    <designmodel name="inter0">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.0/@designmodel/@connector.4/@role.1 //@interimmodels.0/@designmodel/@connector.3/@role.0 //@interimmodels.0/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.0/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.0/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.0/@designmodel/@connector.2/@role.0 //@interimmodels.0/@designmodel/@connector.5/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.0/@designmodel/@connector.0/@role.1 //@interimmodels.0/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.0/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.0/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.0/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.0/@designmodel/@connector.2/@role.0 //@interimmodels.0/@designmodel/@connector.6/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" role="//@interimmodels.0/@designmodel/@connector.1/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.0/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.0/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.0/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.1/@role.0" connector="//@interimmodels.0/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="WRConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.1"/>
        <role name="writestorage" roletype="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.1"/>
      </connector>
      <connector name="transcheckwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.2/@role.0" connector="//@interimmodels.0/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.0/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.3/@role.0" connector="//@interimmodels.0/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.2/@role.0" connector="//@interimmodels.0/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.0/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.0/@designmodel/@connector.2/@role.0" connector="//@interimmodels.0/@designmodel/@connector.6"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.0/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.0/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.0/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.0/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.0/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.0/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.0/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.0/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.0/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.0/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.0/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.0/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.0/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.0/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0647326" testport="//@interimmodels.0/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!87 -> orderwire_req?87 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!87 -> transinwire_req?87 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!87 -> transinwire_res?87 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!87 -> orderwire_res?87" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0064081" testport="//@interimmodels.0/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!75 -> mfprocwire_req?75 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!75 -> mfreadwire_req?75 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!75 -> mfreadwire_res?75 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!75 -> transcheckwire_req?75 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!75 -> transcheckwire_res?75 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!75 -> mfprocwire_res?75" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="11" verifyTime="0.0026698" testport="//@interimmodels.0/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!25 -> mmprocwire_req?25 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_reader_process -> transcheckwire_req!25 -> transcheckwire_req?25 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!25 -> transcheckwire_res?25 -> MiddlemanServe_transcheckwire_reader_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!25 -> mmprocwire_res?25" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.0/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0028947" testport="//@interimmodels.0/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!90 -> crprocwire_req?90 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_reader_process -> transcheckwire_req!90 -> transcheckwire_req?90 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!90 -> transcheckwire_res?90 -> CarrierServe_transcheckwire_reader_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!90 -> crprocwire_res?90" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.0/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.0/@designmodel" counterExample="" visitedStates="34" verifyTime="0.0029996" testport="//@interimmodels.0/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!26 -> mfprocwire_req?26 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!26 -> mfreadwire_req?26 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!26 -> mfreadwire_res?26 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!26 -> transcheckwire_req?26 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!26 -> transcheckwire_res?26 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!26 -> mfprocwire_res?26" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.0/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.0/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.0/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.0/@designmodel/@component.5 //@interimmodels.0/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.0/@designmodel/@host.0/@node.0" namedport="//@interimmodels.0/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.0/@designmodel/@component.0 //@interimmodels.0/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.0/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.0/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.0/@designmodel/@component.3 //@interimmodels.0/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.0/@designmodel/@host.2/@node.0" namedport="//@interimmodels.0/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.0/@designmodel/@component.7 //@interimmodels.0/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.0/@designmodel/@host.3/@node.0" namedport="//@interimmodels.0/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.0/@designmodel/@component.8 //@interimmodels.0/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.0/@designmodel/@host.4/@node.0" namedport="//@interimmodels.0/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.0/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.0/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.0/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="2" description="deploy service: ordertransactionoracle" nextModel="//@interimmodels.2" isStable="true" name="deploy-service">
    <designmodel name="inter2">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.1/@designmodel/@connector.4/@role.1 //@interimmodels.1/@designmodel/@connector.3/@role.0 //@interimmodels.1/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.1/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.1/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.1/@designmodel/@connector.2/@role.0 //@interimmodels.1/@designmodel/@connector.5/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.1/@designmodel/@connector.0/@role.1 //@interimmodels.1/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.1/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.1/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.1/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.1/@designmodel/@connector.2/@role.0 //@interimmodels.1/@designmodel/@connector.6/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" role="//@interimmodels.1/@designmodel/@connector.1/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.1/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.1/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.1/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.1/@role.0" connector="//@interimmodels.1/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="WRConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.1"/>
        <role name="writestorage" roletype="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.1"/>
      </connector>
      <connector name="transcheckwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.2/@role.0" connector="//@interimmodels.1/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.1/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.3/@role.0" connector="//@interimmodels.1/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.2/@role.0" connector="//@interimmodels.1/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.1/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.1/@designmodel/@connector.2/@role.0" connector="//@interimmodels.1/@designmodel/@connector.6"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.1/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.1/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.1/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.1/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.1/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.1/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.1/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.1/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.1/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.1/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.1/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.1/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.1/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.1/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0032273" testport="//@interimmodels.1/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!66 -> orderwire_req?66 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!66 -> transinwire_req?66 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!66 -> transinwire_res?66 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!66 -> orderwire_res?66" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0032346999999999996" testport="//@interimmodels.1/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!39 -> mfprocwire_req?39 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!39 -> mfreadwire_req?39 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!39 -> mfreadwire_res?39 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!39 -> transcheckwire_req?39 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!39 -> transcheckwire_res?39 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!39 -> mfprocwire_res?39" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="11" verifyTime="0.0030818" testport="//@interimmodels.1/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!60 -> mmprocwire_req?60 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_reader_process -> transcheckwire_req!60 -> transcheckwire_req?60 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!60 -> transcheckwire_res?60 -> MiddlemanServe_transcheckwire_reader_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!60 -> mmprocwire_res?60" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.1/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0029692" testport="//@interimmodels.1/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!61 -> crprocwire_req?61 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_reader_process -> transcheckwire_req!61 -> transcheckwire_req?61 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!61 -> transcheckwire_res?61 -> CarrierServe_transcheckwire_reader_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!61 -> crprocwire_res?61" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.1/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.1/@designmodel" counterExample="" visitedStates="34" verifyTime="0.005969899999999999" testport="//@interimmodels.1/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!62 -> mfprocwire_req?62 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!62 -> mfreadwire_req?62 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!62 -> mfreadwire_res?62 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!62 -> transcheckwire_req?62 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!62 -> transcheckwire_res?62 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!62 -> mfprocwire_res?62" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.1/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.1/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.1/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.1/@designmodel/@component.5 //@interimmodels.1/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.1/@designmodel/@host.0/@node.0" namedport="//@interimmodels.1/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.1/@designmodel/@component.0 //@interimmodels.1/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.1/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.1/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.1/@designmodel/@component.3 //@interimmodels.1/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.1/@designmodel/@host.2/@node.0" namedport="//@interimmodels.1/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.1/@designmodel/@component.7 //@interimmodels.1/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.1/@designmodel/@host.3/@node.0" namedport="//@interimmodels.1/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.1/@designmodel/@component.8 //@interimmodels.1/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.1/@designmodel/@host.4/@node.0" namedport="//@interimmodels.1/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.1/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.1/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.1/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="3" description="network route for connector:oracletransinwire between: ordertransactionoracle ordertransactionblockchain " nextModel="//@interimmodels.3" name="network-route">
    <designmodel name="inter3">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.2/@designmodel/@connector.4/@role.1 //@interimmodels.2/@designmodel/@connector.3/@role.0 //@interimmodels.2/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.2/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.2/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.2/@designmodel/@connector.2/@role.0 //@interimmodels.2/@designmodel/@connector.5/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.2/@designmodel/@connector.0/@role.1 //@interimmodels.2/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.2/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.2/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.2/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.2/@designmodel/@connector.2/@role.0 //@interimmodels.2/@designmodel/@connector.6/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" role="//@interimmodels.2/@designmodel/@connector.1/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.2/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.2/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.2/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.2/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.2/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.1/@role.0" connector="//@interimmodels.2/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="WRConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.1"/>
        <role name="writestorage" roletype="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.1"/>
      </connector>
      <connector name="transcheckwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.2/@role.0" connector="//@interimmodels.2/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.2/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.3/@role.0" connector="//@interimmodels.2/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.2/@role.0" connector="//@interimmodels.2/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.2/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.2/@designmodel/@connector.2/@role.0" connector="//@interimmodels.2/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.2/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.2/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.2/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.2/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.2/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.2/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.2/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.2/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.2/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.2/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.2/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.2/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.2/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.2/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.2/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.2/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.2/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!59 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!54 -> orderwire_req?54 -> BuyerServe_orderwire_responder_invoke -> oracletransinwire_token?59 -> (oracletransinwire_token!59 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?59)*" visitedStates="1297" verifyTime="0.037249899999999996" testport="//@interimmodels.2/@designmodel/@component.5/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!59 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!54 -> orderwire_req?54 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!54 -> transinwire_req?54 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!54 -> transinwire_res?54 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!54 -> orderwire_res?54 -> oracletransinwire_token?59 -> (oracletransinwire_token!59 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?59)*" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.2/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!76 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!99 -> mfprocwire_req?99 -> ManufacturerServe_mfprocwire_responder_invoke -> oracletransinwire_token?76 -> (oracletransinwire_token!76 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?76)*" visitedStates="1882" verifyTime="0.045695099999999995" testport="//@interimmodels.2/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!76 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!99 -> mfprocwire_req?99 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!99 -> mfreadwire_req?99 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!99 -> mfreadwire_res?99 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!99 -> transcheckwire_req?99 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!99 -> transcheckwire_res?99 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!99 -> mfprocwire_res?99 -> oracletransinwire_token?76 -> (oracletransinwire_token!76 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?76)*" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.2/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!45 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!94 -> mmprocwire_req?94 -> MiddlemanServe_mmprocwire_responder_invoke -> oracletransinwire_token?45 -> (oracletransinwire_token!45 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?45)*" visitedStates="452" verifyTime="0.0112318" testport="//@interimmodels.2/@designmodel/@component.2/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!45 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!94 -> mmprocwire_req?94 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_reader_process -> transcheckwire_req!94 -> transcheckwire_req?94 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!94 -> transcheckwire_res?94 -> MiddlemanServe_transcheckwire_reader_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!94 -> mmprocwire_res?94 -> oracletransinwire_token?45 -> (oracletransinwire_token!45 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?45)*" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.2/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.2/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!52 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!50 -> crprocwire_req?50 -> CarrierServe_crprocwire_responder_invoke -> oracletransinwire_token?52 -> (oracletransinwire_token!52 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?52)*" visitedStates="1297" verifyTime="0.0351193" testport="//@interimmodels.2/@designmodel/@component.6/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!52 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!50 -> crprocwire_req?50 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_reader_process -> transcheckwire_req!50 -> transcheckwire_req?50 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!50 -> transcheckwire_res?50 -> CarrierServe_transcheckwire_reader_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!50 -> crprocwire_res?50 -> oracletransinwire_token?52 -> (oracletransinwire_token!52 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?52)*" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.2/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.2/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!70 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!14 -> mfprocwire_req?14 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!14 -> mfreadwire_req?14 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!14 -> mfreadwire_res?14 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!14 -> transcheckwire_req?14 -> OrderTransaction_transcheckwire_readstorage_invoke -> oracletransinwire_token?70 -> (oracletransinwire_token!70 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?70)*" visitedStates="1270" verifyTime="0.0252649" testport="//@interimmodels.2/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!70 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!14 -> mfprocwire_req?14 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!14 -> mfreadwire_req?14 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!14 -> mfreadwire_res?14 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!14 -> transcheckwire_req?14 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!14 -> transcheckwire_res?14 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!14 -> mfprocwire_res?14 -> oracletransinwire_token?70 -> (oracletransinwire_token!70 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?70)*" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.2/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.2/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.2/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="2291" verifyTime="0.0504528" testport="//@interimmodels.2/@designmodel/@component.5/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!14 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!21 -> orderwire_req?21 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!21 -> transinwire_req?21 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!21 -> transinwire_res?21 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!21 -> orderwire_res?21 -> oracletransinwire_token?14 -> (OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token!14 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token?14 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored)*" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.2/@designmodel/@component.5 //@interimmodels.2/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.2/@designmodel/@host.0/@node.0" namedport="//@interimmodels.2/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.2/@designmodel/@component.0 //@interimmodels.2/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.2/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.2/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.2/@designmodel/@component.3 //@interimmodels.2/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.2/@designmodel/@host.2/@node.0" namedport="//@interimmodels.2/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.2/@designmodel/@component.7 //@interimmodels.2/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.2/@designmodel/@host.3/@node.0" namedport="//@interimmodels.2/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.2/@designmodel/@component.8 //@interimmodels.2/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.2/@designmodel/@host.4/@node.0" namedport="//@interimmodels.2/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.2/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.2/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.2/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="5" description="deploy service: ordertransaction" nextModel="//@interimmodels.4" name="deploy-service">
    <designmodel name="inter5">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.3/@designmodel/@connector.4/@role.1 //@interimmodels.3/@designmodel/@connector.3/@role.0 //@interimmodels.3/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.3/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.3/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.3/@designmodel/@connector.2/@role.0 //@interimmodels.3/@designmodel/@connector.5/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.3/@designmodel/@connector.0/@role.1 //@interimmodels.3/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.3/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.3/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.3/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.3/@designmodel/@connector.2/@role.0 //@interimmodels.3/@designmodel/@connector.6/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" role="//@interimmodels.3/@designmodel/@connector.1/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.3/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.3/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.3/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.3/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.3/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.1/@role.0" connector="//@interimmodels.3/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="WRConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.1"/>
        <role name="writestorage" roletype="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.1"/>
      </connector>
      <connector name="transcheckwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.2/@role.0" connector="//@interimmodels.3/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.3/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.3/@role.0" connector="//@interimmodels.3/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.2/@role.0" connector="//@interimmodels.3/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.3/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.3/@designmodel/@connector.2/@role.0" connector="//@interimmodels.3/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.3/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.3/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.3/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.3/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.3/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.3/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.3/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.3/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.3/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.3/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.3/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.3/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.3/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.3/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.3/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.3/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.3/@designmodel" counterExample="" visitedStates="24" verifyTime="0.0028742" testport="//@interimmodels.3/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!76 -> orderwire_req?76 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!76 -> transinwire_req?76 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!76 -> transinwire_res?76 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!76 -> orderwire_res?76" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.3/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!28 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!61 -> mfprocwire_req?61 -> ManufacturerServe_mfprocwire_responder_invoke -> oracletransinwire_token?28 -> (oracletransinwire_token!28 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?28)*" visitedStates="1882" verifyTime="0.0371422" testport="//@interimmodels.3/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!28 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!61 -> mfprocwire_req?61 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!61 -> mfreadwire_req?61 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!61 -> mfreadwire_res?61 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!61 -> transcheckwire_req?61 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!61 -> transcheckwire_res?61 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!61 -> mfprocwire_res?61 -> oracletransinwire_token?28 -> (oracletransinwire_token!28 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?28)*" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.3/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!98 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!42 -> mmprocwire_req?42 -> MiddlemanServe_mmprocwire_responder_invoke -> oracletransinwire_token?98 -> (oracletransinwire_token!98 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?98)*" visitedStates="452" verifyTime="0.0111598" testport="//@interimmodels.3/@designmodel/@component.2/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!98 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!42 -> mmprocwire_req?42 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_reader_process -> transcheckwire_req!42 -> transcheckwire_req?42 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!42 -> transcheckwire_res?42 -> MiddlemanServe_transcheckwire_reader_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!42 -> mmprocwire_res?42 -> oracletransinwire_token?98 -> (oracletransinwire_token!98 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?98)*" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.3/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.3/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!79 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!51 -> crprocwire_req?51 -> CarrierServe_crprocwire_responder_invoke -> oracletransinwire_token?79 -> (oracletransinwire_token!79 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?79)*" visitedStates="1297" verifyTime="0.0262973" testport="//@interimmodels.3/@designmodel/@component.6/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!79 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!51 -> crprocwire_req?51 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_reader_process -> transcheckwire_req!51 -> transcheckwire_req?51 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!51 -> transcheckwire_res?51 -> CarrierServe_transcheckwire_reader_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!51 -> crprocwire_res?51 -> oracletransinwire_token?79 -> (oracletransinwire_token!79 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?79)*" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.3/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.3/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!54 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!15 -> mfprocwire_req?15 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!15 -> mfreadwire_req?15 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!15 -> mfreadwire_res?15 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!15 -> transcheckwire_req?15 -> OrderTransaction_transcheckwire_readstorage_invoke -> oracletransinwire_token?54 -> (oracletransinwire_token!54 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?54)*" visitedStates="1270" verifyTime="0.0252995" testport="//@interimmodels.3/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!54 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!15 -> mfprocwire_req?15 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!15 -> mfreadwire_req?15 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!15 -> mfreadwire_res?15 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!15 -> transcheckwire_req?15 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!15 -> transcheckwire_res?15 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!15 -> mfprocwire_res?15 -> oracletransinwire_token?54 -> (oracletransinwire_token!54 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?54)*" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.3/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.3/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.3/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="2291" verifyTime="0.048480699999999995" testport="//@interimmodels.3/@designmodel/@component.5/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!46 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!71 -> orderwire_req?71 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!71 -> transinwire_req?71 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!71 -> transinwire_res?71 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!71 -> orderwire_res?71 -> oracletransinwire_token?46 -> (OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token!46 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token?46 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored)*" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.3/@designmodel/@component.5 //@interimmodels.3/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.3/@designmodel/@host.0/@node.0" namedport="//@interimmodels.3/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.3/@designmodel/@component.0 //@interimmodels.3/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.3/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.3/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.3/@designmodel/@component.3 //@interimmodels.3/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.3/@designmodel/@host.2/@node.0" namedport="//@interimmodels.3/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.3/@designmodel/@component.7 //@interimmodels.3/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.3/@designmodel/@host.3/@node.0" namedport="//@interimmodels.3/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.3/@designmodel/@component.8 //@interimmodels.3/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.3/@designmodel/@host.4/@node.0" namedport="//@interimmodels.3/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.3/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.3/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.3/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="6" description="network route for connector:rotranscheckwire between: ordertransaction ordertransactionblockchain " nextModel="//@interimmodels.5" name="network-route">
    <designmodel name="inter6">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.4/@designmodel/@connector.4/@role.1 //@interimmodels.4/@designmodel/@connector.3/@role.0 //@interimmodels.4/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.4/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.4/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.4/@designmodel/@connector.2/@role.0 //@interimmodels.4/@designmodel/@connector.5/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.4/@designmodel/@connector.0/@role.1 //@interimmodels.4/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.4/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.4/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.4/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.4/@designmodel/@connector.2/@role.0 //@interimmodels.4/@designmodel/@connector.6/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" role="//@interimmodels.4/@designmodel/@connector.1/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.4/@designmodel/@connector.2/@role.1 //@interimmodels.4/@designmodel/@connector.8/@role.0" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.4/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.4/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.4/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" role="//@interimmodels.4/@designmodel/@connector.8/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.4/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.1/@role.0" connector="//@interimmodels.4/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="WRConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.1"/>
        <role name="writestorage" roletype="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.1"/>
      </connector>
      <connector name="transcheckwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.2"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.2/@role.0" connector="//@interimmodels.4/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.4/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.3/@role.0" connector="//@interimmodels.4/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.2/@role.0" connector="//@interimmodels.4/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.4/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.4/@designmodel/@connector.2/@role.0" connector="//@interimmodels.4/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.4/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.4/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <connector name="rotranscheckwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.4/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.4/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.4/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.4/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.4/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.4/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.4/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.4/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.4/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.4/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.4/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.4/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.4/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.4/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.4/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.4/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.4/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!41 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!53 -> orderwire_req?53 -> BuyerServe_orderwire_responder_invoke -> oracletransinwire_token?41 -> (oracletransinwire_token!41 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?41)*" visitedStates="1297" verifyTime="0.1032047" testport="//@interimmodels.4/@designmodel/@component.5/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!41 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!53 -> orderwire_req?53 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!53 -> transinwire_req?53 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!53 -> transinwire_res?53 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!53 -> orderwire_res?53 -> oracletransinwire_token?41 -> (oracletransinwire_token!41 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?41)*" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.4/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!30 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!47 -> mfprocwire_req?47 -> ManufacturerServe_mfprocwire_responder_invoke -> oracletransinwire_token?30 -> (oracletransinwire_token!30 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?30)*" visitedStates="1882" verifyTime="0.051940799999999995" testport="//@interimmodels.4/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!30 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!47 -> mfprocwire_req?47 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!47 -> mfreadwire_req?47 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!47 -> mfreadwire_res?47 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!47 -> transcheckwire_req?47 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!47 -> transcheckwire_res?47 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!47 -> mfprocwire_res?47 -> oracletransinwire_token?30 -> (oracletransinwire_token!30 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?30)*" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.4/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!69 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!69 -> mmprocwire_req?69 -> MiddlemanServe_mmprocwire_responder_invoke -> oracletransinwire_token?69 -> (oracletransinwire_token!69 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?69)*" visitedStates="452" verifyTime="0.0124288" testport="//@interimmodels.4/@designmodel/@component.2/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!69 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!69 -> mmprocwire_req?69 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_reader_process -> transcheckwire_req!69 -> transcheckwire_req?69 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!69 -> transcheckwire_res?69 -> MiddlemanServe_transcheckwire_reader_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!69 -> mmprocwire_res?69 -> oracletransinwire_token?69 -> (oracletransinwire_token!69 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?69)*" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.4/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.4/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!35 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!14 -> crprocwire_req?14 -> CarrierServe_crprocwire_responder_invoke -> oracletransinwire_token?35 -> (oracletransinwire_token!35 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?35)*" visitedStates="1297" verifyTime="0.029049799999999997" testport="//@interimmodels.4/@designmodel/@component.6/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!35 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!14 -> crprocwire_req?14 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_reader_process -> transcheckwire_req!14 -> transcheckwire_req?14 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!14 -> transcheckwire_res?14 -> CarrierServe_transcheckwire_reader_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!14 -> crprocwire_res?14 -> oracletransinwire_token?35 -> (oracletransinwire_token!35 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?35)*" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.4/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.4/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!56 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!85 -> mfprocwire_req?85 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!85 -> mfreadwire_req?85 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!85 -> mfreadwire_res?85 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!85 -> transcheckwire_req?85 -> OrderTransaction_transcheckwire_readstorage_invoke -> oracletransinwire_token?56 -> (oracletransinwire_token!56 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?56)*" visitedStates="1270" verifyTime="0.0344109" testport="//@interimmodels.4/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!56 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!85 -> mfprocwire_req?85 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!85 -> mfreadwire_req?85 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!85 -> mfreadwire_res?85 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!85 -> transcheckwire_req?85 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!85 -> transcheckwire_res?85 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!85 -> mfprocwire_res?85 -> oracletransinwire_token?56 -> (oracletransinwire_token!56 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?56)*" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.4/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.4/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.4/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="2291" verifyTime="0.050039299999999995" testport="//@interimmodels.4/@designmodel/@component.5/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!51 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!85 -> orderwire_req?85 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!85 -> transinwire_req?85 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!85 -> transinwire_res?85 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!85 -> orderwire_res?85 -> oracletransinwire_token?51 -> (OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token!51 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token?51 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored)*" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrotranscheckwire" visitedStates="1797" verifyTime="0.039882299999999996" testport="//@interimmodels.4/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!98 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!99 -> mfprocwire_req?99 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!99 -> mfreadwire_req?99 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!99 -> mfreadwire_res?99 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_reader_process -> transcheckwire_req!99 -> transcheckwire_req?99 -> OrderTransaction_transcheckwire_readstorage_invoke -> OrderTransaction_check_verified -> OrderTransaction_transcheckwire_readstorage_process -> transcheckwire_res!99 -> transcheckwire_res?99 -> ManufacturerServe_transcheckwire_reader_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!99 -> mfprocwire_res?99 -> oracletransinwire_token?98 -> (oracletransinwire_token!98 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?98)*" exprText="[] (OrderTransactionBlockchain.rotranscheckwire.blocksupplier.process-> &lt;> OrderTransaction.check.verified)">
        <connector href="target.arch#//@connector.8"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.4/@designmodel/@component.5 //@interimmodels.4/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.4/@designmodel/@host.0/@node.0" namedport="//@interimmodels.4/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.4/@designmodel/@component.0 //@interimmodels.4/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.4/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.4/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.4/@designmodel/@component.3 //@interimmodels.4/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.4/@designmodel/@host.2/@node.0" namedport="//@interimmodels.4/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.4/@designmodel/@component.7 //@interimmodels.4/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.4/@designmodel/@host.3/@node.0" namedport="//@interimmodels.4/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.4/@designmodel/@component.8 //@interimmodels.4/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.4/@designmodel/@host.4/@node.0" namedport="//@interimmodels.4/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.4/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.4/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.4/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="7" description="network route for connector:transcheckwire between: carrierserve ordertransaction " nextModel="//@interimmodels.6" name="network-route">
    <designmodel name="inter7">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.5/@designmodel/@connector.4/@role.1 //@interimmodels.5/@designmodel/@connector.3/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.5/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.5/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.5/@designmodel/@connector.5/@role.1" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.5/@designmodel/@connector.0/@role.1 //@interimmodels.5/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.5/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.5/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.5/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.5/@designmodel/@connector.6/@role.1 //@interimmodels.5/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" role="//@interimmodels.5/@designmodel/@connector.1/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.5/@designmodel/@connector.8/@role.0 //@interimmodels.5/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.5/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.5/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.5/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" role="//@interimmodels.5/@designmodel/@connector.8/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.5/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.1/@role.0" connector="//@interimmodels.5/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="WRConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.1"/>
        <role name="writestorage" roletype="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.1"/>
      </connector>
      <connector name="transcheckwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.8/@role.0" connector="//@interimmodels.5/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.2/@role.0" connector="//@interimmodels.5/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.5/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.3/@role.0" connector="//@interimmodels.5/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.2/@role.0" connector="//@interimmodels.5/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.5/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.5/@designmodel/@connector.2/@role.0" connector="//@interimmodels.5/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.5/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.5/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <connector name="rotranscheckwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.5/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.5/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.5/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.5/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.5/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.5/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.5/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.5/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.5/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.5/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.5/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.5/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.5/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.5/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.5/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.5/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.5/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!89 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!13 -> orderwire_req?13 -> BuyerServe_orderwire_responder_invoke -> oracletransinwire_token?89 -> (oracletransinwire_token!89 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?89)*" visitedStates="1297" verifyTime="0.032225199999999996" testport="//@interimmodels.5/@designmodel/@component.5/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!89 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!13 -> orderwire_req?13 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!13 -> transinwire_req?13 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!13 -> transinwire_res?13 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!13 -> orderwire_res?13 -> oracletransinwire_token?89 -> (oracletransinwire_token!89 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?89)*" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.5/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!68 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!69 -> mfprocwire_req?69 -> ManufacturerServe_mfprocwire_responder_invoke -> oracletransinwire_token?68 -> (oracletransinwire_token!68 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?68)*" visitedStates="2467" verifyTime="0.0534397" testport="//@interimmodels.5/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!68 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!69 -> mfprocwire_req?69 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!69 -> mfreadwire_req?69 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!69 -> mfreadwire_res?69 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!69 -> transcheckwire_req?69 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!69 -> rotranscheckwire_uid?69 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!69 -> rotranscheckwire_res?69 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!69 -> transcheckwire_res?69 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!69 -> mfprocwire_res?69 -> oracletransinwire_token?68 -> (oracletransinwire_token!68 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?68)*" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.5/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!29 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!43 -> mmprocwire_req?43 -> MiddlemanServe_mmprocwire_responder_invoke -> oracletransinwire_token?29 -> (oracletransinwire_token!29 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?29)*" visitedStates="452" verifyTime="0.0119578" testport="//@interimmodels.5/@designmodel/@component.2/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!29 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!43 -> mmprocwire_req?43 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_requester_process -> transcheckwire_req!43 -> transcheckwire_req?43 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!43 -> rotranscheckwire_uid?43 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!43 -> rotranscheckwire_res?43 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!43 -> transcheckwire_res?43 -> MiddlemanServe_transcheckwire_requester_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!43 -> mmprocwire_res?43 -> oracletransinwire_token?29 -> (oracletransinwire_token!29 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?29)*" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.5/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.5/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!42 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!71 -> crprocwire_req?71 -> CarrierServe_crprocwire_responder_invoke -> oracletransinwire_token?42 -> (oracletransinwire_token!42 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?42)*" visitedStates="1882" verifyTime="0.0434733" testport="//@interimmodels.5/@designmodel/@component.6/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!42 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!71 -> crprocwire_req?71 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_requester_process -> transcheckwire_req!71 -> transcheckwire_req?71 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!71 -> rotranscheckwire_uid?71 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!71 -> rotranscheckwire_res?71 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!71 -> transcheckwire_res?71 -> CarrierServe_transcheckwire_requester_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!71 -> crprocwire_res?71 -> oracletransinwire_token?42 -> (oracletransinwire_token!42 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?42)*" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.5/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.5/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!63 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!48 -> mfprocwire_req?48 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!48 -> mfreadwire_req?48 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!48 -> mfreadwire_res?48 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!48 -> transcheckwire_req?48 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!48 -> rotranscheckwire_uid?48 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!48 -> rotranscheckwire_res?48 -> oracletransinwire_token?63 -> (oracletransinwire_token!63 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?63)*" visitedStates="1784" verifyTime="0.035877" testport="//@interimmodels.5/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!63 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!48 -> mfprocwire_req?48 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!48 -> mfreadwire_req?48 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!48 -> mfreadwire_res?48 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!48 -> transcheckwire_req?48 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!48 -> rotranscheckwire_uid?48 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!48 -> rotranscheckwire_res?48 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!48 -> transcheckwire_res?48 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!48 -> mfprocwire_res?48 -> oracletransinwire_token?63 -> (oracletransinwire_token!63 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?63)*" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.5/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.5/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.5/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="2291" verifyTime="0.0490697" testport="//@interimmodels.5/@designmodel/@component.5/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!21 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!69 -> orderwire_req?69 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!69 -> transinwire_req?69 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!69 -> transinwire_res?69 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!69 -> orderwire_res?69 -> oracletransinwire_token?21 -> (OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token!21 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token?21 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored)*" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrotranscheckwire" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!81 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!34 -> mfprocwire_req?34 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!34 -> mfreadwire_req?34 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!34 -> mfreadwire_res?34 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!34 -> transcheckwire_req?34 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!34 -> rotranscheckwire_uid?34 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!34 -> rotranscheckwire_res?34 -> oracletransinwire_token?81 -> (oracletransinwire_token!81 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?81)*" visitedStates="1258" verifyTime="0.0262949" testport="//@interimmodels.5/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!81 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!34 -> mfprocwire_req?34 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!34 -> mfreadwire_req?34 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!34 -> mfreadwire_res?34 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!34 -> transcheckwire_req?34 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!34 -> rotranscheckwire_uid?34 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!34 -> rotranscheckwire_res?34 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!34 -> transcheckwire_res?34 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!34 -> mfprocwire_res?34 -> oracletransinwire_token?81 -> (oracletransinwire_token!81 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?81)*" exprText="[] (OrderTransactionBlockchain.rotranscheckwire.blocksupplier.process-> &lt;> OrderTransaction.check.verified)">
        <connector href="target.arch#//@connector.8"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.5/@designmodel/@component.5 //@interimmodels.5/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.5/@designmodel/@host.0/@node.0" namedport="//@interimmodels.5/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.5/@designmodel/@component.0 //@interimmodels.5/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.5/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.5/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.5/@designmodel/@component.3 //@interimmodels.5/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.5/@designmodel/@host.2/@node.0" namedport="//@interimmodels.5/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.5/@designmodel/@component.7 //@interimmodels.5/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.5/@designmodel/@host.3/@node.0" namedport="//@interimmodels.5/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.5/@designmodel/@component.8 //@interimmodels.5/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.5/@designmodel/@host.4/@node.0" namedport="//@interimmodels.5/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.5/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.5/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.5/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="8" description="network route for connector:transcheckwire between: middlemanserve ordertransaction " nextModel="//@interimmodels.7" name="network-route">
    <designmodel name="inter8">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.6/@designmodel/@connector.4/@role.1 //@interimmodels.6/@designmodel/@connector.3/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.6/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.6/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.6/@designmodel/@connector.5/@role.1 //@interimmodels.6/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.6/@designmodel/@connector.0/@role.1 //@interimmodels.6/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.6/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.6/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.6/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.6/@designmodel/@connector.6/@role.1 //@interimmodels.6/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" role="//@interimmodels.6/@designmodel/@connector.1/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.6/@designmodel/@connector.8/@role.0 //@interimmodels.6/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.6/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.6/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.6/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" role="//@interimmodels.6/@designmodel/@connector.8/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.6/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.1/@role.0" connector="//@interimmodels.6/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="WRConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.1"/>
        <role name="writestorage" roletype="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.1"/>
      </connector>
      <connector name="transcheckwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.8/@role.0" connector="//@interimmodels.6/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.2/@role.0" connector="//@interimmodels.6/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.6/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.3/@role.0" connector="//@interimmodels.6/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.2/@role.0" connector="//@interimmodels.6/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.6/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.6/@designmodel/@connector.2/@role.0" connector="//@interimmodels.6/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.6/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.6/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <connector name="rotranscheckwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.6/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.6/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.6/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.6/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.6/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.6/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.6/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.6/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.6/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.6/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.6/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.6/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.6/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.6/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.6/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.6/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.6/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!64 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!91 -> orderwire_req?91 -> BuyerServe_orderwire_responder_invoke -> oracletransinwire_token?64 -> (oracletransinwire_token!64 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?64)*" visitedStates="1297" verifyTime="0.031183199999999998" testport="//@interimmodels.6/@designmodel/@component.5/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!64 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!91 -> orderwire_req?91 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!91 -> transinwire_req?91 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!91 -> transinwire_res?91 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!91 -> orderwire_res?91 -> oracletransinwire_token?64 -> (oracletransinwire_token!64 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?64)*" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.6/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!87 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!19 -> mfprocwire_req?19 -> ManufacturerServe_mfprocwire_responder_invoke -> oracletransinwire_token?87 -> (oracletransinwire_token!87 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?87)*" visitedStates="2467" verifyTime="0.0501668" testport="//@interimmodels.6/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!87 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!19 -> mfprocwire_req?19 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!19 -> mfreadwire_req?19 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!19 -> mfreadwire_res?19 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!19 -> transcheckwire_req?19 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!19 -> rotranscheckwire_uid?19 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!19 -> rotranscheckwire_res?19 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!19 -> transcheckwire_res?19 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!19 -> mfprocwire_res?19 -> oracletransinwire_token?87 -> (oracletransinwire_token!87 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?87)*" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.6/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!79 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!90 -> mmprocwire_req?90 -> MiddlemanServe_mmprocwire_responder_invoke -> oracletransinwire_token?79 -> (oracletransinwire_token!79 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?79)*" visitedStates="452" verifyTime="0.0124684" testport="//@interimmodels.6/@designmodel/@component.2/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!79 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!90 -> mmprocwire_req?90 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_requester_process -> transcheckwire_req!90 -> transcheckwire_req?90 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!90 -> rotranscheckwire_uid?90 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!90 -> rotranscheckwire_res?90 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!90 -> transcheckwire_res?90 -> MiddlemanServe_transcheckwire_requester_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!90 -> mmprocwire_res?90 -> oracletransinwire_token?79 -> (oracletransinwire_token!79 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?79)*" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.6/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.6/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!99 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!21 -> crprocwire_req?21 -> CarrierServe_crprocwire_responder_invoke -> oracletransinwire_token?99 -> (oracletransinwire_token!99 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?99)*" visitedStates="1882" verifyTime="0.0379384" testport="//@interimmodels.6/@designmodel/@component.6/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!99 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!21 -> crprocwire_req?21 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_requester_process -> transcheckwire_req!21 -> transcheckwire_req?21 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!21 -> rotranscheckwire_uid?21 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!21 -> rotranscheckwire_res?21 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!21 -> transcheckwire_res?21 -> CarrierServe_transcheckwire_requester_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!21 -> crprocwire_res?21 -> oracletransinwire_token?99 -> (oracletransinwire_token!99 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?99)*" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.6/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.6/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!72 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!11 -> mfprocwire_req?11 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!11 -> mfreadwire_req?11 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!11 -> mfreadwire_res?11 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!11 -> transcheckwire_req?11 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!11 -> rotranscheckwire_uid?11 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!11 -> rotranscheckwire_res?11 -> oracletransinwire_token?72 -> (oracletransinwire_token!72 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?72)*" visitedStates="1784" verifyTime="0.039966999999999996" testport="//@interimmodels.6/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!72 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!11 -> mfprocwire_req?11 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!11 -> mfreadwire_req?11 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!11 -> mfreadwire_res?11 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!11 -> transcheckwire_req?11 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!11 -> rotranscheckwire_uid?11 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!11 -> rotranscheckwire_res?11 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!11 -> transcheckwire_res?11 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!11 -> mfprocwire_res?11 -> oracletransinwire_token?72 -> (oracletransinwire_token!72 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?72)*" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.6/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.6/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.6/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="2291" verifyTime="0.0511661" testport="//@interimmodels.6/@designmodel/@component.5/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!78 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!48 -> orderwire_req?48 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!48 -> transinwire_req?48 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!48 -> transinwire_res?48 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!48 -> orderwire_res?48 -> oracletransinwire_token?78 -> (OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token!78 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token?78 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored)*" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrotranscheckwire" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!28 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!52 -> mfprocwire_req?52 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!52 -> mfreadwire_req?52 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!52 -> mfreadwire_res?52 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!52 -> transcheckwire_req?52 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!52 -> rotranscheckwire_uid?52 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!52 -> rotranscheckwire_res?52 -> oracletransinwire_token?28 -> (oracletransinwire_token!28 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?28)*" visitedStates="1258" verifyTime="0.037779599999999997" testport="//@interimmodels.6/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!28 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!52 -> mfprocwire_req?52 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!52 -> mfreadwire_req?52 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!52 -> mfreadwire_res?52 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!52 -> transcheckwire_req?52 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!52 -> rotranscheckwire_uid?52 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!52 -> rotranscheckwire_res?52 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!52 -> transcheckwire_res?52 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!52 -> mfprocwire_res?52 -> oracletransinwire_token?28 -> (oracletransinwire_token!28 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?28)*" exprText="[] (OrderTransactionBlockchain.rotranscheckwire.blocksupplier.process-> &lt;> OrderTransaction.check.verified)">
        <connector href="target.arch#//@connector.8"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.6/@designmodel/@component.5 //@interimmodels.6/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.6/@designmodel/@host.0/@node.0" namedport="//@interimmodels.6/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.6/@designmodel/@component.0 //@interimmodels.6/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.6/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.6/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.6/@designmodel/@component.3 //@interimmodels.6/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.6/@designmodel/@host.2/@node.0" namedport="//@interimmodels.6/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.6/@designmodel/@component.7 //@interimmodels.6/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.6/@designmodel/@host.3/@node.0" namedport="//@interimmodels.6/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.6/@designmodel/@component.8 //@interimmodels.6/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.6/@designmodel/@host.4/@node.0" namedport="//@interimmodels.6/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.6/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.6/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.6/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="9" description="network route for connector:transcheckwire between: manufacturerserve ordertransaction " nextModel="//@interimmodels.8" name="network-route">
    <designmodel name="inter9">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.7/@designmodel/@connector.4/@role.1 //@interimmodels.7/@designmodel/@connector.3/@role.0 //@interimmodels.7/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.7/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.7/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.7/@designmodel/@connector.5/@role.1 //@interimmodels.7/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.7/@designmodel/@connector.0/@role.1 //@interimmodels.7/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.7/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.7/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.7/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.7/@designmodel/@connector.6/@role.1 //@interimmodels.7/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" role="//@interimmodels.7/@designmodel/@connector.1/@role.1" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.7/@designmodel/@connector.8/@role.0 //@interimmodels.7/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.7/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.7/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.7/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" role="//@interimmodels.7/@designmodel/@connector.8/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.7/@designmodel/@connector.7/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.1/@role.0" connector="//@interimmodels.7/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="WRConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0">
        <role name="writer" roletype="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.1"/>
        <role name="writestorage" roletype="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.1"/>
      </connector>
      <connector name="transcheckwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.8/@role.0" connector="//@interimmodels.7/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.2/@role.0" connector="//@interimmodels.7/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.7/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.3/@role.0" connector="//@interimmodels.7/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.2/@role.0" connector="//@interimmodels.7/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.7/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.7/@designmodel/@connector.2/@role.0" connector="//@interimmodels.7/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.7/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.7/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <connector name="rotranscheckwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.7/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.7/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.7/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.7/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.7/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.7/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.7/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.7/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.7/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.7/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.7/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.7/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.7/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.7/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.7/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.7/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.7/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!38 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!81 -> orderwire_req?81 -> BuyerServe_orderwire_responder_invoke -> oracletransinwire_token?38 -> (oracletransinwire_token!38 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?38)*" visitedStates="1297" verifyTime="0.1098391" testport="//@interimmodels.7/@designmodel/@component.5/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!38 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!81 -> orderwire_req?81 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!81 -> transinwire_req?81 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!81 -> transinwire_res?81 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!81 -> orderwire_res?81 -> oracletransinwire_token?38 -> (oracletransinwire_token!38 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?38)*" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.7/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!17 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!53 -> mfprocwire_req?53 -> ManufacturerServe_mfprocwire_responder_invoke -> oracletransinwire_token?17 -> (oracletransinwire_token!17 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?17)*" visitedStates="2467" verifyTime="0.0671136" testport="//@interimmodels.7/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!17 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!53 -> mfprocwire_req?53 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!53 -> mfreadwire_req?53 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!53 -> mfreadwire_res?53 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!53 -> transcheckwire_req?53 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!53 -> rotranscheckwire_uid?53 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!53 -> rotranscheckwire_res?53 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!53 -> transcheckwire_res?53 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!53 -> mfprocwire_res?53 -> oracletransinwire_token?17 -> (oracletransinwire_token!17 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?17)*" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.7/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!45 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!54 -> mmprocwire_req?54 -> MiddlemanServe_mmprocwire_responder_invoke -> oracletransinwire_token?45 -> (oracletransinwire_token!45 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?45)*" visitedStates="452" verifyTime="0.0155121" testport="//@interimmodels.7/@designmodel/@component.2/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!45 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!54 -> mmprocwire_req?54 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_requester_process -> transcheckwire_req!54 -> transcheckwire_req?54 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!54 -> rotranscheckwire_uid?54 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!54 -> rotranscheckwire_res?54 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!54 -> transcheckwire_res?54 -> MiddlemanServe_transcheckwire_requester_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!54 -> mmprocwire_res?54 -> oracletransinwire_token?45 -> (oracletransinwire_token!45 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?45)*" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.7/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.7/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!16 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!89 -> crprocwire_req?89 -> CarrierServe_crprocwire_responder_invoke -> oracletransinwire_token?16 -> (oracletransinwire_token!16 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?16)*" visitedStates="1882" verifyTime="0.049178799999999995" testport="//@interimmodels.7/@designmodel/@component.6/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!16 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!89 -> crprocwire_req?89 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_requester_process -> transcheckwire_req!89 -> transcheckwire_req?89 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!89 -> rotranscheckwire_uid?89 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!89 -> rotranscheckwire_res?89 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!89 -> transcheckwire_res?89 -> CarrierServe_transcheckwire_requester_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!89 -> crprocwire_res?89 -> oracletransinwire_token?16 -> (oracletransinwire_token!16 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?16)*" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.7/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.7/@designmodel" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!74 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!14 -> mfprocwire_req?14 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!14 -> mfreadwire_req?14 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!14 -> mfreadwire_res?14 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!14 -> transcheckwire_req?14 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!14 -> rotranscheckwire_uid?14 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!14 -> rotranscheckwire_res?14 -> oracletransinwire_token?74 -> (oracletransinwire_token!74 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?74)*" visitedStates="1784" verifyTime="0.0379459" testport="//@interimmodels.7/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!74 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!14 -> mfprocwire_req?14 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!14 -> mfreadwire_req?14 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!14 -> mfreadwire_res?14 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!14 -> transcheckwire_req?14 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!14 -> rotranscheckwire_uid?14 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!14 -> rotranscheckwire_res?14 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!14 -> transcheckwire_res?14 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!14 -> mfprocwire_res?14 -> oracletransinwire_token?74 -> (oracletransinwire_token!74 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?74)*" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.7/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.7/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.7/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="2291" verifyTime="0.0470852" testport="//@interimmodels.7/@designmodel/@component.5/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!39 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!23 -> orderwire_req?23 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_writer_process -> transinwire_req!23 -> transinwire_req?23 -> OrderTransaction_transinwire_writestorage_invoke -> OrderTransaction_insert_orderinsert -> OrderTransaction_transinwire_writestorage_process -> transinwire_res!23 -> transinwire_res?23 -> BuyerServe_transinwire_writer_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!23 -> orderwire_res?23 -> oracletransinwire_token?39 -> (OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token!39 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token?39 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored)*" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrotranscheckwire" valid="false" counterExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!58 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!98 -> mfprocwire_req?98 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!98 -> mfreadwire_req?98 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!98 -> mfreadwire_res?98 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!98 -> transcheckwire_req?98 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!98 -> rotranscheckwire_uid?98 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!98 -> rotranscheckwire_res?98 -> oracletransinwire_token?58 -> (oracletransinwire_token!58 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?58)*" visitedStates="1258" verifyTime="0.022783599999999998" testport="//@interimmodels.7/@designmodel/@component.1/@port.0" traceExample="init -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!58 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!98 -> mfprocwire_req?98 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!98 -> mfreadwire_req?98 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!98 -> mfreadwire_res?98 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!98 -> transcheckwire_req?98 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!98 -> rotranscheckwire_uid?98 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!98 -> rotranscheckwire_res?98 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!98 -> transcheckwire_res?98 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!98 -> mfprocwire_res?98 -> oracletransinwire_token?58 -> (oracletransinwire_token!58 -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> oracletransinwire_token?58)*" exprText="[] (OrderTransactionBlockchain.rotranscheckwire.blocksupplier.process-> &lt;> OrderTransaction.check.verified)">
        <connector href="target.arch#//@connector.8"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.7/@designmodel/@component.5 //@interimmodels.7/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.7/@designmodel/@host.0/@node.0" namedport="//@interimmodels.7/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.7/@designmodel/@component.0 //@interimmodels.7/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.7/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.7/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.7/@designmodel/@component.3 //@interimmodels.7/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.7/@designmodel/@host.2/@node.0" namedport="//@interimmodels.7/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.7/@designmodel/@component.7 //@interimmodels.7/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.7/@designmodel/@host.3/@node.0" namedport="//@interimmodels.7/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.7/@designmodel/@component.8 //@interimmodels.7/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.7/@designmodel/@host.4/@node.0" namedport="//@interimmodels.7/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.7/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.7/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.7/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
  <interimmodels step="10" description="network route for connector:transinwire between: buyerserve ordertransactionoracle " isStable="true" name="network-route">
    <designmodel name="inter10">
      <component name="ManufacturerServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0">
        <port name="mfrprocess" role="//@interimmodels.8/@designmodel/@connector.4/@role.1 //@interimmodels.8/@designmodel/@connector.3/@role.0 //@interimmodels.8/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="ManufacturerApp" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.1/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="mfretrieve" role="//@interimmodels.8/@designmodel/@connector.4/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanApp" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="mmretrieve" role="//@interimmodels.8/@designmodel/@connector.5/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="MiddlemanServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.2/@node.0">
        <port name="mmprocess" role="//@interimmodels.8/@designmodel/@connector.5/@role.1 //@interimmodels.8/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="BuyerServe" type="server,datawriter" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.0" securityCharacters="AttackSurface,DenialOfService,DataTampering">
        <port name="createorder" role="//@interimmodels.8/@designmodel/@connector.0/@role.1 //@interimmodels.8/@designmodel/@connector.1/@role.0" type="response,write,OutboundPort,InboundPort">
          <events name="transcreated"/>
        </port>
      </component>
      <component name="BuyerApp" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.0/@node.0">
        <port name="order" role="//@interimmodels.8/@designmodel/@connector.0/@role.0" type="request,OutboundPort">
          <events name="issue"/>
        </port>
      </component>
      <component name="CarrierApp" type="client" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.0" securityCharacters="AttackSurface,Compartmentalization,DenialOfService">
        <port name="crretrieve" role="//@interimmodels.8/@designmodel/@connector.6/@role.0" type="request,OutboundPort">
          <events name="processorder"/>
        </port>
      </component>
      <component name="CarrierServe" type="server,datareader,readendpoint" deploymentnode="//@interimmodels.8/@designmodel/@host.3/@node.0">
        <port name="crprocess" role="//@interimmodels.8/@designmodel/@connector.6/@role.1 //@interimmodels.8/@designmodel/@connector.2/@role.0" type="response,read,OutboundPort,InboundPort">
          <events name="processed"/>
        </port>
      </component>
      <component name="OrderTransaction" type="repository,RuleSecureReading,RuleSecureWriting,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.0" securityCharacters="AttackSurface,DenialOfService">
        <port name="insert" type="store,InboundPort,TamperingProofPort">
          <events name="orderinsert"/>
        </port>
        <port name="check" role="//@interimmodels.8/@designmodel/@connector.8/@role.0 //@interimmodels.8/@designmodel/@connector.2/@role.1" type="access,InboundPort,TamperingProofPort">
          <events name="verified"/>
        </port>
      </component>
      <component name="BillOfMaterial" type="repository,datastore" deploymentnode="//@interimmodels.8/@designmodel/@host.4/@node.0">
        <port name="query" role="//@interimmodels.8/@designmodel/@connector.3/@role.1" type="access,InboundPort">
          <events name="bomqueried"/>
        </port>
      </component>
      <component name="OrderTransactionBlockchain" type="blockchain,datastore">
        <port name="ordappend" role="//@interimmodels.8/@designmodel/@connector.7/@role.0" type="bcstore,InboundPort">
          <events name="appended"/>
        </port>
        <port name="ordaccess" role="//@interimmodels.8/@designmodel/@connector.8/@role.1" type="blocksupply,InboundPort">
          <events name="accessed"/>
        </port>
        <deploymentnode href="target.arch#//@host.5/@node.0"/>
      </component>
      <component name="OrderTransactionOracle" type="oracle,server">
        <port name="supply" role="//@interimmodels.8/@designmodel/@connector.7/@role.1 //@interimmodels.8/@designmodel/@connector.1/@role.1" type="orafeed,response,OutboundPort,InboundPort">
          <events name="supplied"/>
        </port>
        <deploymentnode href="target.arch#//@host.4/@node.2"/>
      </component>
      <connector name="orderwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.0"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.1/@role.0" connector="//@interimmodels.8/@designmodel/@connector.0"/>
      </connector>
      <connector name="transinwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.1"/>
        <role name="responder" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.7/@role.1">
          <roletype href="target.arch#//@archstyle.7/@connectortype.0/@roletype.1"/>
          <connector href="target.arch#//@connector.1"/>
        </role>
      </connector>
      <connector name="transcheckwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.2"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.8/@role.0" connector="//@interimmodels.8/@designmodel/@connector.2"/>
      </connector>
      <connector name="mfreadwire" type="REConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0">
        <role name="reader" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0" type="out" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.2/@role.0" connector="//@interimmodels.8/@designmodel/@connector.3"/>
        <role name="readstorage" roletype="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1" type="in" connector="//@interimmodels.8/@designmodel/@connector.3"/>
      </connector>
      <connector name="mfprocwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.4"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.3/@role.0" connector="//@interimmodels.8/@designmodel/@connector.4"/>
      </connector>
      <connector name="mmprocwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.5"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.2/@role.0" connector="//@interimmodels.8/@designmodel/@connector.5"/>
      </connector>
      <connector name="crprocwire" type="CSConnector" connectortype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0">
        <role name="requester" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0" type="out" connector="//@interimmodels.8/@designmodel/@connector.6"/>
        <role name="responder" roletype="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1" type="in" nextRoleExpr="//@interimmodels.8/@designmodel/@connector.2/@role.0" connector="//@interimmodels.8/@designmodel/@connector.6"/>
      </connector>
      <connector name="oracletransinwire" type="IOConnector">
        <role name="blockstorage" type="in" connector="//@interimmodels.8/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.0"/>
        </role>
        <role name="extsupplier" type="out" connector="//@interimmodels.8/@designmodel/@connector.7">
          <roletype href="target.arch#//@archstyle.2/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.2/@connectortype.0"/>
      </connector>
      <connector name="rotranscheckwire" type="ROConnector">
        <role name="extquerier" type="out" connector="//@interimmodels.8/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.0"/>
        </role>
        <role name="blocksupplier" type="in" connector="//@interimmodels.8/@designmodel/@connector.8">
          <roletype href="target.arch#//@archstyle.3/@connectortype.0/@roletype.1"/>
        </role>
        <connectortype href="target.arch#//@archstyle.3/@connectortype.0"/>
      </connector>
      <archstyle name="publish-subscribe">
        <connectortype name="PSConnector">
          <roletype name="publisher" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.0"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="subscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.0/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="pub" next="//@interimmodels.8/@designmodel/@archstyle.0/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
        </connectortype>
        <componenttype name="broadcaster">
          <porttype name="broadcast"/>
        </componenttype>
        <componenttype name="listener">
          <porttype name="listen"/>
        </componenttype>
      </archstyle>
      <archstyle name="event-sourcing">
        <connectortype name="ESConnector">
          <roletype name="eventpublisher" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.0"/>
            <event xsi:type="arch:Channel" name="sevt" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.4" type="input"/>
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.5" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.0"/>
            <event name="broadcast" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.3"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="eventsubscriber" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="bevt" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="eventstore" porttype="//@interimmodels.8/@designmodel/@archstyle.1/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="pevt" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.3"/>
            <event xsi:type="arch:Channel" name="sevt" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist" next="//@interimmodels.8/@designmodel/@archstyle.1/@connectortype.0/@roletype.2/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="eventsource">
          <porttype name="publish"/>
        </componenttype>
        <componenttype name="eventconsumer">
          <porttype name="listen"/>
        </componenttype>
        <componenttype name="eventlogger">
          <porttype name="log"/>
        </componenttype>
      </archstyle>
      <archstyle name="oracle">
        <connectortype name="IOConnector">
          <roletype name="blockstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="token" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.2"/>
            <event name="stored"/>
          </roletype>
          <roletype name="extsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.2/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="token" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.2/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="bcstore"/>
        </componenttype>
        <componenttype name="oracle">
          <porttype name="orafeed"/>
        </componenttype>
      </archstyle>
      <archstyle name="reverse-oracle">
        <connectortype name="ROConnector">
          <roletype name="extquerier" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.0/@porttype.0">
            <event name="request" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.4"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="blocksupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.3/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="uid" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.3/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="reverseoracle">
          <porttype name="blockquery"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="blocksupply"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-put">
        <connectortype name="OSPConnector">
          <roletype name="hashlogger" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process"/>
          </roletype>
          <roletype name="hashsupplier" porttype="//@interimmodels.8/@designmodel/@archstyle.4/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.1/@event.1"/>
            <event xsi:type="arch:Channel" name="hash" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.4/@connectortype.0/@roletype.0/@event.0"/>
          </roletype>
        </connectortype>
        <componenttype name="storage">
          <porttype name="hashsupply"/>
        </componenttype>
        <componenttype name="blockchain">
          <porttype name="hashlog"/>
        </componenttype>
      </archstyle>
      <archstyle name="offchain-storage-fetch">
        <connectortype name="OSFConnector">
          <roletype name="hashvalidator" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.0/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.2"/>
            <event name="check" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1"/>
          </roletype>
          <roletype name="hashchecker" porttype="//@interimmodels.8/@designmodel/@archstyle.5/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="hash" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.0/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.2" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.5/@connectortype.0/@roletype.1/@event.3"/>
            <event name="Skip"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="hashvalidate"/>
        </componenttype>
        <componenttype name="storage">
          <porttype name="hashcheck"/>
        </componenttype>
      </archstyle>
      <archstyle name="factory-contract">
        <connectortype name="FCConnector">
          <roletype name="contractcreator" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.1/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.1"/>
            <event name="create" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.0/@event.2"/>
            <event xsi:type="arch:Channel" name="smcon" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.2"/>
          </roletype>
          <roletype name="contractdeployer" porttype="//@interimmodels.8/@designmodel/@archstyle.6/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.1"/>
            <event name="deploy"/>
            <event xsi:type="arch:Channel" name="smcon" next="//@interimmodels.8/@designmodel/@archstyle.6/@connectortype.0/@roletype.1/@event.0" type="input"/>
          </roletype>
        </connectortype>
        <componenttype name="blockchain">
          <porttype name="contractdeploy"/>
        </componenttype>
        <componenttype name="contractfactory">
          <porttype name="contractcreate"/>
        </componenttype>
      </archstyle>
      <archstyle name="client-server">
        <connectortype name="CSConnector">
          <roletype name="requester" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="responder" porttype="//@interimmodels.8/@designmodel/@archstyle.7/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.7/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="client">
          <porttype name="request"/>
        </componenttype>
        <componenttype name="server">
          <porttype name="response"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-read">
        <connectortype name="REConnector">
          <roletype name="reader" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstorage" porttype="//@interimmodels.8/@designmodel/@archstyle.8/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.8/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datareader">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="access"/>
        </componenttype>
      </archstyle>
      <archstyle name="command-responsibility">
        <connectortype name="CRConnector">
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.2"/>
            <event name="persist"/>
          </roletype>
          <roletype name="commander" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.0/@event.0"/>
            <event name="Skip"/>
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.1/@event.1" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.0"/>
          </roletype>
          <roletype name="commandstore" porttype="//@interimmodels.8/@designmodel/@archstyle.9/@componenttype.2/@porttype.0">
            <event xsi:type="arch:Channel" name="cmmd" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.9/@connectortype.0/@roletype.2/@event.2"/>
            <event name="persist"/>
          </roletype>
        </connectortype>
        <componenttype name="commandendpoint">
          <porttype name="issue"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="update"/>
        </componenttype>
        <componenttype name="commanddb">
          <porttype name="logcommand"/>
        </componenttype>
      </archstyle>
      <archstyle name="query-responsibility">
        <connectortype name="QRConnector">
          <roletype name="querier" porttype="//@interimmodels.8/@designmodel/@archstyle.10/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.3"/>
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.0" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="readstore" porttype="//@interimmodels.8/@designmodel/@archstyle.10/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="stmt" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.1/@event.2"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.10/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="readendpoint">
          <porttype name="read"/>
        </componenttype>
        <componenttype name="viewdb">
          <porttype name="query"/>
        </componenttype>
      </archstyle>
      <archstyle name="repository-write">
        <connectortype name="WRConnector">
          <roletype name="writer" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.0/@porttype.0">
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.1"/>
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.0"/>
            <event xsi:type="arch:Channel" name="res" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.3" type="input"/>
            <event name="Skip"/>
          </roletype>
          <roletype name="writestorage" porttype="//@interimmodels.8/@designmodel/@archstyle.11/@componenttype.1/@porttype.0">
            <event xsi:type="arch:Channel" name="req" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.1" type="input"/>
            <event name="invoke" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.2"/>
            <event name="process" next="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.1/@event.3"/>
            <event xsi:type="arch:Channel" name="res" type="output" bind="//@interimmodels.8/@designmodel/@archstyle.11/@connectortype.0/@roletype.0/@event.2"/>
          </roletype>
        </connectortype>
        <componenttype name="datawriter">
          <porttype name="write"/>
        </componenttype>
        <componenttype name="repository">
          <porttype name="store"/>
        </componenttype>
      </archstyle>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop1" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="86" verifyTime="0.0054784" testport="//@interimmodels.8/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!81 -> orderwire_req?81 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!81 -> transinwire_req?81 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!81 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!81 -> oracletransinwire_token?81 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?81 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!81 -> orderwire_res?81" exprText="[]  (BuyerApp.order.issue -> &lt;> BuyerServe.createorder.transcreated)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.0">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.4/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.5/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.0/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop2" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="42" verifyTime="0.0068191" testport="//@interimmodels.8/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!78 -> mfprocwire_req?78 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!78 -> mfreadwire_req?78 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!78 -> mfreadwire_res?78 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!78 -> transcheckwire_req?78 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!78 -> rotranscheckwire_uid?78 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!78 -> rotranscheckwire_res?78 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!78 -> transcheckwire_res?78 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!78 -> mfprocwire_res?78" exprText="[]  (ManufacturerApp.mfretrieve.processorder -> &lt;> ManufacturerServe.mfrprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.1">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.1/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.1/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop3" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="11" verifyTime="0.0033166999999999997" testport="//@interimmodels.8/@designmodel/@component.2/@port.0" traceExample="init -> MiddlemanApp_mmretrieve_processorder -> MiddlemanApp_mmprocwire_requester_process -> mmprocwire_req!84 -> mmprocwire_req?84 -> MiddlemanServe_mmprocwire_responder_invoke -> MiddlemanServe_mmprocess_processed -> MiddlemanServe_transcheckwire_requester_process -> transcheckwire_req!84 -> transcheckwire_req?84 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!84 -> rotranscheckwire_uid?84 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!84 -> rotranscheckwire_res?84 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!84 -> transcheckwire_res?84 -> MiddlemanServe_transcheckwire_requester_Skip -> MiddlemanServe_mmprocwire_responder_process -> mmprocwire_res!84 -> mmprocwire_res?84" exprText=" (&lt;> MiddlemanApp.mmretrieve.processorder -> &lt;> MiddlemanServe.mmprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.8/@designmodel/@verifyProperty.2">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.3/@port.0/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.2/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.2/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop4" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="33" verifyTime="0.0065536" testport="//@interimmodels.8/@designmodel/@component.6/@port.0" traceExample="init -> CarrierApp_crretrieve_processorder -> CarrierApp_crprocwire_requester_process -> crprocwire_req!36 -> crprocwire_req?36 -> CarrierServe_crprocwire_responder_invoke -> CarrierServe_crprocess_processed -> CarrierServe_transcheckwire_requester_process -> transcheckwire_req!36 -> transcheckwire_req?36 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!36 -> rotranscheckwire_uid?36 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!36 -> rotranscheckwire_res?36 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!36 -> transcheckwire_res?36 -> CarrierServe_transcheckwire_requester_Skip -> CarrierServe_crprocwire_responder_process -> crprocwire_res!36 -> crprocwire_res?36" exprText="[]  (CarrierApp.crretrieve.processorder -> &lt;> CarrierServe.crprocess.processed)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" operator="ALWAYS" property="//@interimmodels.8/@designmodel/@verifyProperty.3">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.6/@port.0/@events.0" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.3/@ltlexpr.0/@expr.1"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.7/@port.0/@events.0" operator="EVENTUALLY"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="prop5" model="//@interimmodels.8/@designmodel" counterExample="" visitedStates="48" verifyTime="0.0055108" testport="//@interimmodels.8/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!24 -> mfprocwire_req?24 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!24 -> mfreadwire_req?24 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!24 -> mfreadwire_res?24 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!24 -> transcheckwire_req?24 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!24 -> rotranscheckwire_uid?24 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!24 -> rotranscheckwire_res?24 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!24 -> transcheckwire_res?24 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!24 -> mfprocwire_res?24" exprText=" (&lt;> ManufacturerServe.mfrprocess.processed -> &lt;> OrderTransaction.check.verified)">
        <ltlexpr xsi:type="arch:LTLNestedExpr" property="//@interimmodels.8/@designmodel/@verifyProperty.4">
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.8/@port.1/@events.0" operator="EVENTUALLY"/>
          <expr xsi:type="arch:LTLRegularExpr" event="//@interimmodels.8/@designmodel/@component.0/@port.0/@events.0" operator="EVENTUALLY" nextExpr="//@interimmodels.8/@designmodel/@verifyProperty.4/@ltlexpr.0/@expr.0"/>
        </ltlexpr>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-writeoracletransinwire" visitedStates="136" verifyTime="0.0050931" testport="//@interimmodels.8/@designmodel/@component.5/@port.0" traceExample="init -> BuyerApp_order_issue -> BuyerApp_orderwire_requester_process -> orderwire_req!31 -> orderwire_req?31 -> BuyerServe_orderwire_responder_invoke -> BuyerServe_createorder_transcreated -> BuyerServe_transinwire_requester_process -> transinwire_req!31 -> transinwire_req?31 -> OrderTransactionOracle_transinwire_responder_invoke -> OrderTransactionOracle_supply_supplied -> OrderTransactionOracle_oracletransinwire_extsupplier_process -> oracletransinwire_token!31 -> OrderTransactionOracle_transinwire_responder_process -> transinwire_res!31 -> oracletransinwire_token?31 -> OrderTransactionBlockchain_ordappend_appended -> OrderTransactionBlockchain_oracletransinwire_blockstorage_process -> OrderTransactionBlockchain_oracletransinwire_blockstorage_stored -> transinwire_res?31 -> BuyerServe_transinwire_requester_Skip -> BuyerServe_orderwire_responder_process -> orderwire_res!31 -> orderwire_res?31" exprText="[] (OrderTransactionOracle.supply.supplied-> &lt;> OrderTransactionBlockchain.oracletransinwire.blockstorage.stored)">
        <connector href="target.arch#//@connector.7"/>
      </verifyProperty>
      <verifyProperty xsi:type="arch:BehaviourProperty" name="secure-readrotranscheckwire" visitedStates="40" verifyTime="0.0040267" testport="//@interimmodels.8/@designmodel/@component.1/@port.0" traceExample="init -> ManufacturerApp_mfretrieve_processorder -> ManufacturerApp_mfprocwire_requester_process -> mfprocwire_req!16 -> mfprocwire_req?16 -> ManufacturerServe_mfprocwire_responder_invoke -> ManufacturerServe_mfrprocess_processed -> ManufacturerServe_mfreadwire_reader_process -> mfreadwire_req!16 -> mfreadwire_req?16 -> BillOfMaterial_mfreadwire_readstorage_invoke -> BillOfMaterial_query_bomqueried -> BillOfMaterial_mfreadwire_readstorage_process -> mfreadwire_res!16 -> mfreadwire_res?16 -> ManufacturerServe_mfreadwire_reader_Skip -> ManufacturerServe_transcheckwire_requester_process -> transcheckwire_req!16 -> transcheckwire_req?16 -> OrderTransaction_transcheckwire_responder_invoke -> OrderTransaction_rotranscheckwire_extquerier_request -> rotranscheckwire_uid!16 -> rotranscheckwire_uid?16 -> OrderTransactionBlockchain_ordaccess_accessed -> OrderTransactionBlockchain_rotranscheckwire_blocksupplier_process -> rotranscheckwire_res!16 -> rotranscheckwire_res?16 -> OrderTransaction_check_verified -> OrderTransaction_rotranscheckwire_extquerier_process -> OrderTransaction_rotranscheckwire_extquerier_Skip -> OrderTransaction_transcheckwire_responder_process -> transcheckwire_res!16 -> transcheckwire_res?16 -> ManufacturerServe_transcheckwire_requester_Skip -> ManufacturerServe_mfprocwire_responder_process -> mfprocwire_res!16 -> mfprocwire_res?16" exprText="[] (OrderTransactionBlockchain.rotranscheckwire.blocksupplier.process-> &lt;> OrderTransaction.check.verified)">
        <connector href="target.arch#//@connector.8"/>
      </verifyProperty>
      <host name="BuyerServer">
        <node type="APPLICATION_CONTAINER" name="AppServer1" component="//@interimmodels.8/@designmodel/@component.5 //@interimmodels.8/@designmodel/@component.4">
          <port name="port" portNumber="12321" node="//@interimmodels.8/@designmodel/@host.0/@node.0" namedport="//@interimmodels.8/@designmodel/@component.5/@port.0"/>
        </node>
      </host>
      <host name="MFServer">
        <node name="AppServer2" component="//@interimmodels.8/@designmodel/@component.0 //@interimmodels.8/@designmodel/@component.1">
          <port name="port" portNumber="12231" node="//@interimmodels.8/@designmodel/@host.1/@node.0"/>
          <port name="port" portNumber="12232" node="//@interimmodels.8/@designmodel/@host.1/@node.0"/>
        </node>
      </host>
      <host name="MMServer">
        <node name="AppServer3" component="//@interimmodels.8/@designmodel/@component.3 //@interimmodels.8/@designmodel/@component.2">
          <port name="port" portNumber="12232" node="//@interimmodels.8/@designmodel/@host.2/@node.0" namedport="//@interimmodels.8/@designmodel/@component.3/@port.0"/>
        </node>
      </host>
      <host name="CRServer">
        <node name="AppServer4" component="//@interimmodels.8/@designmodel/@component.7 //@interimmodels.8/@designmodel/@component.6">
          <port name="port" portNumber="12234" node="//@interimmodels.8/@designmodel/@host.3/@node.0" namedport="//@interimmodels.8/@designmodel/@component.7/@port.0"/>
        </node>
      </host>
      <host netAccessType="PUBLIC" name="PublicServer" hostType="CLOUD_PLATFORM">
        <node name="MySQL" component="//@interimmodels.8/@designmodel/@component.8 //@interimmodels.8/@designmodel/@component.9">
          <port name="port" portNumber="8081" node="//@interimmodels.8/@designmodel/@host.4/@node.0" namedport="//@interimmodels.8/@designmodel/@component.8/@port.0"/>
          <port name="port" portNumber="8082" node="//@interimmodels.8/@designmodel/@host.4/@node.0"/>
        </node>
      </host>
      <link name="link1"/>
      <link name="link3" networkType="INTERNET"/>
      <link name="link2" networkType="INTERNET"/>
      <link name="link4"/>
      <link name="link5" networkType="INTERNET"/>
      <link name="link6"/>
      <link name="link7" networkType="INTERNET"/>
      <link name="link8"/>
      <link name="link9" networkType="INTERNET"/>
      <link name="link10"/>
      <link name="link11"/>
      <link name="link12"/>
      <link name="link13"/>
      <link name="link14" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.0/@node.0/@port.0"/>
      <link name="link15" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.0"/>
      <link name="link16" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.2/@node.0/@port.0"/>
      <link name="link17"/>
      <link name="link18" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.3/@node.0/@port.0"/>
      <link name="link19" linkType="HTTPS" networkType="INTERNET" target="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.0"/>
      <link name="link20" linkType="HTTPS" networkType="INTERNET" source="//@interimmodels.8/@designmodel/@host.1/@node.0/@port.1" target="//@interimmodels.8/@designmodel/@host.4/@node.0/@port.1"/>
      <ontologylabel name="RuleSecureReading" expression="repository and (hasPort some (TamperingProofPort and (hasAttachment some readstorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="EventProcessorPort" subClassOf="Port"/>
      <ontologylabel name="TamperingProofPort" subClassOf="Port"/>
      <ontologylabel name="RuleEventCentre" expression="PSConnector and (hasRole some  (Role and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleEventQuery" expression="REConnector and (hasRole some (reader and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
      <ontologylabel name="RuleSecureWriting" expression="repository and (hasPort some  (TamperingProofPort and (hasAttachment some writestorage)))" subClassOf="RefactorRule"/>
      <ontologylabel name="datastore" expression="blockchain or repository or eventlogger or commanddb or viewdb"/>
      <ontologylabel name="RuleEventCommand" expression="WRConnector and (hasRole some (writer and (isAttachmentOf some EventProcessorPort)))" subClassOf="RefactorRule"/>
    </designmodel>
  </interimmodels>
</arch:MigrationModel>
